        -:    0:Source:/home/rc/ZathuraDbg/src/main.cpp
        -:    0:Graph:/home/rc/ZathuraDbg/src/cmake-build-debug-coverage/CMakeFiles/Zathura.dir/main.cpp.gcno
        -:    0:Data:/home/rc/ZathuraDbg/src/cmake-build-debug-coverage/CMakeFiles/Zathura.dir/main.cpp.gcda
        -:    0:Runs:1
        -:    1:#define IMGUI_DEFINE_MATH_OPERATORS
        -:    2:#include "../vendor/imgui/imgui_internal.h"
        -:    3:#include "../vendor/imgui/imgui.h"
        -:    4:#include "../vendor/imgui/backends/imgui_impl_glfw.h"
        -:    5:#include "../vendor/imgui/backends/imgui_impl_opengl3.h"
        -:    6:#include <cstdio>
        -:    7:#include "../vendor/ImGuiColorTextEdit/TextEditor.h"
        -:    8:#include "app/app.hpp"
        -:    9:#include "../vendor/whereami/src/whereami.h"
        -:   10:#define GL_SILENCE_DEPRECATION
        -:   11:#if defined(IMGUI_IMPL_OPENGL_ES2)
        -:   12:#include <GLES2/gl2.h>
        -:   13:#endif
        -:   14:#include <GLFW/glfw3.h> // Will drag system OpenGL headers
        -:   15:#include <fstream>
        -:   16:#include <chrono>
        -:   17:#include <thread>
        -:   18:#include <filesystem>
        -:   19:GLFWwindow* window = nullptr;
        -:   20:#if defined(_MSC_VER) && (_MSC_VER >= 1900) && !defined(IMGUI_DISABLE_WIN32_FUNCTIONS)
        -:   21:#pragma comment(lib, "legacy_stdio_definitions")
        -:   22:#endif
        -:   23:#define STB_IMAGE_IMPLEMENTATION
        -:   24:#include "utils/stb_image.h"
        -:   25:
function _ZL19glfw_error_callbackiPKc called 1 returned 100% blocks executed 100%
        1:   26:static void glfw_error_callback(int error, const char* description)
        -:   27:{
        1:   28:    fprintf(stderr, "GLFW Error %d: %s\n", error, description);
        1:   28-block 2
call    0 returned 1
        1:   29:}
        -:   30:
function _Z13destroyWindowv called 1 returned 100% blocks executed 100%
        1:   31:void destroyWindow(){
        1:   32:    ImGui_ImplOpenGL3_Shutdown();
        1:   32-block 2
call    0 returned 1
        1:   33:    ImGui_ImplGlfw_Shutdown();
call    0 returned 1
        1:   34:    ImGui::DestroyContext();
call    0 returned 1
        -:   35:
        1:   36:    glfwDestroyWindow(window);
call    0 returned 1
        1:   37:    glfwTerminate();
call    0 returned 1
        1:   38:}
        -:   39:
        -:   40:float frameRate = 120;
        -:   41:
function main called 1 returned 100% blocks executed 33%
        1:   42:int main(int argc, const char** argv)
        -:   43:{
        1:   44:    glfwSetErrorCallback(glfw_error_callback);
        1:   44-block 2
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   45:    if (!glfwInit())
        1:   45-block 3
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   45-block 4
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    #####:   46:        return 1;
    %%%%%:   46-block 5
        -:   47:
        -:   48:#if defined(IMGUI_IMPL_OPENGL_ES2)
        -:   49:    // GL ES 2.0 + GLSL 100
        -:   50:    const char* glsl_version = "#version 100";
        -:   51:    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 2);
        -:   52:    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 0);
        -:   53:    glfwWindowHint(GLFW_CLIENT_API, GLFW_OPENGL_ES_API);
        -:   54:#elif defined(__APPLE__)
        -:   55:    // GL 3.2 + GLSL 150
        -:   56:    const char* glsl_version = "#version 150";
        -:   57:    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
        -:   58:    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 2);
        -:   59:    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);  // 3.2+ only
        -:   60:    glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);            // Required on Mac
        -:   61:#else
        1:   62:    const char* glsl_version = "#version 130";
        1:   63:    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
        1:   63-block 6
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   64:    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 0);
        1:   64-block 7
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   65:#endif
        1:   66:    glfwWindowHint(GLFW_DECORATED, GLFW_TRUE);
        1:   66-block 8
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   67:    window = glfwCreateWindow(glfwGetVideoMode(glfwGetPrimaryMonitor())->width, glfwGetVideoMode(glfwGetPrimaryMonitor())->height, "Zathura!", nullptr, nullptr);
        1:   67-block 9
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   67-block 10
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   67-block 11
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   67-block 12
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   67-block 13
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:   68:    glfwSetWindowSizeLimits(window, 980, 435, GLFW_DONT_CARE, GLFW_DONT_CARE);
        1:   68-block 14
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   69:
        1:   70:    if (window == nullptr)
        1:   70-block 15
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:   71:        return 1;
    %%%%%:   71-block 16
        -:   72:
        1:   73:    glfwHideWindow(window);
        1:   73-block 17
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   74:    glfwMakeContextCurrent(window);
        1:   74-block 18
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   75:    glfwSwapInterval(1); // Enable vsync
        1:   75-block 19
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   76:
        -:   77:    {
        -:   78:        int dirnameLength;
        -:   79:
        1:   80:        int length = wai_getExecutablePath(nullptr, 0, &dirnameLength);
        1:   80-block 20
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   81:        if (length > 0) {
        1:   81-block 21
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:   82:            char* path = nullptr;
        1:   83:            path = static_cast<char *>(malloc(length + 1));
        1:   84:            if (path == nullptr) {
        1:   84-block 22
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:   85:                tinyfd_messageBox("Whereami error!", "Failed to get executable path!", "ok", "error", 0);
    %%%%%:   85-block 23
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   86:                return 1;
    %%%%%:   86-block 24
        -:   87:            }
        1:   88:            wai_getExecutablePath(path, length, &dirnameLength);
        1:   88-block 25
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   89:            path[dirnameLength] = '\0';
        1:   89-block 26
        1:   90:            executablePath = std::string(path);
        1:   90-block 28
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   90-block 29
call    3 returned 1
call    4 returned 1
    $$$$$:   90-block 182
    $$$$$:   90-block 183
        1:   91:            selectedFile = relativeToRealPath(executablePath, "test.asm");
        1:   91-block 32
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   91-block 33
call    3 returned 1
call    4 returned 1
    $$$$$:   91-block 184
        1:   92:            free(path);
        -:   93:        }
        -:   94:    }
        -:   95:
        1:   96:    IMGUI_CHECKVERSION();
        1:   96-block 36
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   97:    ImGui::CreateContext();
        1:   97-block 37
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   98:    ImGuiIO& io = ImGui::GetIO();
        1:   98-block 38
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   99:    io.IniFilename = "config.zlyt";
        1:  100:	io.ConfigFlags |= ImGuiConfigFlags_DockingEnable;
        -:  101:
        1:  102:    loadIniFile();
        1:  102-block 39
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  103:    io = setupIO();
        1:  103-block 40
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  103-block 41
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        -:  104:
        1:  105:    ImGuiStyle& style = ImGui::GetStyle();
        1:  105-block 42
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  106:    if (io.ConfigFlags & ImGuiConfigFlags_ViewportsEnable)
        1:  106-block 43
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        -:  107:    {
    #####:  108:        style.WindowRounding = 2.0f;
    #####:  109:        style.Colors[ImGuiCol_WindowBg].w = 1.0f;
    %%%%%:  109-block 44
        -:  110:    }
        -:  111:
        1:  112:    ImGui_ImplGlfw_InitForOpenGL(window, true);
        1:  112-block 45
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  113:    ImGui_ImplOpenGL3_Init(glsl_version);
        1:  113-block 46
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  114:
        -:  115:    GLFWimage icons[1];
        1:  116:    icons[0].pixels = stbi_load("../assets/ZathuraDbg.png", &icons[0].width, &icons[0].height, nullptr, 4);
        1:  116-block 47
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  117:    glfwSetWindowIcon(window, 1, icons); // Set icon
        1:  117-block 48
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  118:    stbi_image_free(icons[0].pixels);
        1:  118-block 49
call    0 returned 1
        -:  119:
        -:  120:    // rotate log files after they fill more than 3MB of space
        1:  121:    std::filesystem::path logPath = executablePath + "/.Zathura.zlog";
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  121-block 51
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  121-block 52
call    6 returned 1
    $$$$$:  121-block 186
call    7 never executed
    $$$$$:  121-block 188
        1:  122:    if (std::filesystem::exists(logPath))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  122-block 54
branch  3 taken 0 (fallthrough)
branch  4 taken 1
        -:  123:    {
    #####:  124:        std::ifstream logFile(logPath, std::ifstream::ate | std::ifstream::binary);
    %%%%%:  124-block 55
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####:  125:        if (logFile.tellg() > 3000)
    %%%%%:  125-block 57
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  125-block 58
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    $$$$$:  125-block 189
        -:  126:        {
    #####:  127:            if (std::filesystem::remove(logPath))
    %%%%%:  127-block 60
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  127-block 61
branch  3 never executed (fallthrough)
branch  4 never executed
        -:  128:            {
    #####:  129:                LOG_ALERT("Logging restarted!");
    %%%%%:  129-block 62
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:  129-block 64
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%:  129-block 66
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:  129-block 67
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    %%%%%:  129-block 68
call   12 never executed
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:  129-block 71
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:  129-block 72
    %%%%%:  129-block 74
call   20 never executed
branch 21 never executed (fallthrough)
branch 22 never executed (throw)
    %%%%%:  129-block 75
call   23 never executed
branch 24 never executed (fallthrough)
branch 25 never executed (throw)
    %%%%%:  129-block 76
call   26 never executed
branch 27 never executed (fallthrough)
branch 28 never executed (throw)
    %%%%%:  129-block 77
call   29 never executed
branch 30 never executed (fallthrough)
branch 31 never executed (throw)
    %%%%%:  129-block 78
call   32 never executed
branch 33 never executed (fallthrough)
branch 34 never executed (throw)
    %%%%%:  129-block 79
call   35 never executed
branch 36 never executed (fallthrough)
branch 37 never executed (throw)
    %%%%%:  129-block 80
call   38 never executed
call   39 never executed
    %%%%%:  129-block 83
call   40 never executed
call   41 never executed
    %%%%%:  129-block 86
call   42 never executed
branch 43 never executed
branch 44 never executed (fallthrough)
    $$$$$:  129-block 190
call   45 never executed
    $$$$$:  129-block 192
call   46 never executed
    $$$$$:  129-block 196
    $$$$$:  129-block 197
    $$$$$:  129-block 198
    $$$$$:  129-block 199
call   47 never executed
    $$$$$:  129-block 201
    $$$$$:  129-block 202
call   48 never executed
    $$$$$:  129-block 204
        -:  130:            }
        -:  131:        }
    #####:  132:    }
    %%%%%:  132-block 88
call    0 never executed
    $$$$$:  132-block 205
call    1 never executed
        -:  133:
        1:  134:    ImVec4 clearColor = hexToImVec4("101010");
        1:  134-block 90
call    0 returned 1
        1:  135:    setupAppStyle();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  136:    setupEditor();
        1:  136-block 92
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  137:
        1:  138:    MEMORY_EDITOR_BASE = ENTRY_POINT_ADDRESS;
        -:  139:
        1:  140:    memoryEditorWindow.WriteFn = &hexWriteFunc;
        1:  141:    stackEditor.WriteFn = &stackWriteFunc;
        1:  142:    stackEditor.OptShowAscii = false;
        1:  143:    stackEditor.Cols = 8;
        -:  144:
        1:  145:    if (!createStack(&uc)){
        1:  145-block 93
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  145-block 94
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    #####:  146:        tinyfd_messageBox("Keystone Engine error!", "Unable to initialize the stack. If the issue persists please create a GitHub issue and report your logs.", "ok", "error", 0);
    %%%%%:  146-block 95
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  147:        LOG_ERROR("Failed to create stack!");
    %%%%%:  147-block 96
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:  147-block 98
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%:  147-block 100
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:  147-block 101
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    %%%%%:  147-block 102
call   12 never executed
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:  147-block 105
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:  147-block 106
    %%%%%:  147-block 108
call   20 never executed
branch 21 never executed (fallthrough)
branch 22 never executed (throw)
    %%%%%:  147-block 109
call   23 never executed
branch 24 never executed (fallthrough)
branch 25 never executed (throw)
    %%%%%:  147-block 110
call   26 never executed
branch 27 never executed (fallthrough)
branch 28 never executed (throw)
    %%%%%:  147-block 111
call   29 never executed
branch 30 never executed (fallthrough)
branch 31 never executed (throw)
    %%%%%:  147-block 112
call   32 never executed
branch 33 never executed (fallthrough)
branch 34 never executed (throw)
    %%%%%:  147-block 113
call   35 never executed
branch 36 never executed (fallthrough)
branch 37 never executed (throw)
    %%%%%:  147-block 114
call   38 never executed
call   39 never executed
    %%%%%:  147-block 117
call   40 never executed
call   41 never executed
    %%%%%:  147-block 120
call   42 never executed
branch 43 never executed
branch 44 never executed (fallthrough)
    $$$$$:  147-block 208
call   45 never executed
    $$$$$:  147-block 210
call   46 never executed
    $$$$$:  147-block 214
    $$$$$:  147-block 215
    $$$$$:  147-block 216
    $$$$$:  147-block 217
call   47 never executed
    $$$$$:  147-block 219
    $$$$$:  147-block 220
call   48 never executed
    $$$$$:  147-block 222
    #####:  148:        exit(-1);
    %%%%%:  148-block 122
call    0 never executed
        -:  149:    }
        -:  150:
        1:  151:    glfwShowWindow(window);
        1:  151-block 123
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  152:
     1078:  153:    while (!glfwWindowShouldClose(window))
        1:  153-block 124
     1078:  153-block 171
call    0 returned 1078
branch  1 taken 1078 (fallthrough)
branch  2 taken 0 (throw)
     1078:  153-block 172
branch  3 taken 1077
branch  4 taken 1 (fallthrough)
        -:  154:    {
     1077:  155:        glfwPollEvents();
     1077:  155-block 125
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  156:        ImGui_ImplOpenGL3_NewFrame();
     1077:  156-block 126
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  157:        ImGui_ImplGlfw_NewFrame();
     1077:  157-block 127
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  158:        ImGui::NewFrame();
     1077:  158-block 128
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
        -:  159:
     1077:  160:        io.ConfigDockingWithShift = true;
     1077:  161:        io.ConfigDockingAlwaysTabBar = true;
     1077:  162:        isRunning = true;
        -:  163:
     1077:  164:        mainWindow();
     1077:  164-block 129
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  165:        if (!isRunning){
     1077:  165-block 130
branch  0 taken 0 (fallthrough)
branch  1 taken 1077
    #####:  166:            LOG_ERROR("Quitting!");
    %%%%%:  166-block 131
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:  166-block 133
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%:  166-block 135
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:  166-block 136
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    %%%%%:  166-block 137
call   12 never executed
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:  166-block 140
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:  166-block 141
    %%%%%:  166-block 143
call   20 never executed
branch 21 never executed (fallthrough)
branch 22 never executed (throw)
    %%%%%:  166-block 144
call   23 never executed
branch 24 never executed (fallthrough)
branch 25 never executed (throw)
    %%%%%:  166-block 145
call   26 never executed
branch 27 never executed (fallthrough)
branch 28 never executed (throw)
    %%%%%:  166-block 146
call   29 never executed
branch 30 never executed (fallthrough)
branch 31 never executed (throw)
    %%%%%:  166-block 147
call   32 never executed
branch 33 never executed (fallthrough)
branch 34 never executed (throw)
    %%%%%:  166-block 148
call   35 never executed
branch 36 never executed (fallthrough)
branch 37 never executed (throw)
    %%%%%:  166-block 149
call   38 never executed
call   39 never executed
    %%%%%:  166-block 152
call   40 never executed
call   41 never executed
    %%%%%:  166-block 155
call   42 never executed
branch 43 never executed
branch 44 never executed (fallthrough)
    $$$$$:  166-block 223
call   45 never executed
    $$$$$:  166-block 225
call   46 never executed
    $$$$$:  166-block 229
    $$$$$:  166-block 230
    $$$$$:  166-block 231
    $$$$$:  166-block 232
call   47 never executed
    $$$$$:  166-block 234
    $$$$$:  166-block 235
call   48 never executed
    $$$$$:  166-block 237
    #####:  167:            glfwSetWindowShouldClose(window, 1);
    %%%%%:  167-block 157
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  168:        }
        -:  169:
        -:  170:        int displayW, displayH;
     1077:  171:        glfwGetFramebufferSize(window, &displayW, &displayH);
     1077:  171-block 158
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  172:        glViewport(0, 0, displayW, displayH);
     1077:  172-block 159
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  173:        glClearColor(clearColor.x * clearColor.w, clearColor.y * clearColor.w, clearColor.z * clearColor.w, clearColor.w);
     1077:  173-block 160
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  174:        glClear(GL_COLOR_BUFFER_BIT);
     1077:  174-block 161
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  175:        ImGui_ImplOpenGL3_RenderDrawData(ImGui::GetDrawData());
     1077:  175-block 162
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  175-block 163
call    3 returned 1077
branch  4 taken 1077 (fallthrough)
branch  5 taken 0 (throw)
        -:  176:
     1077:  177:       if (io.ConfigFlags & ImGuiConfigFlags_ViewportsEnable)
     1077:  177-block 164
branch  0 taken 0 (fallthrough)
branch  1 taken 1077
        -:  178:       {
    #####:  179:           GLFWwindow* backupCurrentContext = glfwGetCurrentContext();
    %%%%%:  179-block 165
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  180:           ImGui::UpdatePlatformWindows();
    %%%%%:  180-block 166
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  181:           ImGui::RenderPlatformWindowsDefault();
    %%%%%:  181-block 167
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  182:           glfwMakeContextCurrent(backupCurrentContext);
    %%%%%:  182-block 168
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  183:       }
        -:  184:
     1077:  185:       glfwSwapBuffers(window);
     1077:  185-block 169
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
        -:  186:    }
        -:  187:
        1:  188:    if (isCodeRunning) {
        1:  188-block 173
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:  189:        debugStop = true;
    #####:  190:        runActions();
    %%%%%:  190-block 174
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  191:    }
        -:  192:
        1:  193:    uc_close(uc);
        1:  193-block 175
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  194:    destroyWindow();
        1:  194-block 176
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  195:    return 0;
        1:  196:}
        1:  196-block 177
call    0 returned 1
    $$$$$:  196-block 239
call    1 never executed
