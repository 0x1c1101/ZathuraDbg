        -:    0:Source:/home/rc/ZathuraDbg/src/app/windows/registerWindow.cpp
        -:    0:Graph:/home/rc/ZathuraDbg/src/cmake-build-debug-coverage/CMakeFiles/Zathura.dir/app/windows/registerWindow.cpp.gcno
        -:    0:Data:/home/rc/ZathuraDbg/src/cmake-build-debug-coverage/CMakeFiles/Zathura.dir/app/windows/registerWindow.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "windows.hpp"
        -:    2:#include <cstring>
        -:    3:bool codeHasRun = false;
        -:    4:bool stepClickedOnce = false;
        -:    5:tsl::ordered_map<std::string, std::string> registerValueMap{};
        -:    6:std::unordered_map<std::string, std::string> tempRegisterValueMap = {};
        -:    7:std::string hoveredReg;
        -:    8:std::string reg32BitFirstElemStr = "[0:31]";
        -:    9:std::string reg64BitFirstElemStr = "[0:63]";
        -:   10:
        -:   11:const std::vector<std::string> reg32BitLaneStrs = {"[0:31]", "[32:63]", "[64:95]", "[96:127]", "[128:159]", "[160:191]", "[192:223]", "[224:255]", "[256:287]", "[288:319]", "[320:351]", "[352:383]", "[384:415]", "[416:447]", "[448:479]", "[480:511]"};
        -:   12:const std::vector<std::string> reg64BitLaneStrs = {"[0:63]", "[64:127]", "[128:191]", "[192:255]", "[256:319]", "[320:383]", "[384:447]", "[448:511]"};
        -:   13:
function _Z15initDefaultRegsv called 1 returned 100% blocks executed 100%
        1:   14:void initDefaultRegs(){
       24:   15:    for (auto& reg: defaultShownRegs){
        1:   15-block 2
call    0 returned 1
call    1 returned 1
       23:   15-block 4
call    2 returned 23
       23:   15-block 7
call    3 returned 23
       24:   15-block 8
call    4 returned 24
branch  5 taken 23
branch  6 taken 1 (fallthrough)
       23:   16:        registerValueMap[reg] = "0x00";
call    0 returned 23
branch  1 taken 23 (fallthrough)
branch  2 taken 0 (throw)
       23:   16-block 6
call    3 returned 23
branch  4 taken 23 (fallthrough)
branch  5 taken 0 (throw)
        -:   17:    }
        1:   18:}
        1:   18-block 10
        -:   19:
function _Z22removeRegisterFromViewRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi called 0 returned 0% blocks executed 0%
    #####:   20:void removeRegisterFromView(const std::string& reg, const int regType){
    #####:   21:    bool is128Bits = false, is256bits = false, is512bits = false;
        -:   22:
    #####:   23:    if (regType == 1) {
    %%%%%:   23-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   24:        is128Bits = true;
    %%%%%:   24-block 3
        -:   25:    }
    #####:   26:    else if (regType == 2) {
    %%%%%:   26-block 4
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   27:        is256bits = true;
    %%%%%:   27-block 5
        -:   28:    }
    #####:   29:    else if (regType == 3) {
    %%%%%:   29-block 6
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   30:        is512bits = true;
    %%%%%:   30-block 7
        -:   31:    }
        -:   32:
        -:   33:    int8_t comparisonAmount;
    #####:   34:    if (use32BitLanes){
    %%%%%:   34-block 8
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   35:            if (is128Bits) {
    %%%%%:   35-block 9
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   36:                comparisonAmount = 4;
    %%%%%:   36-block 10
        -:   37:            }
    #####:   38:            else if (is256bits) {
    %%%%%:   38-block 11
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   39:                comparisonAmount = 8;
    %%%%%:   39-block 12
        -:   40:            }
    #####:   41:            else if (is512bits) {
    %%%%%:   41-block 13
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   42:                comparisonAmount = 16;
    %%%%%:   42-block 14
        -:   43:            }
        -:   44:            else {
    #####:   45:                return;
    %%%%%:   45-block 15
        -:   46:            }
        -:   47:
    #####:   48:            const std::string registerName = getRegisterActualName(reg);
    %%%%%:   48-block 16
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   49:            for (int i = 0; i < comparisonAmount; i++) {
    %%%%%:   49-block 17
    %%%%%:   49-block 28
    %%%%%:   49-block 29
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:   50:                if (registerValueMap.contains(registerName + reg32BitLaneStrs[i])) {
    %%%%%:   50-block 18
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:   50-block 20
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:   50-block 21
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed
    $$$$$:   50-block 56
call   10 never executed
    $$$$$:   50-block 58
    #####:   51:                    registerValueMap.erase(registerName + reg32BitLaneStrs[i]);
    %%%%%:   51-block 23
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:   51-block 25
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:   51-block 26
call    7 never executed
    $$$$$:   51-block 59
call    8 never executed
    $$$$$:   51-block 61
        -:   52:                }
        -:   53:            }
    #####:   54:    }
    %%%%%:   54-block 30
call    0 never executed
    $$$$$:   54-block 62
call    1 never executed
        -:   55:    else{
    #####:   56:        if (is128Bits) {
    %%%%%:   56-block 32
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   57:            comparisonAmount = 2;
    %%%%%:   57-block 33
        -:   58:        }
    #####:   59:        else if (is256bits) {
    %%%%%:   59-block 34
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   60:            comparisonAmount = 4;
    %%%%%:   60-block 35
        -:   61:        }
    #####:   62:        else if (is512bits) {
    %%%%%:   62-block 36
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   63:            comparisonAmount = 8;
    %%%%%:   63-block 37
        -:   64:        }
        -:   65:        else {
    #####:   66:            return;
    %%%%%:   66-block 38
        -:   67:        }
        -:   68:
    #####:   69:        const std::string registerName = getRegisterActualName(reg);
    %%%%%:   69-block 39
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   70:        for (int i = 0; i < comparisonAmount; i++) {
    %%%%%:   70-block 40
    %%%%%:   70-block 51
    %%%%%:   70-block 52
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:   71:            if (registerValueMap.contains(registerName + reg64BitLaneStrs[i])) {
    %%%%%:   71-block 41
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:   71-block 43
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:   71-block 44
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed
    $$$$$:   71-block 65
call   10 never executed
    $$$$$:   71-block 67
    #####:   72:                registerValueMap.erase(registerName + reg64BitLaneStrs[i]);
    %%%%%:   72-block 46
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:   72-block 48
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:   72-block 49
call    7 never executed
    $$$$$:   72-block 68
call    8 never executed
    $$$$$:   72-block 70
        -:   73:            }
        -:   74:        }
    #####:   75:    }
    %%%%%:   75-block 53
call    0 never executed
    $$$$$:   75-block 71
call    1 never executed
        -:   76:}
        -:   77:
        -:   78:
function _Z10updateRegsb called 254 returned 100% blocks executed 15%
      254:   79:void updateRegs(bool useTempContext){
      254:   80:    std::stringstream hex;
      254:   80-block 2
call    0 returned 254
branch  1 taken 254 (fallthrough)
branch  2 taken 0 (throw)
      254:   81:    registerValueInfoT val;
      254:   82:    bool useSecondVal = false;
        -:   83:
      254:   84:    if (!useTempContext) {
      254:   84-block 3
branch  0 taken 254 (fallthrough)
branch  1 taken 0
      254:   85:        if (context == nullptr) {
      254:   85-block 4
branch  0 taken 0 (fallthrough)
branch  1 taken 254
    #####:   86:            return;
    %%%%%:   86-block 5
        -:   87:        }
        -:   88:    }
     6096:   89:    for (auto [name, value]: registerValueMap) {
      254:   89-block 6
call    0 returned 254
call    1 returned 254
     5842:   89-block 8
call    2 returned 5842
call    3 returned 5842
branch  4 taken 5842 (fallthrough)
branch  5 taken 0 (throw)
     5842:   89-block 10
call    6 returned 5842
call    7 returned 5842
     5842:   89-block 266
call    8 returned 5842
     6096:   89-block 267
call    9 returned 6096
branch 10 taken 5842
branch 11 taken 254 (fallthrough)
    5842*:   90:        if (!isRegisterValid(toUpperCase(name), codeInformation.mode)){
call    0 returned 5842
branch  1 taken 5842 (fallthrough)
branch  2 taken 0 (throw)
     5842:   90-block 13
call    3 returned 5842
branch  4 taken 5842 (fallthrough)
branch  5 taken 0 (throw)
     5842:   90-block 14
call    6 returned 5842
branch  7 taken 0 (fallthrough)
branch  8 taken 5842
    $$$$$:   90-block 276
call    9 never executed
    $$$$$:   90-block 278
    #####:   91:            continue;
    %%%%%:   91-block 16
        -:   92:        }
        -:   93:
     5842:   94:        if (useTempContext){
     5842:   94-block 17
branch  0 taken 0 (fallthrough)
branch  1 taken 5842
    #####:   95:            val = getRegister(toLowerCase(name), true);
    %%%%%:   95-block 18
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   95-block 19
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:   95-block 20
call    6 never executed
    $$$$$:   95-block 279
call    7 never executed
    $$$$$:   95-block 281
        -:   96:        }
        -:   97:        else{
     5842:   98:           val = getRegister(toLowerCase(name));
     5842:   98-block 22
call    0 returned 5842
branch  1 taken 5842 (fallthrough)
branch  2 taken 0 (throw)
     5842:   98-block 23
call    3 returned 5842
branch  4 taken 5842 (fallthrough)
branch  5 taken 0 (throw)
     5842:   98-block 24
call    6 returned 5842
    $$$$$:   98-block 282
call    7 never executed
    $$$$$:   98-block 284
        -:   99:        }
        -:  100:
     5842:  101:        auto const [isRegValid, registerValue] = val;
        -:  102:
     5842:  103:        if (isRegValid){
     5842:  103-block 26
branch  0 taken 5842 (fallthrough)
branch  1 taken 0
     5842:  104:            if (registerValue.doubleVal == 0 && registerValue.eightByteVal == 0 && registerValue.floatVal == 0){
     5842:  104-block 27
branch  0 taken 5842 (fallthrough)
branch  1 taken 0
     5842:  104-block 28
branch  2 taken 4685 (fallthrough)
branch  3 taken 1157
     4685:  104-block 29
branch  4 taken 4685 (fallthrough)
branch  5 taken 0
     4685:  105:                if (registerValue.info.is128bit || registerValue.info.is256bit || registerValue.info.is512bit){
     4685:  105-block 30
branch  0 taken 4685 (fallthrough)
branch  1 taken 0
     4685:  105-block 31
branch  2 taken 4685 (fallthrough)
branch  3 taken 0
     4685:  105-block 32
branch  4 taken 0 (fallthrough)
branch  5 taken 4685
    #####:  106:                    hex << "0.00";
    %%%%%:  106-block 33
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  106-block 34
        -:  107:                }
        -:  108:                else{
     4685:  109:                    hex << "0x00";
     4685:  109-block 35
call    0 returned 4685
branch  1 taken 4685 (fallthrough)
branch  2 taken 0 (throw)
        -:  110:                }
        -:  111:            }
        -:  112:            else{
    1157*:  113:                if (name.contains('[') && name.contains(']') && name.contains(':')){
     1157:  113-block 37
call    0 returned 1157
branch  1 taken 0 (fallthrough)
branch  2 taken 1157
    %%%%%:  113-block 39
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%:  113-block 41
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed
    %%%%%:  113-block 43
     1157:  113-block 44
     1157:  113-block 45
branch  9 taken 0 (fallthrough)
branch 10 taken 1157
    #####:  114:                    name =  name.substr(0, name.find_first_of('['));
    %%%%%:  114-block 46
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  114-block 48
call    4 never executed
call    5 never executed
    $$$$$:  114-block 285
        -:  115:                }
     1157:  116:                if (regInfoMap[toUpperCase(name)].first <= 64){
     1157:  116-block 51
call    0 returned 1157
branch  1 taken 1157 (fallthrough)
branch  2 taken 0 (throw)
     1157:  116-block 52
call    3 returned 1157
branch  4 taken 1157 (fallthrough)
branch  5 taken 0 (throw)
     1157:  116-block 53
call    6 returned 1157
branch  7 taken 1157 (fallthrough)
branch  8 taken 0
    $$$$$:  116-block 286
call    9 never executed
    $$$$$:  116-block 288
     1157:  117:                    hex << "0x";
     1157:  117-block 55
call    0 returned 1157
branch  1 taken 1157 (fallthrough)
branch  2 taken 0 (throw)
     1157:  118:                    hex << std::hex << registerValue.eightByteVal;
     1157:  118-block 56
call    0 returned 1157
branch  1 taken 1157 (fallthrough)
branch  2 taken 0 (throw)
     1157:  118-block 57
call    3 returned 1157
branch  4 taken 1157 (fallthrough)
branch  5 taken 0 (throw)
        -:  119:                }
    #####:  120:                else if (regInfoMap[toUpperCase(name)].first == 128 || regInfoMap[toUpperCase(name)].first == 256 || regInfoMap[toUpperCase(name)].first == 512){
    %%%%%:  120-block 58
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  120-block 59
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  120-block 60
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%:  120-block 61
call    8 never executed
branch  9 never executed (fallthrough)
branch 10 never executed (throw)
    %%%%%:  120-block 62
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:  120-block 63
branch 14 never executed (fallthrough)
branch 15 never executed
    %%%%%:  120-block 64
call   16 never executed
branch 17 never executed (fallthrough)
branch 18 never executed (throw)
    %%%%%:  120-block 65
call   19 never executed
branch 20 never executed (fallthrough)
branch 21 never executed (throw)
    %%%%%:  120-block 66
branch 22 never executed (fallthrough)
branch 23 never executed
    %%%%%:  120-block 67
    %%%%%:  120-block 68
    %%%%%:  120-block 69
branch 24 never executed (fallthrough)
branch 25 never executed
    %%%%%:  120-block 70
call   26 never executed
    %%%%%:  120-block 71
branch 27 never executed (fallthrough)
branch 28 never executed
    %%%%%:  120-block 72
call   29 never executed
    %%%%%:  120-block 73
branch 30 never executed (fallthrough)
branch 31 never executed
    %%%%%:  120-block 74
call   32 never executed
    %%%%%:  120-block 75
branch 33 never executed (fallthrough)
branch 34 never executed
    $$$$$:  120-block 289
branch 35 never executed (fallthrough)
branch 36 never executed
    $$$$$:  120-block 290
call   37 never executed
    $$$$$:  120-block 292
    $$$$$:  120-block 293
branch 38 never executed (fallthrough)
branch 39 never executed
    $$$$$:  120-block 294
call   40 never executed
    $$$$$:  120-block 296
    $$$$$:  120-block 297
branch 41 never executed (fallthrough)
branch 42 never executed
    $$$$$:  120-block 298
call   43 never executed
    $$$$$:  120-block 300
    #####:  121:                    if (registerValue.info.is128bit){
    %%%%%:  121-block 76
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  122:                        if (!use32BitLanes){
    %%%%%:  122-block 77
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  123:                            if (registerValueMap.contains(name + reg64BitLaneStrs[0])) {
    %%%%%:  123-block 78
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  123-block 80
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  123-block 81
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed
    $$$$$:  123-block 301
call   10 never executed
    $$$$$:  123-block 303
    #####:  124:                                hex << std::to_string(registerValue.info.arrays.doubleArray[0]);
    %%%%%:  124-block 83
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  124-block 84
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  124-block 85
call    6 never executed
    $$$$$:  124-block 304
call    7 never executed
    $$$$$:  124-block 306
    #####:  125:                                registerValueMap[name + reg64BitLaneStrs[0]] = hex.str();
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  125-block 87
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  125-block 89
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:  125-block 90
call   10 never executed
call   11 never executed
call   12 never executed
    $$$$$:  125-block 307
call   13 never executed
    $$$$$:  125-block 309
    $$$$$:  125-block 310
call   14 never executed
    $$$$$:  125-block 312
    #####:  126:                                hex.str("");
    %%%%%:  126-block 95
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  126-block 96
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  126-block 97
call    6 never executed
    $$$$$:  126-block 313
call    7 never executed
    $$$$$:  126-block 317
    $$$$$:  126-block 318
    #####:  127:                                hex.clear();
    %%%%%:  127-block 99
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  128:                            }
    #####:  129:                            if (registerValueMap.contains(name + reg64BitLaneStrs[1])) {
    %%%%%:  129-block 100
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  129-block 102
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  129-block 103
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed
    $$$$$:  129-block 319
call   10 never executed
    $$$$$:  129-block 321
    #####:  130:                                hex << std::to_string(registerValue.info.arrays.doubleArray[1]);
    %%%%%:  130-block 105
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  130-block 106
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  130-block 107
call    6 never executed
    $$$$$:  130-block 322
call    7 never executed
    $$$$$:  130-block 324
    #####:  131:                                registerValueMap[name + reg64BitLaneStrs[1]] = hex.str();
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  131-block 109
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  131-block 111
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:  131-block 112
call   10 never executed
call   11 never executed
call   12 never executed
    $$$$$:  131-block 325
call   13 never executed
    $$$$$:  131-block 327
    $$$$$:  131-block 328
call   14 never executed
    $$$$$:  131-block 330
    #####:  132:                                hex.str("");
    %%%%%:  132-block 117
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  132-block 118
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  132-block 119
call    6 never executed
    $$$$$:  132-block 331
call    7 never executed
    $$$$$:  132-block 335
    $$$$$:  132-block 336
    #####:  133:                                hex.clear();
    %%%%%:  133-block 121
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  134:                            }
    #####:  135:                            continue;
    %%%%%:  135-block 122
        -:  136:                        }
        -:  137:                        else{
    #####:  138:                            for (int i = 0; i < 4; i++){
    %%%%%:  138-block 123
    %%%%%:  138-block 137
    %%%%%:  138-block 138
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:  139:                                if (registerValueMap.contains(name + reg32BitLaneStrs[i])) {
    %%%%%:  139-block 124
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  139-block 126
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  139-block 127
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed
    $$$$$:  139-block 337
call   10 never executed
    $$$$$:  139-block 339
    #####:  140:                                    registerValueMap[name + reg32BitLaneStrs[i]] = std::to_string(registerValue.info.arrays.floatArray[i]);
    %%%%%:  140-block 129
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  140-block 130
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  140-block 132
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:  140-block 133
call   10 never executed
call   11 never executed
call   12 never executed
    $$$$$:  140-block 340
call   13 never executed
    $$$$$:  140-block 342
    $$$$$:  140-block 343
call   14 never executed
    $$$$$:  140-block 345
        -:  141:                                }
        -:  142:                            }
    #####:  143:                            hex.str("");
    %%%%%:  143-block 141
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  143-block 142
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  143-block 143
call    6 never executed
    $$$$$:  143-block 346
call    7 never executed
    $$$$$:  143-block 350
    $$$$$:  143-block 351
    #####:  144:                            hex.clear();
    %%%%%:  144-block 145
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  145:                            continue;
    #####:  146:                        }
    %%%%%:  146-block 146
        -:  147:                    }
    #####:  148:                    else if (registerValue.info.is256bit){
    %%%%%:  148-block 147
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  149:                        if (!use32BitLanes){
    %%%%%:  149-block 148
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  150:                            for (int i = 0; i < 4; i++){
    %%%%%:  150-block 149
    %%%%%:  150-block 163
    %%%%%:  150-block 164
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:  151:                                if (registerValueMap.contains(name + reg64BitLaneStrs[i])) {
    %%%%%:  151-block 150
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  151-block 152
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  151-block 153
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed
    $$$$$:  151-block 352
call   10 never executed
    $$$$$:  151-block 354
    #####:  152:                                    registerValueMap[name + reg64BitLaneStrs[i]] = std::to_string(registerValue.info.arrays.doubleArray[i]);
    %%%%%:  152-block 155
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  152-block 156
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  152-block 158
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:  152-block 159
call   10 never executed
call   11 never executed
call   12 never executed
    $$$$$:  152-block 355
call   13 never executed
    $$$$$:  152-block 357
    $$$$$:  152-block 358
call   14 never executed
    $$$$$:  152-block 360
        -:  153:                                }
        -:  154:                            }
    #####:  155:                            hex.str("");
    %%%%%:  155-block 167
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  155-block 168
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  155-block 169
call    6 never executed
    $$$$$:  155-block 361
call    7 never executed
    $$$$$:  155-block 365
    $$$$$:  155-block 366
    #####:  156:                            hex.clear();
    %%%%%:  156-block 171
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  157:                            continue;
    #####:  158:                        }
    %%%%%:  158-block 172
        -:  159:                        else{
    #####:  160:                            for (int i = 0; i < 8; i++){
    %%%%%:  160-block 173
    %%%%%:  160-block 187
    %%%%%:  160-block 188
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:  161:                                if (registerValueMap.contains(name + reg64BitLaneStrs[i])) {
    %%%%%:  161-block 174
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  161-block 176
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  161-block 177
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed
    $$$$$:  161-block 367
call   10 never executed
    $$$$$:  161-block 369
    #####:  162:                                    registerValueMap[name + reg32BitLaneStrs[i]] = std::to_string(registerValue.info.arrays.floatArray[i]);
    %%%%%:  162-block 179
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  162-block 180
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  162-block 182
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:  162-block 183
call   10 never executed
call   11 never executed
call   12 never executed
    $$$$$:  162-block 370
call   13 never executed
    $$$$$:  162-block 372
    $$$$$:  162-block 373
call   14 never executed
    $$$$$:  162-block 375
        -:  163:                                }
        -:  164:                            }
    #####:  165:                            useSecondVal = false;
    %%%%%:  165-block 189
    #####:  166:                            hex.str("");
    %%%%%:  166-block 191
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  166-block 192
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  166-block 193
call    6 never executed
    $$$$$:  166-block 376
call    7 never executed
    $$$$$:  166-block 380
    $$$$$:  166-block 381
    #####:  167:                            hex.clear();
    %%%%%:  167-block 195
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  168:                            continue;
    #####:  169:                        }
    %%%%%:  169-block 196
        -:  170:                    }
    #####:  171:                    else if (registerValue.info.is512bit) {
    %%%%%:  171-block 197
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  172:                       if (!use32BitLanes){
    %%%%%:  172-block 198
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  173:                            for (int i = 0; i < 8; i++){
    %%%%%:  173-block 199
    %%%%%:  173-block 213
    %%%%%:  173-block 214
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:  174:                                if (registerValueMap.contains(name + reg64BitLaneStrs[i])) {
    %%%%%:  174-block 200
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  174-block 202
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  174-block 203
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed
    $$$$$:  174-block 382
call   10 never executed
    $$$$$:  174-block 384
    #####:  175:                                    registerValueMap[name + reg64BitLaneStrs[i]] = std::to_string(registerValue.info.arrays.doubleArray[i]);
    %%%%%:  175-block 205
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  175-block 206
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  175-block 208
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:  175-block 209
call   10 never executed
call   11 never executed
call   12 never executed
    $$$$$:  175-block 385
call   13 never executed
    $$$$$:  175-block 387
    $$$$$:  175-block 388
call   14 never executed
    $$$$$:  175-block 390
        -:  176:                                }
        -:  177:                            }
    #####:  178:                            hex.str("");
    %%%%%:  178-block 217
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  178-block 218
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  178-block 219
call    6 never executed
    $$$$$:  178-block 391
call    7 never executed
    $$$$$:  178-block 395
    $$$$$:  178-block 396
    #####:  179:                            hex.clear();
    %%%%%:  179-block 221
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  180:                            continue;
    #####:  181:                        }
    %%%%%:  181-block 222
        -:  182:                        else{
    #####:  183:                            for (int i = 0; i < 16; i++){
    %%%%%:  183-block 223
    %%%%%:  183-block 237
    %%%%%:  183-block 238
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:  184:                                if (registerValueMap.contains(name + reg64BitLaneStrs[i])) {
    %%%%%:  184-block 224
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  184-block 226
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  184-block 227
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed
    $$$$$:  184-block 397
call   10 never executed
    $$$$$:  184-block 399
    #####:  185:                                    registerValueMap[name + reg32BitLaneStrs[i]] = std::to_string(registerValue.info.arrays.floatArray[i]);
    %%%%%:  185-block 229
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  185-block 230
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  185-block 232
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:  185-block 233
call   10 never executed
call   11 never executed
call   12 never executed
    $$$$$:  185-block 400
call   13 never executed
    $$$$$:  185-block 402
    $$$$$:  185-block 403
call   14 never executed
    $$$$$:  185-block 405
        -:  186:                                }
        -:  187:                            }
    #####:  188:                            useSecondVal = false;
    %%%%%:  188-block 239
    #####:  189:                            hex.str("");
    %%%%%:  189-block 241
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  189-block 242
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  189-block 243
call    6 never executed
    $$$$$:  189-block 406
call    7 never executed
    $$$$$:  189-block 410
    $$$$$:  189-block 411
    #####:  190:                            hex.clear();
    %%%%%:  190-block 245
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  191:                            continue;
    #####:  192:                        }
    %%%%%:  192-block 246
        -:  193:                    }
        -:  194:                }
        -:  195:            }
        -:  196:        }
        -:  197:        else {
    #####:  198:            hex << "0x00";
    %%%%%:  198-block 248
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  199:        }
        -:  200:
     5842:  201:        registerValueMap[name] = hex.str();
     5842:  201-block 249
call    0 returned 5842
branch  1 taken 5842 (fallthrough)
branch  2 taken 0 (throw)
     5842:  201-block 250
call    3 returned 5842
branch  4 taken 5842 (fallthrough)
branch  5 taken 0 (throw)
     5842:  201-block 251
call    6 returned 5842
call    7 returned 5842
    $$$$$:  201-block 412
call    8 never executed
    $$$$$:  201-block 414
     5842:  202:        hex.str("");
     5842:  202-block 255
call    0 returned 5842
branch  1 taken 5842 (fallthrough)
branch  2 taken 0 (throw)
     5842:  202-block 256
call    3 returned 5842
branch  4 taken 5842 (fallthrough)
branch  5 taken 0 (throw)
     5842:  202-block 257
call    6 returned 5842
    $$$$$:  202-block 415
call    7 never executed
    $$$$$:  202-block 419
    $$$$$:  202-block 420
     5842:  203:        hex.clear();
     5842:  203-block 259
call    0 returned 5842
branch  1 taken 5842 (fallthrough)
branch  2 taken 0 (throw)
     5842:  204:    }
     5842:  204-block 260
     5842:  204-block 261
call    0 returned 5842
branch  1 taken 5842 (fallthrough)
branch  2 taken 0
    $$$$$:  204-block 421
call    3 never executed
      254:  205:}
      254:  205-block 269
      254:  205-block 270
call    0 returned 254
branch  1 taken 254 (fallthrough)
branch  2 taken 0
    $$$$$:  205-block 425
call    3 never executed
        -:  206:
function _Z14parseRegistersNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:  207:std::vector<std::string> parseRegisters(std::string registerString){
    #####:  208:    std::vector<std::string> registers = {};
    #####:  209:    uint16_t index = 0;
        -:  210:
    #####:  211:    const size_t registerCount = std::ranges::count(registerString, ',') + 1;
    %%%%%:  211-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    $$$$$:  211-block 21
        -:  212:    // the string only contains one register
    #####:  213:    if (registerCount == 0){
    %%%%%:  213-block 3
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  214:        registers.emplace_back(registerString);
    %%%%%:  214-block 4
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  215:        return registers;
    %%%%%:  215-block 5
        -:  216:    }
        -:  217:
    #####:  218:    registers.resize(registerCount);
    %%%%%:  218-block 6
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  219:
    #####:  220:    for (auto c: registerString){
    %%%%%:  220-block 7
call    0 never executed
call    1 never executed
    %%%%%:  220-block 9
call    2 never executed
    %%%%%:  220-block 16
call    3 never executed
    %%%%%:  220-block 17
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
    #####:  221:        if (c != ',' && c != ' '){
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  221-block 11
branch  2 never executed (fallthrough)
branch  3 never executed
    #####:  222:            registers[index] += c;
    %%%%%:  222-block 12
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -:  223:        }
        -:  224:
    #####:  225:        if (c == ','){
    %%%%%:  225-block 14
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  226:            index++;
    %%%%%:  226-block 15
        -:  227:        }
        -:  228:    }
    #####:  229:    return registers;
    %%%%%:  229-block 19
    =====:  230:}
    $$$$$:  230-block 23
call    0 never executed
        -:  231:
        -:  232:
function _Z15decimalCallbackP26ImGuiInputTextCallbackData called 0 returned 0% blocks executed 0%
    #####:  233:int decimalCallback(ImGuiInputTextCallbackData* data) {
    #####:  234:    if (data->EventFlag == ImGuiInputTextFlags_CallbackCharFilter)
    %%%%%:  234-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  235:    {
    #####:  236:        if (data->EventChar < 256)
    %%%%%:  236-block 3
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  237:        {
    #####:  238:            char c = static_cast<char>(data->EventChar);
    #####:  239:            if (isdigit(c) || c == '.')
    %%%%%:  239-block 4
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  239-block 5
branch  2 never executed (fallthrough)
branch  3 never executed
        -:  240:            {
    #####:  241:                return 0; // Allow the character
    %%%%%:  241-block 6
        -:  242:            }
        -:  243:        }
    #####:  244:        return 1;
    %%%%%:  244-block 7
        -:  245:    }
        -:  246:
    #####:  247:    return 1;
    %%%%%:  247-block 8
        -:  248:}
        -:  249:
function _Z21checkHexCharsCallbackP26ImGuiInputTextCallbackData called 0 returned 0% blocks executed 0%
    #####:  250:int checkHexCharsCallback(ImGuiInputTextCallbackData* data)
        -:  251:{
    #####:  252:    if (data->EventFlag == ImGuiInputTextFlags_CallbackCharFilter)
    %%%%%:  252-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  253:    {
    #####:  254:        if (data->EventChar < 256)
    %%%%%:  254-block 3
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  255:        {
    #####:  256:            char c = static_cast<char>(data->EventChar);
        -:  257:
    #####:  258:            if ((c >= '0' && c <= '9') || (c >= 'A' && c <= 'F') || (c >= 'a' && c <= 'f'))
    %%%%%:  258-block 4
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  258-block 5
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%:  258-block 6
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%:  258-block 7
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%:  258-block 8
branch  8 never executed (fallthrough)
branch  9 never executed
    %%%%%:  258-block 9
branch 10 never executed (fallthrough)
branch 11 never executed
        -:  259:            {
    #####:  260:                return 0; // Allow hex characters
    %%%%%:  260-block 10
        -:  261:            }
        -:  262:
        -:  263:            // Allow typing '0' and 'x' for the "0x" prefix
    #####:  264:            if (c == '0' || c == 'x' || c == 'X')
    %%%%%:  264-block 11
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  264-block 12
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%:  264-block 13
branch  4 never executed (fallthrough)
branch  5 never executed
        -:  265:            {
    #####:  266:                return 0; // Allow '0' or 'x' to form the "0x" prefix
    %%%%%:  266-block 14
        -:  267:            }
        -:  268:
    #####:  269:            return 1; // Block any other characters
    %%%%%:  269-block 15
        -:  270:        }
    #####:  271:        return 1; // Block non-ASCII characters
    %%%%%:  271-block 16
        -:  272:    }
        -:  273:
        -:  274:    // This handles continuous editing (runs after text is modified)
    #####:  275:    if (data->EventFlag == ImGuiInputTextFlags_CallbackAlways)
    %%%%%:  275-block 17
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  276:    {
    #####:  277:        std::string input(data->Buf, data->BufTextLen);
    %%%%%:  277-block 20
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    $$$$$:  277-block 59
        -:  278:
        -:  279:        // If the input starts with "0X" (uppercase), convert it to lowercase "0x"
    #####:  280:        if (input.length() >= 2 && input[0] == '0' && input[1] == 'X')
    %%%%%:  280-block 22
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:  280-block 24
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%:  280-block 26
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed
    %%%%%:  280-block 28
    %%%%%:  280-block 29
    %%%%%:  280-block 30
branch  9 never executed (fallthrough)
branch 10 never executed
        -:  281:        {
    #####:  282:            data->DeleteChars(0, 2);
    %%%%%:  282-block 31
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  283:            data->InsertChars(0, "0x");
    %%%%%:  283-block 32
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  284:            return 1;
    %%%%%:  284-block 33
        -:  285:        }
        -:  286:
        -:  287:        // Ensure characters after "0x" are lowercase hex characters
    #####:  288:        if (input.length() > 2)
    %%%%%:  288-block 34
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -:  289:        {
    #####:  290:            bool changed = false;
    #####:  291:            for (int i = 2; i < input.length(); ++i)
    %%%%%:  291-block 36
    %%%%%:  291-block 41
    %%%%%:  291-block 42
call    0 never executed
branch  1 never executed
branch  2 never executed (fallthrough)
        -:  292:            {
    #####:  293:                char& c = input[i];
    %%%%%:  293-block 37
call    0 never executed
    #####:  294:                if (c >= 'A' && c <= 'F')
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  294-block 39
branch  2 never executed (fallthrough)
branch  3 never executed
        -:  295:                {
    #####:  296:                    c = static_cast<char>(std::tolower(c)); // Convert to lowercase
    #####:  297:                    changed = true;
    %%%%%:  297-block 40
        -:  298:                }
        -:  299:            }
        -:  300:
    #####:  301:            if (changed)
    %%%%%:  301-block 44
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  302:            {
        -:  303:                // Update the buffer if there were any changes
    #####:  304:                data->DeleteChars(0, data->BufTextLen);
    %%%%%:  304-block 45
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  305:                data->InsertChars(0, input.c_str());
    %%%%%:  305-block 46
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####:  306:                return 1;
    %%%%%:  306-block 48
        -:  307:            }
        -:  308:        }
        -:  309:
    #####:  310:        data->BufDirty = true; // Mark buffer as modified
    #####:  311:    }
    %%%%%:  311-block 49
    %%%%%:  311-block 50
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    $$$$$:  311-block 60
call    3 never executed
        -:  312:
    #####:  313:    return 0; // Return 0 to indicate successful handling
    %%%%%:  313-block 55
        -:  314:}
        -:  315:
        -:  316:bool contextShown = false;
function _Z19registerContextMenuv called 24771 returned 100% blocks executed 23%
    24771:  317:contextMenuOption registerContextMenu(){
    24771:  318:    contextMenuOption menuOption = NORMAL_ACTION;
    24771:  319:    ImGui::PushFont(ImGui::GetIO().Fonts->Fonts[RubikRegular16]);
    24771:  319-block 2
call    0 returned 24771
call    1 returned 24771
call    2 returned 24771
    24771:  320:    ImGui::PushStyleColor(ImGuiCol_PopupBg, ImColor(30, 32, 48).Value);
call    0 returned 24771
call    1 returned 24771
branch  2 taken 24771 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  320-block 66
call    4 never executed
    24771:  321:    ImGui::GetStyle().Colors[ImGuiCol_HeaderHovered] = ImColor(0x18, 0x19, 0x26);
    24771:  321-block 7
call    0 returned 24771
call    1 returned 24771
call    2 returned 24771
branch  3 taken 24771 (fallthrough)
branch  4 taken 0 (throw)
    $$$$$:  321-block 67
call    5 never executed
    24771:  322:    ImGui::PushStyleColor(ImGuiCol_Separator, ImColor(54, 58, 79).Value);
    24771:  322-block 10
call    0 returned 24771
call    1 returned 24771
branch  2 taken 24771 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  322-block 68
call    4 never executed
    24771:  323:    if (ImGui::BeginPopupContextItem("RegisterContextMenu")) {
    24771:  323-block 12
call    0 returned 24771
branch  1 taken 0 (fallthrough)
branch  2 taken 24771
    #####:  324:        contextShown = true;
    #####:  325:        ImGui::PushID("HideRegOpt");
    %%%%%:  325-block 14
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  326:
    #####:  327:        const std::string actualName = getRegisterActualName(hoveredReg);
    %%%%%:  327-block 15
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  328:        if (ImGui::MenuItem("Hide Register")) {
    %%%%%:  328-block 16
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  328-block 17
branch  3 never executed (fallthrough)
branch  4 never executed
    #####:  329:            if (regInfoMap[actualName].first == 128){
    %%%%%:  329-block 18
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  329-block 19
branch  3 never executed (fallthrough)
branch  4 never executed
    #####:  330:                removeRegisterFromView(hoveredReg);
    %%%%%:  330-block 20
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  331:            }
    #####:  332:            else if (regInfoMap[actualName].first == 256){
    %%%%%:  332-block 21
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  332-block 22
branch  3 never executed (fallthrough)
branch  4 never executed
    #####:  333:                removeRegisterFromView(hoveredReg, 2);
    %%%%%:  333-block 23
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  334:            }
    #####:  335:            else if (regInfoMap[actualName].first == 512){
    %%%%%:  335-block 24
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  335-block 25
branch  3 never executed (fallthrough)
branch  4 never executed
    #####:  336:                removeRegisterFromView(hoveredReg, 3);
    %%%%%:  336-block 26
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  337:            }
        -:  338:            else{
    #####:  339:                auto id = registerValueMap.find(hoveredReg);
    %%%%%:  339-block 27
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  340:                if (id != registerValueMap.end()){
    %%%%%:  340-block 28
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
    #####:  341:                    registerValueMap.erase(id);
    %%%%%:  341-block 31
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  341-block 33
    $$$$$:  341-block 69
    $$$$$:  341-block 70
        -:  342:                }
        -:  343:            }
    #####:  344:            menuOption = REGISTER_HIDDEN;
    %%%%%:  344-block 35
        -:  345:        }
    #####:  346:        ImGui::PopID();
    %%%%%:  346-block 36
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  347:        ImGui::Separator();
    %%%%%:  347-block 37
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  348:        ImGui::PushID("CopyNameOpt");
    %%%%%:  348-block 38
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  349:        if (ImGui::MenuItem("Copy Register Name")) {
    %%%%%:  349-block 39
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  349-block 40
branch  3 never executed (fallthrough)
branch  4 never executed
    #####:  350:            ImGui::SetClipboardText(hoveredReg.c_str());
    %%%%%:  350-block 41
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -:  351:        }
    #####:  352:        ImGui::PopID();
    %%%%%:  352-block 43
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  353:        ImGui::Separator();
    %%%%%:  353-block 44
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  354:        ImGui::PushID("CopyValueOpt");
    %%%%%:  354-block 45
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  355:        if (ImGui::MenuItem("Copy Register Value")) {
    %%%%%:  355-block 46
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  355-block 47
branch  3 never executed (fallthrough)
branch  4 never executed
    #####:  356:            ImGui::SetClipboardText(registerValueMap[hoveredReg].c_str());
    %%%%%:  356-block 48
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  356-block 49
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
        -:  357:        }
    #####:  358:        ImGui::PopID();
    %%%%%:  358-block 51
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  359:        ImGui::Separator();
    %%%%%:  359-block 52
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  360:        ImGui::PushID("ToggleLanesOpt");
    %%%%%:  360-block 53
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  361:        if (ImGui::MenuItem("Toggle Register Lanes", "CTRL+`")) {
    %%%%%:  361-block 54
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  361-block 55
branch  3 never executed (fallthrough)
branch  4 never executed
    #####:  362:            use32BitLanes = !use32BitLanes;
    #####:  363:            updateRegistersOnLaneChange();
    %%%%%:  363-block 56
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  364:            menuOption = LANES_TOGGLED;
    %%%%%:  364-block 57
        -:  365:        }
    #####:  366:        ImGui::PopID();
    %%%%%:  366-block 58
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  367:        ImGui::EndPopup();
    %%%%%:  367-block 59
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  368:    }
    %%%%%:  368-block 60
call    0 never executed
    $$$$$:  368-block 72
call    1 never executed
    24771:  369:    ImGui::PopStyleColor(2);
    24771:  369-block 62
call    0 returned 24771
    24771:  370:    ImGui::PopFont();
call    0 returned 24771
    24771:  371:    return menuOption;
    24771:  371-block 65
        -:  372:}
        -:  373:
function _Z11hexStrToIntRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:  374:uint64_t hexStrToInt(const std::string& val){
    #####:  375:    const uint64_t ret = std::strtoul(val.c_str(), nullptr, 16);
    %%%%%:  375-block 2
call    0 never executed
call    1 never executed
    #####:  376:    return ret;
        -:  377:};
        -:  378:
function _Z23isRegisterWithLaneShownPKch called 0 returned 0% blocks executed 0%
    #####:  379:bool isRegisterWithLaneShown(const char* regName, const uint8_t regSize) {
    #####:  380:    uint8_t loopTimes = 0;
    #####:  381:    const std::vector<std::string> laneStrVec = (use32BitLanes ? reg32BitLaneStrs : reg64BitLaneStrs);
    %%%%%:  381-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  381-block 3
    %%%%%:  381-block 4
    %%%%%:  381-block 5
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
        -:  382:
    #####:  383:    if (regSize == 128) {
    %%%%%:  383-block 6
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  384:        if (use32BitLanes) {
    %%%%%:  384-block 7
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  385:            loopTimes = 4;
    %%%%%:  385-block 8
        -:  386:        }
        -:  387:        else {
    #####:  388:            loopTimes = 2;
    %%%%%:  388-block 9
        -:  389:        }
        -:  390:    }
        -:  391:    else if (regSize == 256) {
        -:  392:        if (use32BitLanes) {
        -:  393:            loopTimes = 8;
        -:  394:        }
        -:  395:        else {
        -:  396:            loopTimes = 4;
        -:  397:        }
        -:  398:    }
        -:  399:    else if (regSize == 512) {
        -:  400:        if (use32BitLanes) {
        -:  401:            loopTimes = 16;
        -:  402:        }
        -:  403:        else {
        -:  404:            loopTimes = 8;
        -:  405:        }
        -:  406:    }
        -:  407:
    #####:  408:    for (auto& i: laneStrVec) {
    %%%%%:  408-block 10
call    0 never executed
call    1 never executed
    %%%%%:  408-block 12
call    2 never executed
    %%%%%:  408-block 25
call    3 never executed
    %%%%%:  408-block 26
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
    #####:  409:        if (registerValueMap.contains(getRegisterActualName(regName) + i)) {
    %%%%%:  409-block 15
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  409-block 16
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  409-block 17
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:  409-block 18
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    %%%%%:  409-block 19
call   12 never executed
call   13 never executed
call   14 never executed
    %%%%%:  409-block 23
branch 15 never executed (fallthrough)
branch 16 never executed
    $$$$$:  409-block 32
call   17 never executed
    $$$$$:  409-block 34
call   18 never executed
    $$$$$:  409-block 36
call   19 never executed
    $$$$$:  409-block 40
    $$$$$:  409-block 41
    $$$$$:  409-block 42
    $$$$$:  409-block 43
    #####:  410:            return true;;
    %%%%%:  410-block 24
        -:  411:        }
        -:  412:    }
        -:  413:
    #####:  414:    return false;
    %%%%%:  414-block 28
    #####:  415:}
    %%%%%:  415-block 29
call    0 never executed
    $$$$$:  415-block 45
call    1 never executed
        -:  416:
function _Z17addRegisterToViewRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERK18registerValueInfoT called 0 returned 0% blocks executed 0%
    #####:  417:void addRegisterToView(const std::string& reg, const registerValueInfoT& registerInfo) {
    #####:  418:    std::string regValue{};
    %%%%%:  418-block 2
call    0 never executed
    #####:  419:    std::vector<std::string> regValues{};
    #####:  420:    bool isRegPresent = false;
        -:  421:
        -:  422:
        -:  423:
    #####:  424:    if (regInfoMap[reg].first <= 64){
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  424-block 4
branch  3 never executed (fallthrough)
branch  4 never executed
    #####:  425:        regValue= std::to_string(registerInfo.registerValueUn.eightByteVal);
    %%%%%:  425-block 5
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  425-block 6
call    3 never executed
call    4 never executed
    $$$$$:  425-block 192
        -:  426:    }
    #####:  427:    else if (regInfoMap[reg].first == 128 ){
    %%%%%:  427-block 9
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  427-block 10
branch  3 never executed (fallthrough)
branch  4 never executed
    #####:  428:        for (int i = 0; i < (use32BitLanes ? 4 : 2); i++){
    %%%%%:  428-block 11
    %%%%%:  428-block 19
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  428-block 20
    %%%%%:  428-block 21
    %%%%%:  428-block 22
branch  2 never executed
branch  3 never executed (fallthrough)
    #####:  429:            regValues.push_back(std::to_string(use32BitLanes ? registerInfo.registerValueUn.info.arrays.floatArray[i] : registerInfo.registerValueUn.info.arrays.doubleArray[i]));
    %%%%%:  429-block 12
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  429-block 13
    %%%%%:  429-block 14
    %%%%%:  429-block 15
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    %%%%%:  429-block 16
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed (throw)
    %%%%%:  429-block 17
call    8 never executed
    $$$$$:  429-block 193
call    9 never executed
    $$$$$:  429-block 195
        -:  430:        }
        -:  431:
    #####:  432:        regValue = regValues[0];
    %%%%%:  432-block 23
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -:  433:    }
    #####:  434:    else if (regInfoMap[reg].first == 256) {
    %%%%%:  434-block 25
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  434-block 26
branch  3 never executed (fallthrough)
branch  4 never executed
    #####:  435:        if (use32BitLanes) {
    %%%%%:  435-block 27
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  436:            for (const float i: registerInfo.registerValueUn.info.arrays.floatArray) {
    %%%%%:  436-block 28
    %%%%%:  436-block 33
branch  0 never executed
branch  1 never executed
    #####:  437:                regValues.push_back(std::to_string(i));
    %%%%%:  437-block 29
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  437-block 30
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  437-block 31
call    6 never executed
    $$$$$:  437-block 196
call    7 never executed
    $$$$$:  437-block 198
        -:  438:            }
        -:  439:        } else {
    #####:  440:            for (const double i: registerInfo.registerValueUn.info.arrays.doubleArray) {
    %%%%%:  440-block 34
    %%%%%:  440-block 39
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:  441:                regValues.push_back(std::to_string(i));
    %%%%%:  441-block 35
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  441-block 36
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  441-block 37
call    6 never executed
    $$$$$:  441-block 199
call    7 never executed
    $$$$$:  441-block 201
        -:  442:            }
        -:  443:        }
        -:  444:
    #####:  445:        regValue = regValues[0];
    %%%%%:  445-block 40
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####:  446:    } else if (regInfoMap[reg].first == 512) {
    %%%%%:  446-block 42
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  446-block 43
branch  3 never executed (fallthrough)
branch  4 never executed
    #####:  447:        if (use32BitLanes){
    %%%%%:  447-block 44
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  448:            for (const float i : registerInfo.registerValueUn.info.arrays.floatArray){
    %%%%%:  448-block 45
    %%%%%:  448-block 50
branch  0 never executed
branch  1 never executed
    #####:  449:                regValues.push_back(std::to_string(i));
    %%%%%:  449-block 46
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  449-block 47
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  449-block 48
call    6 never executed
    $$$$$:  449-block 202
call    7 never executed
    $$$$$:  449-block 204
        -:  450:            }
        -:  451:        }
        -:  452:        else{
    #####:  453:            for (const double i : registerInfo.registerValueUn.info.arrays.doubleArray){
    %%%%%:  453-block 51
    %%%%%:  453-block 56
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:  454:                regValues.push_back(std::to_string(i));
    %%%%%:  454-block 52
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  454-block 53
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  454-block 54
call    6 never executed
    $$$$$:  454-block 205
call    7 never executed
    $$$$$:  454-block 207
        -:  455:            }
        -:  456:        }
        -:  457:
    #####:  458:        regValue = regValues[0];
    %%%%%:  458-block 57
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -:  459:    }
    #####:  460:    else if (regInfoMap[reg].first == 80){
    %%%%%:  460-block 59
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  460-block 60
branch  3 never executed (fallthrough)
branch  4 never executed
    #####:  461:        LOG_ERROR("ST* registers are not supported yet!");
    %%%%%:  461-block 61
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:  461-block 63
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%:  461-block 65
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:  461-block 66
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    %%%%%:  461-block 67
call   12 never executed
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:  461-block 70
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:  461-block 71
    %%%%%:  461-block 73
call   20 never executed
branch 21 never executed (fallthrough)
branch 22 never executed (throw)
    %%%%%:  461-block 74
call   23 never executed
branch 24 never executed (fallthrough)
branch 25 never executed (throw)
    %%%%%:  461-block 75
call   26 never executed
branch 27 never executed (fallthrough)
branch 28 never executed (throw)
    %%%%%:  461-block 76
call   29 never executed
branch 30 never executed (fallthrough)
branch 31 never executed (throw)
    %%%%%:  461-block 77
call   32 never executed
branch 33 never executed (fallthrough)
branch 34 never executed (throw)
    %%%%%:  461-block 78
call   35 never executed
branch 36 never executed (fallthrough)
branch 37 never executed (throw)
    %%%%%:  461-block 79
call   38 never executed
call   39 never executed
    %%%%%:  461-block 82
call   40 never executed
call   41 never executed
    %%%%%:  461-block 85
call   42 never executed
branch 43 never executed
branch 44 never executed (fallthrough)
    $$$$$:  461-block 208
call   45 never executed
    $$$$$:  461-block 210
call   46 never executed
    $$$$$:  461-block 214
    $$$$$:  461-block 215
    $$$$$:  461-block 216
    $$$$$:  461-block 217
call   47 never executed
    $$$$$:  461-block 219
    $$$$$:  461-block 220
call   48 never executed
    $$$$$:  461-block 222
    #####:  462:        return;
    %%%%%:  462-block 87
        -:  463:    }
        -:  464:
    #####:  465:    LOG_DEBUG("Adding the register " << reg);
    %%%%%:  465-block 89
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:  465-block 91
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%:  465-block 93
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:  465-block 94
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    %%%%%:  465-block 95
call   12 never executed
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:  465-block 98
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:  465-block 99
    %%%%%:  465-block 101
call   20 never executed
branch 21 never executed (fallthrough)
branch 22 never executed (throw)
    %%%%%:  465-block 102
call   23 never executed
branch 24 never executed (fallthrough)
branch 25 never executed (throw)
    %%%%%:  465-block 103
call   26 never executed
branch 27 never executed (fallthrough)
branch 28 never executed (throw)
    %%%%%:  465-block 104
call   29 never executed
branch 30 never executed (fallthrough)
branch 31 never executed (throw)
    %%%%%:  465-block 105
call   32 never executed
branch 33 never executed (fallthrough)
branch 34 never executed (throw)
    %%%%%:  465-block 106
call   35 never executed
branch 36 never executed (fallthrough)
branch 37 never executed (throw)
    %%%%%:  465-block 107
call   38 never executed
branch 39 never executed (fallthrough)
branch 40 never executed (throw)
    %%%%%:  465-block 108
call   41 never executed
call   42 never executed
    %%%%%:  465-block 111
call   43 never executed
call   44 never executed
    %%%%%:  465-block 114
call   45 never executed
branch 46 never executed
branch 47 never executed (fallthrough)
    $$$$$:  465-block 223
call   48 never executed
    $$$$$:  465-block 225
call   49 never executed
    $$$$$:  465-block 229
    $$$$$:  465-block 230
    $$$$$:  465-block 231
    $$$$$:  465-block 232
call   50 never executed
    $$$$$:  465-block 234
    $$$$$:  465-block 235
call   51 never executed
    $$$$$:  465-block 237
    #####:  466:     if (regValue == "0"){
    %%%%%:  466-block 116
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  466-block 117
branch  3 never executed (fallthrough)
branch  4 never executed
        -:  467:    // code for saving register's value
    #####:  468:        regValue = "0x00";
    %%%%%:  468-block 118
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  469:    }
        -:  470:
    #####:  471:    if (registerInfo.registerValueUn.info.is128bit){
    %%%%%:  471-block 119
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  472:        if (!use32BitLanes){
    %%%%%:  472-block 120
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  473:            for (int j = 0; j < 2; j++){
    %%%%%:  473-block 121
    %%%%%:  473-block 129
branch  0 never executed
branch  1 never executed
    #####:  474:                registerValueMap[reg + reg64BitLaneStrs[j]] = regValues[j];
    %%%%%:  474-block 122
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    %%%%%:  474-block 125
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed (throw)
    %%%%%:  474-block 126
call    8 never executed
branch  9 never executed (fallthrough)
branch 10 never executed (throw)
    %%%%%:  474-block 127
call   11 never executed
    $$$$$:  474-block 238
call   12 never executed
    $$$$$:  474-block 240
        -:  475:            }
        -:  476:        }
        -:  477:        else{
    #####:  478:            for (int k= 0; k < 4; k++){
    %%%%%:  478-block 130
    %%%%%:  478-block 138
branch  0 never executed
branch  1 never executed
    #####:  479:                registerValueMap[reg + reg32BitLaneStrs[k]] = regValues[k];
    %%%%%:  479-block 131
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    %%%%%:  479-block 134
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed (throw)
    %%%%%:  479-block 135
call    8 never executed
branch  9 never executed (fallthrough)
branch 10 never executed (throw)
    %%%%%:  479-block 136
call   11 never executed
    $$$$$:  479-block 241
call   12 never executed
    $$$$$:  479-block 243
        -:  480:            }
        -:  481:        }
        -:  482:    }
    #####:  483:    else if (registerInfo.registerValueUn.info.is256bit){
    %%%%%:  483-block 139
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  484:        if (!use32BitLanes){
    %%%%%:  484-block 140
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  485:            for (int l = 0; l < 4; l++){
    %%%%%:  485-block 141
    %%%%%:  485-block 149
branch  0 never executed
branch  1 never executed
    #####:  486:                registerValueMap[reg + reg64BitLaneStrs[l]] = regValues[l];
    %%%%%:  486-block 142
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    %%%%%:  486-block 145
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed (throw)
    %%%%%:  486-block 146
call    8 never executed
branch  9 never executed (fallthrough)
branch 10 never executed (throw)
    %%%%%:  486-block 147
call   11 never executed
    $$$$$:  486-block 244
call   12 never executed
    $$$$$:  486-block 246
        -:  487:            }
        -:  488:        }
        -:  489:        else{
    #####:  490:            for (int m = 0; m < 8; m++){
    %%%%%:  490-block 150
    %%%%%:  490-block 158
branch  0 never executed
branch  1 never executed
    #####:  491:                registerValueMap[reg + reg32BitLaneStrs[m]] = regValues[m];
    %%%%%:  491-block 151
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    %%%%%:  491-block 154
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed (throw)
    %%%%%:  491-block 155
call    8 never executed
branch  9 never executed (fallthrough)
branch 10 never executed (throw)
    %%%%%:  491-block 156
call   11 never executed
    $$$$$:  491-block 247
call   12 never executed
    $$$$$:  491-block 249
        -:  492:            }
        -:  493:        }
        -:  494:    }
    #####:  495:    else if (registerInfo.registerValueUn.info.is512bit) {
    %%%%%:  495-block 159
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  496:        if (!use32BitLanes){
    %%%%%:  496-block 160
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  497:            for (int n = 0; n < 8; n++){
    %%%%%:  497-block 161
    %%%%%:  497-block 169
branch  0 never executed
branch  1 never executed
    #####:  498:                registerValueMap[reg + reg64BitLaneStrs[n]] = regValues[n];
    %%%%%:  498-block 162
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    %%%%%:  498-block 165
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed (throw)
    %%%%%:  498-block 166
call    8 never executed
branch  9 never executed (fallthrough)
branch 10 never executed (throw)
    %%%%%:  498-block 167
call   11 never executed
    $$$$$:  498-block 250
call   12 never executed
    $$$$$:  498-block 252
        -:  499:            }
        -:  500:        }
        -:  501:        else{
    #####:  502:            for (int c = 0; c < 16; c++){
    %%%%%:  502-block 170
    %%%%%:  502-block 178
branch  0 never executed
branch  1 never executed
    #####:  503:                registerValueMap[reg + reg32BitLaneStrs[c]] = regValues[c];
    %%%%%:  503-block 171
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    %%%%%:  503-block 174
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed (throw)
    %%%%%:  503-block 175
call    8 never executed
branch  9 never executed (fallthrough)
branch 10 never executed (throw)
    %%%%%:  503-block 176
call   11 never executed
    $$$$$:  503-block 253
call   12 never executed
    $$$$$:  503-block 255
        -:  504:            }
        -:  505:        }
        -:  506:    }
        -:  507:    else{
    #####:  508:        registerValueMap[reg] = regValue;
    %%%%%:  508-block 179
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  508-block 180
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
        -:  509:    }
    #####:  510:}
    %%%%%:  510-block 181
    %%%%%:  510-block 182
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:  510-block 184
    %%%%%:  510-block 186
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    $$$$$:  510-block 256
call    6 never executed
    $$$$$:  510-block 258
call    7 never executed
        -:  511:
function _Z18registerCommandsUIv called 1077 returned 100% blocks executed 11%
     1077:  512: void registerCommandsUI() {
     1077:  513:    const float footerHeightReserve = ImGui::GetStyle().ItemSpacing.y + ImGui::GetFrameHeightWithSpacing();
     1077:  513-block 2
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  513-block 3
call    3 returned 1077
branch  4 taken 1077 (fallthrough)
branch  5 taken 0 (throw)
        -:  514:
     1077:  515:    ImGui::BeginChild("ScrollingRegion", ImVec2(0, -footerHeightReserve), false, ImGuiWindowFlags_None);
     1077:  515-block 4
call    0 returned 1077
call    1 returned 1077
branch  2 taken 1077 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  515-block 132
     1077:  516:    ImGui::EndChild();
     1077:  516-block 6
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
        -:  517:
     1077:  518:    std::string registerString;
     1077:  518-block 7
call    0 returned 1077
     1077:  519:    char input[500] = {};
        -:  520:
     1077:  521:    ImGui::PushID(&input);
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  522:    ImGui::Text("Toggle registers: ");
     1077:  522-block 9
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  523:    ImGui::SameLine();
     1077:  523-block 10
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
        -:  524:
     1077:  525:    if (ImGui::InputText("##registerInput", input, IM_ARRAYSIZE(input), ImGuiInputTextFlags_EnterReturnsTrue)) {
     1077:  525-block 11
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  525-block 12
branch  3 taken 0 (fallthrough)
branch  4 taken 1077
    #####:  526:        registerString += toLowerCase(input);
    %%%%%:  526-block 15
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  526-block 16
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  526-block 17
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:  526-block 18
call    9 never executed
call   10 never executed
    %%%%%:  526-block 21
    $$$$$:  526-block 133
call   11 never executed
    $$$$$:  526-block 135
call   12 never executed
    $$$$$:  526-block 139
    $$$$$:  526-block 140
    $$$$$:  526-block 141
    #####:  527:        LOG_DEBUG("Request to toggle the register: " << input);
    %%%%%:  527-block 22
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:  527-block 24
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%:  527-block 26
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:  527-block 27
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    %%%%%:  527-block 28
call   12 never executed
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:  527-block 31
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:  527-block 32
    %%%%%:  527-block 34
call   20 never executed
branch 21 never executed (fallthrough)
branch 22 never executed (throw)
    %%%%%:  527-block 35
call   23 never executed
branch 24 never executed (fallthrough)
branch 25 never executed (throw)
    %%%%%:  527-block 36
call   26 never executed
branch 27 never executed (fallthrough)
branch 28 never executed (throw)
    %%%%%:  527-block 37
call   29 never executed
branch 30 never executed (fallthrough)
branch 31 never executed (throw)
    %%%%%:  527-block 38
call   32 never executed
branch 33 never executed (fallthrough)
branch 34 never executed (throw)
    %%%%%:  527-block 39
call   35 never executed
branch 36 never executed (fallthrough)
branch 37 never executed (throw)
    %%%%%:  527-block 40
call   38 never executed
branch 39 never executed (fallthrough)
branch 40 never executed (throw)
    %%%%%:  527-block 41
call   41 never executed
call   42 never executed
    %%%%%:  527-block 44
call   43 never executed
call   44 never executed
    %%%%%:  527-block 47
call   45 never executed
branch 46 never executed
branch 47 never executed (fallthrough)
    $$$$$:  527-block 142
call   48 never executed
    $$$$$:  527-block 144
call   49 never executed
    $$$$$:  527-block 148
    $$$$$:  527-block 149
    $$$$$:  527-block 150
    $$$$$:  527-block 151
call   50 never executed
    $$$$$:  527-block 153
    $$$$$:  527-block 154
call   51 never executed
    $$$$$:  527-block 156
        -:  528:    }
        -:  529:
     1077:  530:    if (!registerString.empty()) {
     1077:  530-block 49
call    0 returned 1077
branch  1 taken 0 (fallthrough)
branch  2 taken 1077
    #####:  531:        bool isRegPresent = false;
    #####:  532:        auto regs = parseRegisters(registerString);
    %%%%%:  532-block 51
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  532-block 52
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  532-block 53
call    6 never executed
    $$$$$:  532-block 157
call    7 never executed
    $$$$$:  532-block 159
        -:  533:
    #####:  534:        for (auto& reg : regs) {
call    0 never executed
call    1 never executed
    %%%%%:  534-block 56
call    2 never executed
    %%%%%:  534-block 116
call    3 never executed
    %%%%%:  534-block 117
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
    #####:  535:            if (!regInfoMap.contains(toUpperCase(reg))) {
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  535-block 58
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  535-block 59
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed
    $$$$$:  535-block 160
call    9 never executed
    $$$$$:  535-block 162
    #####:  536:                return;
    %%%%%:  536-block 61
        -:  537:            }
        -:  538:
    #####:  539:            auto regInfo = getRegister(reg);
    %%%%%:  539-block 62
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  540:            reg = toUpperCase(reg);
    %%%%%:  540-block 63
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  540-block 64
call    3 never executed
call    4 never executed
    $$$$$:  540-block 163
        -:  541:
    #####:  542:            if (!regInfo.out) {
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  543:                continue;
    %%%%%:  543-block 67
        -:  544:            }
        -:  545:
    #####:  546:            if (regInfoMap[reg].first > 64){
    %%%%%:  546-block 68
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  546-block 69
branch  3 never executed (fallthrough)
branch  4 never executed
    #####:  547:                isRegPresent = isRegisterWithLaneShown(reg.c_str(), regInfoMap[reg].first);
    %%%%%:  547-block 70
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  547-block 71
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  547-block 73
        -:  548:            }
        -:  549:
    #####:  550:            if ((!registerValueMap.contains(reg)) && !isRegPresent) {
    %%%%%:  550-block 74
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  550-block 75
branch  3 never executed (fallthrough)
branch  4 never executed
    %%%%%:  550-block 76
branch  5 never executed (fallthrough)
branch  6 never executed
    %%%%%:  550-block 77
    %%%%%:  550-block 78
    %%%%%:  550-block 79
branch  7 never executed (fallthrough)
branch  8 never executed
    #####:  551:                addRegisterToView(toUpperCase(reg), regInfo);
    %%%%%:  551-block 80
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  551-block 81
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  551-block 82
call    6 never executed
    $$$$$:  551-block 164
call    7 never executed
    $$$$$:  551-block 166
        -:  552:            }
        -:  553:            // code for removing the register
    #####:  554:            else if (regInfo.registerValueUn.info.is512bit || regInfo.registerValueUn.info.is256bit || regInfo.registerValueUn.info.is128bit) {
    %%%%%:  554-block 84
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  554-block 85
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%:  554-block 86
branch  4 never executed (fallthrough)
branch  5 never executed
    #####:  555:                std::string fullRegName{};
    %%%%%:  555-block 87
call    0 never executed
    #####:  556:                int8_t type = 0;
        -:  557:
    #####:  558:                if (regInfo.registerValueUn.info.is512bit) {
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  559:                    type = 3;
    %%%%%:  559-block 89
        -:  560:                }
    #####:  561:                else if (regInfo.registerValueUn.info.is256bit) {
    %%%%%:  561-block 90
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  562:                    type = 2;
    %%%%%:  562-block 91
        -:  563:                }
    #####:  564:                else if (regInfo.registerValueUn.info.is128bit) {
    %%%%%:  564-block 92
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  565:                    type = 1;
    %%%%%:  565-block 93
        -:  566:                }
        -:  567:
    #####:  568:                auto& laneStrVec = (use32BitLanes ? reg32BitLaneStrs : reg64BitLaneStrs);
    %%%%%:  568-block 94
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  568-block 95
    %%%%%:  568-block 96
    #####:  569:                int i = 0;
    %%%%%:  569-block 97
        -:  570:                while (true) {
    #####:  571:                    fullRegName = reg + laneStrVec[i];
    %%%%%:  571-block 98
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  571-block 100
call    4 never executed
call    5 never executed
    %%%%%:  571-block 109
    $$$$$:  571-block 167
    #####:  572:                    if (registerValueMap.contains(fullRegName)){
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  572-block 103
branch  3 never executed (fallthrough)
branch  4 never executed
    #####:  573:                        removeRegisterFromView(reg, type);
    %%%%%:  573-block 104
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  574:                        i++;
    #####:  575:                        continue;
    %%%%%:  575-block 105
        -:  576:                    }
        -:  577:
    #####:  578:                    ++i;
    #####:  579:                    if (i > laneStrVec.size() - 1) {
    %%%%%:  579-block 106
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:  580:                        break;
    %%%%%:  580-block 108
        -:  581:                    }
        -:  582:                }
    #####:  583:            }
    %%%%%:  583-block 110
call    0 never executed
    $$$$$:  583-block 168
call    1 never executed
    #####:  584:            else if (registerValueMap.count(reg) != 0){
    %%%%%:  584-block 112
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  584-block 113
branch  3 never executed (fallthrough)
branch  4 never executed
    #####:  585:                registerValueMap.erase(reg);
    %%%%%:  585-block 114
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  586:            }
        -:  587:        }
    #####:  588:    }
    %%%%%:  588-block 119
    %%%%%:  588-block 120
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    $$$$$:  588-block 173
call    3 never executed
     1077:  589:}
     1077:  589-block 125
     1077:  589-block 126
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0
    $$$$$:  589-block 176
call    3 never executed
        -:  590:
function _Z21getRegisterActualNameRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 24840 returned 100% blocks executed 46%
    24840:  591:std::string getRegisterActualName(const std::string& regName) {
   24840*:  592:    if (!(regName.contains('[') && regName.contains(']') && regName.contains(':'))){
    24840:  592-block 2
call    0 returned 24840
branch  1 taken 0 (fallthrough)
branch  2 taken 24840
    %%%%%:  592-block 4
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%:  592-block 6
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed
    24840:  592-block 8
    %%%%%:  592-block 9
    24840:  592-block 10
branch  9 taken 24840 (fallthrough)
branch 10 taken 0
    24840:  593:        return regName;
    24840:  593-block 11
call    0 returned 24840
        -:  594:    }
        -:  595:
    #####:  596:    return regName.substr(0, regName.find_first_of('['));
    %%%%%:  596-block 12
call    0 never executed
call    1 never executed
        -:  597:}
        -:  598:
function _Z21getRegisterActualSizeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 24840 returned 100% blocks executed 100%
    24840:  599:uint16_t getRegisterActualSize(std::string str){
    24840:  600:    str = getRegisterActualName(str);
    24840:  600-block 2
call    0 returned 24840
branch  1 taken 24840 (fallthrough)
branch  2 taken 0 (throw)
    24840:  600-block 3
call    3 returned 24840
call    4 returned 24840
    24840:  601:    return regInfoMap[str].first;
call    0 returned 24840
    24840:  601-block 7
        -:  602:}
        -:  603:
function _Z23parseRegisterValueInputRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcb called 0 returned 0% blocks executed 0%
    #####:  604:void parseRegisterValueInput(const std::string& regName, const char *regValueFirst, const bool isBigReg){
    #####:  605:    if ((strlen(regValueFirst) != 0)) {
    %%%%%:  605-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  606:        const uint64_t temp = hexStrToInt(regValueFirst);
    %%%%%:  606-block 5
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  606-block 6
call    3 never executed
call    4 never executed
    $$$$$:  606-block 107
    $$$$$:  606-block 108
        -:  607:
    #####:  608:        if (strncmp(regValueFirst, "0x", 2) != 0 && !isBigReg) {
    %%%%%:  608-block 9
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  608-block 10
branch  2 never executed (fallthrough)
branch  3 never executed
    #####:  609:            registerValueMap[regName] = "0x";
    %%%%%:  609-block 11
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  609-block 12
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    #####:  610:            registerValueMap[regName].append(regValueFirst);
    %%%%%:  610-block 13
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  610-block 14
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  610-block 15
        -:  611:
        -:  612:        } else {
    #####:  613:            registerValueMap[regName] = regValueFirst;
    %%%%%:  613-block 16
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  613-block 17
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
        -:  614:        }
        -:  615:
    #####:  616:        if (codeHasRun)
    %%%%%:  616-block 18
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  617:        {
    #####:  618:            if (isBigReg){
    %%%%%:  618-block 19
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  619:                const std::string realRegName = regName.substr(0, regName.find_first_of('['));
    %%%%%:  619-block 20
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####:  620:                const std::string laneStr = regName.substr(regName.find_first_of('[')+1);
    %%%%%:  620-block 22
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####:  621:                const int laneNum = std::atoi(laneStr.c_str());
    %%%%%:  621-block 24
call    0 never executed
    #####:  622:                const auto value = std::string(regValueFirst);
    %%%%%:  622-block 27
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    $$$$$:  622-block 111
        -:  623:
    #####:  624:                if (value.contains('.')){
    %%%%%:  624-block 29
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:  625:                    int regSize = getRegisterActualSize(regName);
    %%%%%:  625-block 31
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  625-block 32
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  625-block 33
call    6 never executed
    $$$$$:  625-block 112
call    7 never executed
    $$$$$:  625-block 114
    #####:  626:                    if (regSize == 128 || regSize == 256) {
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  626-block 35
branch  2 never executed (fallthrough)
branch  3 never executed
    #####:  627:                        uint8_t arrSize = 0;
    #####:  628:                        int laneIndex = 0;
        -:  629:
    #####:  630:                        if (!use32BitLanes){
    %%%%%:  630-block 36
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  631:                            arrSize = (regSize == 128 ? 2 : 4);
    %%%%%:  631-block 38
    %%%%%:  631-block 39
    #####:  632:                            double arr[arrSize];
    #####:  633:                            uc_reg_read(uc, regNameToConstant(realRegName), arr);
    %%%%%:  633-block 40
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  633-block 41
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
        -:  634:
        -:  635:                            double val;
    #####:  636:                            auto [ptr, ec] = std::from_chars(value.data(), value.data() + value.size(), val);
    %%%%%:  636-block 42
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####:  637:                            if (ec == std::errc::invalid_argument || ec == std::errc::result_out_of_range){
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  637-block 47
branch  2 never executed (fallthrough)
branch  3 never executed
    #####:  638:                                val = 0;
    %%%%%:  638-block 48
        -:  639:                            }
        -:  640:
    #####:  641:                            if (laneNum != 0){
    %%%%%:  641-block 49
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  642:                                laneIndex = laneNum / 64;
    %%%%%:  642-block 50
        -:  643:                            }
        -:  644:
    #####:  645:                            arr[laneIndex] = val;
        -:  646:
    #####:  647:                            uc_err err = uc_reg_write(uc, regNameToConstant(realRegName), arr);
    %%%%%:  647-block 51
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  647-block 52
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    #####:  648:                            saveUCContext(uc, context);
    %%%%%:  648-block 53
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  649:                        }
    %%%%%:  649-block 37
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  650:                        else{
    #####:  651:                            arrSize = (regSize == 128 ? 4 : 8);
    %%%%%:  651-block 56
    %%%%%:  651-block 57
    #####:  652:                            float arr[arrSize];
    #####:  653:                            uc_reg_read(uc, regNameToConstant(realRegName), &arr);
    %%%%%:  653-block 58
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  653-block 59
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
        -:  654:
        -:  655:                            float val;
    #####:  656:                            auto [ptr, ec] = std::from_chars(value.data(), value.data() + value.size(), val);
    %%%%%:  656-block 60
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
        -:  657:
    #####:  658:                            if (ec == std::errc::invalid_argument || ec == std::errc::result_out_of_range){
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  658-block 65
branch  2 never executed (fallthrough)
branch  3 never executed
    #####:  659:                                val = 0;
    %%%%%:  659-block 66
        -:  660:                            }
        -:  661:
    #####:  662:                            if (laneNum != 0){
    %%%%%:  662-block 67
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  663:                                laneIndex = laneNum / 32;
    %%%%%:  663-block 68
        -:  664:                            }
    #####:  665:                            arr[laneIndex] = val;
        -:  666:
    #####:  667:                            uc_err err = uc_reg_write(uc, regNameToConstant(realRegName), arr);
    %%%%%:  667-block 69
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  667-block 70
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    #####:  668:                            saveUCContext(uc, context);
    %%%%%:  668-block 71
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  669:                        }
    %%%%%:  669-block 55
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  670:                    }
        -:  671:                }
    #####:  672:            }
    %%%%%:  672-block 73
call    0 never executed
call    1 never executed
call    2 never executed
    $$$$$:  672-block 117
call    3 never executed
    $$$$$:  672-block 119
call    4 never executed
    $$$$$:  672-block 121
call    5 never executed
        -:  673:            else{
    #####:  674:                uc_reg_write(uc, regNameToConstant(regName), &temp);
    %%%%%:  674-block 77
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  674-block 78
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    #####:  675:                saveUCContext(uc, context);
    %%%%%:  675-block 79
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  676:            }
        -:  677:        }
        -:  678:        else{
    #####:  679:            if (regName == getArchIPStr(codeInformation.mode)){
    %%%%%:  679-block 80
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  679-block 81
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed
    $$$$$:  679-block 124
    #####:  680:                ENTRY_POINT_ADDRESS = strtoul(regValueFirst, nullptr, 16);
    %%%%%:  680-block 84
call    0 never executed
        -:  681:            }
    #####:  682:            else if (regName == getArchSBPStr(codeInformation.mode).first || (regName == getArchSBPStr(codeInformation.mode).second)){
    %%%%%:  682-block 86
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  682-block 87
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%:  682-block 89
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:  682-block 90
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed
    %%%%%:  682-block 92
    %%%%%:  682-block 93
    %%%%%:  682-block 94
branch 12 never executed (fallthrough)
branch 13 never executed
    %%%%%:  682-block 95
call   14 never executed
    %%%%%:  682-block 96
branch 15 never executed (fallthrough)
branch 16 never executed
    %%%%%:  682-block 97
call   17 never executed
    %%%%%:  682-block 98
branch 18 never executed (fallthrough)
branch 19 never executed
    $$$$$:  682-block 125
branch 20 never executed (fallthrough)
branch 21 never executed
    $$$$$:  682-block 126
call   22 never executed
    $$$$$:  682-block 128
    $$$$$:  682-block 129
branch 23 never executed (fallthrough)
branch 24 never executed
    $$$$$:  682-block 130
call   25 never executed
    $$$$$:  682-block 132
    #####:  683:                STACK_ADDRESS = strtoul(regValueFirst, nullptr, 16);
    %%%%%:  683-block 99
call    0 never executed
        -:  684:            }
    #####:  685:            tempRegisterValueMap[regName] = regValueFirst;
    %%%%%:  685-block 101
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  685-block 102
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
        -:  686:        }
        -:  687:    }
    #####:  688:}
    %%%%%:  688-block 104
        -:  689:
function _Z14registerWindowv called 1077 returned 100% blocks executed 69%
     1077:  690:void registerWindow() {
     1077:  691:    if (codeHasRun){
     1077:  691-block 2
branch  0 taken 250 (fallthrough)
branch  1 taken 827
      250:  692:        if (tempContext!= nullptr){
      250:  692-block 3
branch  0 taken 0 (fallthrough)
branch  1 taken 250
    #####:  693:            updateRegs(true);
    %%%%%:  693-block 4
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  694:        }
        -:  695:        else{
      250:  696:            updateRegs();
      250:  696-block 5
call    0 returned 250
branch  1 taken 250 (fallthrough)
branch  2 taken 0 (throw)
        -:  697:        }
        -:  698:    }
        -:  699:
     1077:  700:    if (registerValueMap.empty()){
     1077:  700-block 6
call    0 returned 1077
branch  1 taken 1 (fallthrough)
branch  2 taken 1076
        1:  701:        initDefaultRegs();
        1:  701-block 8
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  702:    }
        -:  703:
     1077:  704:    const auto io = ImGui::GetIO();
     1077:  704-block 9
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  704-block 10
call    3 returned 1077
branch  4 taken 1077 (fallthrough)
branch  5 taken 0 (throw)
     1077:  705:    ImGui::PushFont(io.Fonts->Fonts[3]);
     1077:  705-block 11
call    0 returned 1077
call    1 returned 1077
branch  2 taken 1077 (fallthrough)
branch  3 taken 0 (throw)
        -:  706:
     1077:  707:    if (ImGui::BeginTable("RegistersTable", 4, ImGuiTableFlags_Borders | ImGuiTableFlags_RowBg | ImGuiTableFlags_Resizable)) {
     1077:  707-block 13
call    0 returned 1077
call    1 returned 1077
branch  2 taken 1077 (fallthrough)
branch  3 taken 0 (throw)
     1077:  707-block 15
branch  4 taken 1077 (fallthrough)
branch  5 taken 0
    $$$$$:  707-block 168
     1077:  708:        ImGui::TableSetupColumn("Register", ImGuiTableColumnFlags_WidthStretch);
     1077:  708-block 16
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  709:        ImGui::TableSetupColumn("Value", ImGuiTableColumnFlags_WidthStretch);
     1077:  709-block 17
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  710:        ImGui::TableSetupColumn("Register", ImGuiTableColumnFlags_WidthStretch);
     1077:  710-block 18
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  711:        ImGui::TableSetupColumn("Value", ImGuiTableColumnFlags_WidthStretch);
     1077:  711-block 19
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  712:        ImGui::TableHeadersRow();
     1077:  712-block 20
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
        -:  713:
     1077:  714:        int index = 0;
    12924:  715:        for (auto regValMapInfo = registerValueMap.begin(); regValMapInfo != registerValueMap.end(); ++index) {
     1077:  715-block 21
call    0 returned 1077
    11847:  715-block 158
    12924:  715-block 159
call    1 returned 12924
call    2 returned 12924
branch  3 taken 12924
branch  4 taken 0 (fallthrough)
   12924*:  716:            if (!isRegisterValid(toUpperCase(regValMapInfo->first), codeInformation.mode)){
    12924:  716-block 22
call    0 returned 12924
call    1 returned 12924
branch  2 taken 12924 (fallthrough)
branch  3 taken 0 (throw)
    12924:  716-block 24
call    4 returned 12924
branch  5 taken 12924 (fallthrough)
branch  6 taken 0 (throw)
    12924:  716-block 25
call    7 returned 12924
branch  8 taken 0 (fallthrough)
branch  9 taken 12924
    $$$$$:  716-block 169
call   10 never executed
    $$$$$:  716-block 171
    #####:  717:                ++regValMapInfo;
    %%%%%:  717-block 27
call    0 never executed
    #####:  718:                continue;
        -:  719:            }
        -:  720:
    12924:  721:            ImGui::TableNextRow();
    12924:  721-block 29
call    0 returned 12924
branch  1 taken 12924 (fallthrough)
branch  2 taken 0 (throw)
    12924:  722:            ImGui::TableSetColumnIndex(0);
    12924:  722-block 30
call    0 returned 12924
branch  1 taken 12924 (fallthrough)
branch  2 taken 0 (throw)
        -:  723:
    12924:  724:            const float textHeight = ImGui::GetTextLineHeight();
    12924:  724-block 31
call    0 returned 12924
branch  1 taken 12924 (fallthrough)
branch  2 taken 0 (throw)
    12924:  725:            const float frameHeight = ImGui::GetFrameHeight();
    12924:  725-block 32
call    0 returned 12924
branch  1 taken 12924 (fallthrough)
branch  2 taken 0 (throw)
    12924:  726:            const float spacing = (frameHeight - textHeight) / 2.0f;
        -:  727:
    12924:  728:            ImGui::SetCursorPosY(ImGui::GetCursorPosY() + spacing);
    12924:  728-block 33
call    0 returned 12924
branch  1 taken 12924 (fallthrough)
branch  2 taken 0 (throw)
    12924:  728-block 34
call    3 returned 12924
branch  4 taken 12924 (fallthrough)
branch  5 taken 0 (throw)
    12924:  729:            ImGui::PushID(index);
    12924:  729-block 35
call    0 returned 12924
branch  1 taken 12924 (fallthrough)
branch  2 taken 0 (throw)
        -:  730:
    12924:  731:            if (ImGui::Selectable(regValMapInfo->first.c_str(), false)) {
    12924:  731-block 36
call    0 returned 12924
call    1 returned 12924
call    2 returned 12924
call    3 returned 12924
branch  4 taken 12924 (fallthrough)
branch  5 taken 0 (throw)
    12924:  731-block 40
branch  6 taken 0 (fallthrough)
branch  7 taken 12924
    $$$$$:  731-block 172
    #####:  732:                hoveredReg = regValMapInfo->first;
    %%%%%:  732-block 41
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -:  733:            }
        -:  734:
    12924:  735:            if (ImGui::IsItemHovered()){
    12924:  735-block 43
call    0 returned 12924
branch  1 taken 12924 (fallthrough)
branch  2 taken 0 (throw)
    12924:  735-block 44
branch  3 taken 0 (fallthrough)
branch  4 taken 12924
    #####:  736:                hoveredReg = regValMapInfo->first;
    %%%%%:  736-block 45
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -:  737:            }
        -:  738:
    12924:  739:            ImGui::PopID();
    12924:  739-block 47
call    0 returned 12924
branch  1 taken 12924 (fallthrough)
branch  2 taken 0 (throw)
        -:  740:
    12924:  741:            ImGui::TableSetColumnIndex(1);
    12924:  741-block 48
call    0 returned 12924
branch  1 taken 12924 (fallthrough)
branch  2 taken 0 (throw)
        -:  742:
        -:  743:            static char regValueFirst[64] = {};
    12924:  744:            strncpy(regValueFirst, regValMapInfo->second.c_str(), sizeof(regValueFirst) - 1);
    12924:  744-block 49
call    0 returned 12924
call    1 returned 12924
    12924:  745:            regValueFirst[sizeof(regValueFirst) - 1] = '\0';
        -:  746:
    12924:  747:            ImGui::PushID(index * 2);
call    0 returned 12924
branch  1 taken 12924 (fallthrough)
branch  2 taken 0 (throw)
    12924:  748:            ImGui::SetNextItemWidth(-FLT_MIN);
    12924:  748-block 52
call    0 returned 12924
branch  1 taken 12924 (fallthrough)
branch  2 taken 0 (throw)
        -:  749:
    12924:  750:            bool isBigReg = getRegisterActualSize(regValMapInfo->first) > 64;
    12924:  750-block 53
call    0 returned 12924
call    1 returned 12924
branch  2 taken 12924 (fallthrough)
branch  3 taken 0 (throw)
    12924:  750-block 55
call    4 returned 12924
branch  5 taken 12924 (fallthrough)
branch  6 taken 0 (throw)
    12924:  750-block 56
call    7 returned 12924
    $$$$$:  750-block 173
call    8 never executed
    $$$$$:  750-block 175
    12924:  751:            constexpr ImGuiTextFlags flags = ImGuiInputTextFlags_CallbackCharFilter;
        -:  752:
    12924:  753:            if (registerContextMenu() == REGISTER_HIDDEN) {
call    0 returned 12924
branch  1 taken 12924 (fallthrough)
branch  2 taken 0 (throw)
    12924:  753-block 58
branch  3 taken 0 (fallthrough)
branch  4 taken 12924
    #####:  754:                regValMapInfo = registerValueMap.begin();
    %%%%%:  754-block 59
call    0 never executed
        -:  755:            }
        -:  756:
   12924*:  757:            int (*callback)(ImGuiInputTextCallbackData* data) = isBigReg ? decimalCallback: checkHexCharsCallback;
    12924:  757-block 61
branch  0 taken 0 (fallthrough)
branch  1 taken 12924
    %%%%%:  757-block 62
    12924:  757-block 63
    12924:  758:            if (ImGui::InputText(("##regValueFirst" + std::to_string(index)).c_str(), regValueFirst, IM_ARRAYSIZE(regValueFirst), ImGuiInputTextFlags_CharsNoBlank | ImGuiInputTextFlags_EnterReturnsTrue
    12924:  758-block 64
call    0 returned 12924
call    1 returned 12924
branch  2 taken 12924 (fallthrough)
branch  3 taken 0 (throw)
    12924:  758-block 66
call    4 returned 12924
call    5 returned 12924
branch  6 taken 12924 (fallthrough)
branch  7 taken 0 (throw)
    12924:  758-block 68
call    8 returned 12924
call    9 returned 12924
branch 10 taken 0 (fallthrough)
branch 11 taken 12924
    $$$$$:  758-block 176
call   12 never executed
    $$$$$:  758-block 178
call   13 never executed
    $$$$$:  758-block 180
    $$$$$:  758-block 181
        -:  759:            | flags, callback)) {
    #####:  760:                parseRegisterValueInput(regValMapInfo->first, regValueFirst, isBigReg);
    %%%%%:  760-block 71
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -:  761:            }
    12924:  762:            ImGui::PopID();
    12924:  762-block 73
call    0 returned 12924
branch  1 taken 12924 (fallthrough)
branch  2 taken 0 (throw)
        -:  763:
    25848:  764:            if (std::next(regValMapInfo) == registerValueMap.end()) break;
    12924:  764-block 74
call    0 returned 12924
call    1 returned 12924
    12924:  764-block 82
call    2 returned 12924
branch  3 taken 1077 (fallthrough)
branch  4 taken 11847
     1077:  764-block 84
    $$$$$:  764-block 182
    $$$$$:  764-block 183
    $$$$$:  764-block 184
    11847:  765:            if (registerValueMap.find(regValMapInfo->first) == registerValueMap.end()) {
    11847:  765-block 85
call    0 returned 11847
call    1 returned 11847
call    2 returned 11847
branch  3 taken 11847 (fallthrough)
branch  4 taken 0 (throw)
    11847:  765-block 88
call    5 returned 11847
branch  6 taken 0 (fallthrough)
branch  7 taken 11847
    $$$$$:  765-block 185
    $$$$$:  765-block 186
    #####:  766:                break;
    %%%%%:  766-block 90
        -:  767:            }
        -:  768:
    11847:  769:            ++regValMapInfo;
    11847:  769-block 91
call    0 returned 11847
   11847*:  770:            if (regValMapInfo == registerValueMap.end()) break;
call    0 returned 11847
call    1 returned 11847
branch  2 taken 0 (fallthrough)
branch  3 taken 11847
    %%%%%:  770-block 95
        -:  771:
    11847:  772:            ImGui::TableSetColumnIndex(2);
    11847:  772-block 96
call    0 returned 11847
branch  1 taken 11847 (fallthrough)
branch  2 taken 0 (throw)
    11847:  773:            ImGui::PushID(index + 3 * 4);
    11847:  773-block 97
call    0 returned 11847
branch  1 taken 11847 (fallthrough)
branch  2 taken 0 (throw)
        -:  774:
    11847:  775:            if (ImGui::Selectable(regValMapInfo->first.c_str(), false)) {
    11847:  775-block 98
call    0 returned 11847
call    1 returned 11847
call    2 returned 11847
call    3 returned 11847
branch  4 taken 11847 (fallthrough)
branch  5 taken 0 (throw)
    11847:  775-block 102
branch  6 taken 0 (fallthrough)
branch  7 taken 11847
    $$$$$:  775-block 187
    #####:  776:                hoveredReg = regValMapInfo->first;
    %%%%%:  776-block 103
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -:  777:            }
        -:  778:
    11847:  779:            if (ImGui::IsItemHovered()){
    11847:  779-block 105
call    0 returned 11847
branch  1 taken 11847 (fallthrough)
branch  2 taken 0 (throw)
    11847:  779-block 106
branch  3 taken 0 (fallthrough)
branch  4 taken 11847
    #####:  780:                hoveredReg = regValMapInfo->first;
    %%%%%:  780-block 107
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -:  781:            }
        -:  782:
    11847:  783:            ImGui::PopID();
    11847:  783-block 109
call    0 returned 11847
branch  1 taken 11847 (fallthrough)
branch  2 taken 0 (throw)
        -:  784:
    11847:  785:            ImGui::TableSetColumnIndex(3);
    11847:  785-block 110
call    0 returned 11847
branch  1 taken 11847 (fallthrough)
branch  2 taken 0 (throw)
        -:  786:            static char regValueSecond[64] = {};
    11847:  787:            strncpy(regValueSecond, regValMapInfo->second.c_str(), sizeof(regValueSecond) - 1);
    11847:  787-block 111
call    0 returned 11847
call    1 returned 11847
    11847:  788:            regValueSecond[sizeof(regValueSecond) - 1] = '\0';
        -:  789:
    11847:  790:            ImGui::PushID(index * 2 + 1);
call    0 returned 11847
branch  1 taken 11847 (fallthrough)
branch  2 taken 0 (throw)
    11847:  791:            ImGui::SetNextItemWidth(-FLT_MIN);
    11847:  791-block 114
call    0 returned 11847
branch  1 taken 11847 (fallthrough)
branch  2 taken 0 (throw)
    11847:  792:            if (registerContextMenu() == REGISTER_HIDDEN) {
    11847:  792-block 115
call    0 returned 11847
branch  1 taken 11847 (fallthrough)
branch  2 taken 0 (throw)
    11847:  792-block 116
branch  3 taken 0 (fallthrough)
branch  4 taken 11847
    #####:  793:                regValMapInfo = registerValueMap.begin();
    %%%%%:  793-block 117
call    0 never executed
        -:  794:            }
        -:  795:
    11847:  796:            isBigReg = getRegisterActualSize(regValMapInfo->first) > 64;
    11847:  796-block 119
call    0 returned 11847
call    1 returned 11847
branch  2 taken 11847 (fallthrough)
branch  3 taken 0 (throw)
    11847:  796-block 121
call    4 returned 11847
branch  5 taken 11847 (fallthrough)
branch  6 taken 0 (throw)
    11847:  796-block 122
call    7 returned 11847
    $$$$$:  796-block 188
call    8 never executed
    $$$$$:  796-block 190
   11847*:  797:            int (*callback2)(ImGuiInputTextCallbackData* data) = isBigReg ? decimalCallback: checkHexCharsCallback;
branch  0 taken 0 (fallthrough)
branch  1 taken 11847
    %%%%%:  797-block 124
    11847:  797-block 125
        -:  798:
    11847:  799:            if (ImGui::InputText(("##regValueSecond" + std::to_string(index)).c_str(), regValueSecond, IM_ARRAYSIZE(regValueSecond), ImGuiInputTextFlags_CharsNoBlank | ImGuiInputTextFlags_EnterReturnsTrue | flags, callback2)) {
    11847:  799-block 126
call    0 returned 11847
call    1 returned 11847
branch  2 taken 11847 (fallthrough)
branch  3 taken 0 (throw)
    11847:  799-block 128
call    4 returned 11847
call    5 returned 11847
branch  6 taken 11847 (fallthrough)
branch  7 taken 0 (throw)
    11847:  799-block 130
call    8 returned 11847
call    9 returned 11847
branch 10 taken 0 (fallthrough)
branch 11 taken 11847
    $$$$$:  799-block 191
call   12 never executed
    $$$$$:  799-block 193
call   13 never executed
    $$$$$:  799-block 195
    $$$$$:  799-block 196
    #####:  800:                parseRegisterValueInput(regValMapInfo->first, regValueSecond, isBigReg);
    %%%%%:  800-block 133
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -:  801:            }
        -:  802:
    11847:  803:            ImGui::PopID();
    11847:  803-block 135
call    0 returned 11847
branch  1 taken 11847 (fallthrough)
branch  2 taken 0 (throw)
   23694*:  804:            if (std::next(regValMapInfo) == registerValueMap.end()) break;
    11847:  804-block 136
call    0 returned 11847
call    1 returned 11847
    11847:  804-block 144
call    2 returned 11847
branch  3 taken 0 (fallthrough)
branch  4 taken 11847
    %%%%%:  804-block 146
    $$$$$:  804-block 197
    $$$$$:  804-block 198
    $$$$$:  804-block 199
        -:  805:
    11847:  806:            if (registerValueMap.find(regValMapInfo->first) == registerValueMap.end()) {
    11847:  806-block 147
call    0 returned 11847
call    1 returned 11847
call    2 returned 11847
branch  3 taken 11847 (fallthrough)
branch  4 taken 0 (throw)
    11847:  806-block 150
call    5 returned 11847
branch  6 taken 0 (fallthrough)
branch  7 taken 11847
    $$$$$:  806-block 200
    $$$$$:  806-block 201
    #####:  807:                break;
    %%%%%:  807-block 152
        -:  808:            }
        -:  809:
    11847:  810:            ++regValMapInfo;
    11847:  810-block 153
call    0 returned 11847
   11847*:  811:            if (regValMapInfo == registerValueMap.end()) break;
call    0 returned 11847
call    1 returned 11847
branch  2 taken 0 (fallthrough)
branch  3 taken 11847
    %%%%%:  811-block 157
        -:  812:        }
        -:  813:
     1077:  814:        ImGui::EndTable();
     1077:  814-block 162
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
        -:  815:    }
        -:  816:
     1077:  817:    registerCommandsUI();
     1077:  817-block 163
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
        -:  818:
     1077:  819:    ImGui::PopID();
     1077:  819-block 164
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  820:    ImGui::PopFont();
     1077:  820-block 165
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077:  821:}
     1077:  821-block 166
call    0 returned 1077
    $$$$$:  821-block 203
call    1 never executed
        -:  822:
function _Z27updateRegistersOnLaneChangev called 0 returned 0% blocks executed 0%
    #####:  823:bool updateRegistersOnLaneChange() {
    #####:  824:    for (const auto &regName: registerValueMap | std::views::keys) {
    %%%%%:  824-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  824-block 3
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  824-block 4
    %%%%%:  824-block 5
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:  824-block 29
call    9 never executed
    %%%%%:  824-block 30
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:  824-block 31
branch 13 never executed
branch 14 never executed (fallthrough)
    #####:  825:        const auto regSize = getRegisterActualSize(regName);
    %%%%%:  825-block 6
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  825-block 7
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  825-block 8
call    6 never executed
    $$$$$:  825-block 34
call    7 never executed
    $$$$$:  825-block 36
    #####:  826:        if (regSize > 64) {
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  827:            int type = 0;
        -:  828:
    #####:  829:            std::string s1 = regName.substr(regName.find_first_of('[') + 1);
    %%%%%:  829-block 10
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####:  830:            s1.erase(s1.size() - 1);
    %%%%%:  830-block 12
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -:  831:
    #####:  832:            if (regSize == 128) {
    %%%%%:  832-block 14
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  833:                type = 1;
    %%%%%:  833-block 15
        -:  834:            }
    #####:  835:            else if (regSize == 256) {
    %%%%%:  835-block 16
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  836:                type = 2;
    %%%%%:  836-block 17
        -:  837:            }
    #####:  838:            else if (regSize == 512) {
    %%%%%:  838-block 18
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  839:                type = 3;
    %%%%%:  839-block 19
        -:  840:            }
        -:  841:
    #####:  842:            use32BitLanes = !use32BitLanes;
    #####:  843:            removeRegisterFromView(getRegisterActualName(regName), type);
    %%%%%:  843-block 20
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  843-block 21
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  843-block 22
call    6 never executed
    $$$$$:  843-block 37
call    7 never executed
    $$$$$:  843-block 39
    #####:  844:            use32BitLanes = !use32BitLanes;
    #####:  845:            addRegisterToView(getRegisterActualName(regName), getRegister(regName));
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  845-block 24
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  845-block 25
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:  845-block 26
call    9 never executed
    $$$$$:  845-block 40
call   10 never executed
    $$$$$:  845-block 42
    $$$$$:  845-block 43
    #####:  846:        }
call    0 never executed
    $$$$$:  846-block 44
call    1 never executed
        -:  847:    }
    #####:  848:    return true;
    %%%%%:  848-block 32
    %%%%%:  848-block 33
        -:  849:}
