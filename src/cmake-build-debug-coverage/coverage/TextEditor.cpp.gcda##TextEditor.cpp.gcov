        -:    0:Source:/home/rc/ZathuraDbg/vendor/ImGuiColorTextEdit/TextEditor.cpp
        -:    0:Graph:/home/rc/ZathuraDbg/src/cmake-build-debug-coverage/CMakeFiles/Zathura.dir/home/rc/ZathuraDbg/vendor/ImGuiColorTextEdit/TextEditor.cpp.gcno
        -:    0:Data:/home/rc/ZathuraDbg/src/cmake-build-debug-coverage/CMakeFiles/Zathura.dir/home/rc/ZathuraDbg/vendor/ImGuiColorTextEdit/TextEditor.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <algorithm>
        -:    2:#include <string>
        -:    3:#include <cmath>
        -:    4:#include <set>
        -:    5:#define IMGUI_DEFINE_MATH_OPERATORS
        -:    6:#include "TextEditor.h"
        -:    7:
        -:    8:#define IMGUI_SCROLLBAR_WIDTH 14.0f
        -:    9:#define POS_TO_COORDS_COLUMN_OFFSET 0.33f
        -:   10:#define IMGUI_DEFINE_MATH_OPERATORS
        -:   11:#include "imgui.h" // for imGui::GetCurrentWindow()
        -:   12:#include "imgui_internal.h"
        -:   13:
        -:   14:// --------------------------------------- //
        -:   15:// ------------- Exposed API ------------- //
        -:   16:
function _ZN10TextEditorC2Ev called 1 returned 100% blocks executed 53%
        1:   17:TextEditor::TextEditor()
        1:   17-block 2
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   17-block 6
call    6 returned 1
call    7 returned 1
call    8 returned 1
call    9 returned 1
call   10 returned 1
call   11 returned 1
        -:   18:{
        1:   19:    SetPalette(defaultPalette);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   20:    mLines.push_back(Line());
        1:   20-block 13
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   20-block 15
call    4 returned 1
    $$$$$:   20-block 17
call    5 never executed
    $$$$$:   20-block 19
        1:   21:}
    $$$$$:   21-block 20
call    0 never executed
    $$$$$:   21-block 22
call    1 never executed
    $$$$$:   21-block 24
call    2 never executed
    $$$$$:   21-block 26
call    3 never executed
    $$$$$:   21-block 28
call    4 never executed
    $$$$$:   21-block 30
call    5 never executed
        -:   22:
function _ZN10TextEditorD2Ev called 0 returned 0% blocks executed 0%
    #####:   23:TextEditor::~TextEditor()
        -:   24:{
    #####:   25:}
    %%%%%:   25-block 2
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
        -:   26:
function _ZN10TextEditor10SetPaletteENS_9PaletteIdE called 2 returned 100% blocks executed 71%
        2:   27:void TextEditor::SetPalette(PaletteId aValue)
        -:   28:{
        2:   29:    mPaletteId = aValue;
        -:   30:    const Palette* palletteBase;
        2:   31:    switch (mPaletteId)
        2:   31-block 2
branch  0 taken 1
branch  1 taken 0
branch  2 taken 0
branch  3 taken 0
branch  4 taken 1
branch  5 taken 0
        -:   32:    {
        1:   33:        case PaletteId::Dark:
        1:   34:            palletteBase = &(GetDarkPalette());
        1:   34-block 3
call    0 returned 1
        1:   35:            break;
    #####:   36:        case PaletteId::Light:
    #####:   37:            palletteBase = &(GetLightPalette());
    %%%%%:   37-block 5
call    0 never executed
    #####:   38:            break;
    #####:   39:        case PaletteId::Mariana:
    #####:   40:            palletteBase = &(GetMarianaPalette());
    %%%%%:   40-block 7
call    0 never executed
    #####:   41:            break;
    #####:   42:        case PaletteId::RetroBlue:
    #####:   43:            palletteBase = &(GetRetroBluePalette());
    %%%%%:   43-block 9
call    0 never executed
    #####:   44:            break;
        1:   45:        case PaletteId::Catppuccin:
        1:   46:            palletteBase = &(GetCatppuccin());
        1:   46-block 11
call    0 returned 1
        1:   47:            break;
        -:   48:    }
        -:   49:    /* Update palette with the current alpha from style */
       50:   50:    for (int i = 0; i < (int)PaletteIndex::Max; ++i)
        2:   50-block 13
       50:   50-block 20
branch  0 taken 48
branch  1 taken 2 (fallthrough)
        -:   51:    {
       48:   52:        ImVec4 color = U32ColorToVec4((*palletteBase)[i]);
       48:   52-block 14
call    0 returned 48
call    1 returned 48
       48:   53:        color.w *= ImGui::GetStyle().Alpha;
call    0 returned 48
branch  1 taken 48 (fallthrough)
branch  2 taken 0 (throw)
       48:   54:        mPalette[i] = ImGui::ColorConvertFloat4ToU32(color);
       48:   54-block 17
call    0 returned 48
branch  1 taken 48 (fallthrough)
branch  2 taken 0 (throw)
       48:   54-block 18
call    3 returned 48
        -:   55:    }
        2:   56:}
        2:   56-block 21
        -:   57:
function _ZN10TextEditor21SetLanguageDefinitionENS_20LanguageDefinitionIdE called 1 returned 100% blocks executed 40%
        1:   58:void TextEditor::SetLanguageDefinition(LanguageDefinitionId aValue)
        -:   59:{
        1:   60:    mLanguageDefinitionId = aValue;
        1:   61:    switch (mLanguageDefinitionId)
        1:   61-block 2
branch  0 taken 0
branch  1 taken 1
branch  2 taken 0
branch  3 taken 0
branch  4 taken 0
branch  5 taken 0
branch  6 taken 0
branch  7 taken 0
branch  8 taken 0
branch  9 taken 0
branch 10 taken 0
branch 11 taken 0
branch 12 taken 0
        -:   62:    {
    #####:   63:        case LanguageDefinitionId::None:
    #####:   64:            mLanguageDefinition = nullptr;
    #####:   65:            return;
    %%%%%:   65-block 3
        1:   66:        case LanguageDefinitionId::Asmx86_64:
        1:   67:            mLanguageDefinition = &(LanguageDefinition::Asmx86_64());
        1:   67-block 4
call    0 returned 1
        1:   68:            break;
    #####:   69:        case LanguageDefinitionId::Cpp:
    #####:   70:            mLanguageDefinition = &(LanguageDefinition::Cpp());
    %%%%%:   70-block 6
call    0 never executed
    #####:   71:            break;
    #####:   72:        case LanguageDefinitionId::C:
    #####:   73:            mLanguageDefinition = &(LanguageDefinition::C());
    %%%%%:   73-block 8
call    0 never executed
    #####:   74:            break;
    #####:   75:        case LanguageDefinitionId::Cs:
    #####:   76:            mLanguageDefinition = &(LanguageDefinition::Cs());
    %%%%%:   76-block 10
call    0 never executed
    #####:   77:            break;
    #####:   78:        case LanguageDefinitionId::Python:
    #####:   79:            mLanguageDefinition = &(LanguageDefinition::Python());
    %%%%%:   79-block 12
call    0 never executed
    #####:   80:            break;
    #####:   81:        case LanguageDefinitionId::Lua:
    #####:   82:            mLanguageDefinition = &(LanguageDefinition::Lua());
    %%%%%:   82-block 14
call    0 never executed
    #####:   83:            break;
    #####:   84:        case LanguageDefinitionId::Json:
    #####:   85:            mLanguageDefinition = &(LanguageDefinition::Json());
    %%%%%:   85-block 16
call    0 never executed
    #####:   86:            break;
    #####:   87:        case LanguageDefinitionId::Sql:
    #####:   88:            mLanguageDefinition = &(LanguageDefinition::Sql());
    %%%%%:   88-block 18
call    0 never executed
    #####:   89:            break;
    #####:   90:        case LanguageDefinitionId::AngelScript:
    #####:   91:            mLanguageDefinition = &(LanguageDefinition::AngelScript());
    %%%%%:   91-block 20
call    0 never executed
    #####:   92:            break;
    #####:   93:        case LanguageDefinitionId::Glsl:
    #####:   94:            mLanguageDefinition = &(LanguageDefinition::Glsl());
    %%%%%:   94-block 22
call    0 never executed
    #####:   95:            break;
    #####:   96:        case LanguageDefinitionId::Hlsl:
    #####:   97:            mLanguageDefinition = &(LanguageDefinition::Hlsl());
    %%%%%:   97-block 24
call    0 never executed
    #####:   98:            break;
        -:   99:    }
        -:  100:
        1:  101:    mRegexList.clear();
        1:  101-block 26
call    0 returned 1
        2:  102:    for (const auto& r : mLanguageDefinition->mTokenRegexStrings)
call    0 returned 1
call    1 returned 1
        1:  102-block 29
call    2 returned 1
        2:  102-block 36
call    3 returned 2
branch  4 taken 1
branch  5 taken 1 (fallthrough)
        1:  103:        mRegexList.push_back(std::make_pair(boost::regex(r.first, boost::regex_constants::optimize), r.second));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  103-block 31
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  103-block 32
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  103-block 33
call    9 returned 1
call   10 returned 1
call   11 returned 1
    $$$$$:  103-block 40
call   12 never executed
    $$$$$:  103-block 42
call   13 never executed
    $$$$$:  103-block 44
    $$$$$:  103-block 45
        -:  104:
        1:  105:    Colorize();
        1:  105-block 38
call    0 returned 1
        -:  106:}
        -:  107:
function _ZNK10TextEditor25GetLanguageDefinitionNameEv called 0 returned 0% blocks executed 0%
    #####:  108:const char* TextEditor::GetLanguageDefinitionName() const
        -:  109:{
    #####:  110:    return mLanguageDefinition != nullptr ? mLanguageDefinition->mName.c_str() : "None";
    %%%%%:  110-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  110-block 3
call    2 never executed
    %%%%%:  110-block 4
    %%%%%:  110-block 5
        -:  111:}
        -:  112:
function _ZN10TextEditor10SetTabSizeEi called 1 returned 100% blocks executed 100%
        1:  113:void TextEditor::SetTabSize(int aValue)
        -:  114:{
        1:  115:    mTabSize = Max(1, Min(8, aValue));
        1:  115-block 2
call    0 returned 1
call    1 returned 1
        1:  116:}
        -:  117:
function _ZN10TextEditor14SetLineSpacingEf called 0 returned 0% blocks executed 0%
    #####:  118:void TextEditor::SetLineSpacing(float aValue)
        -:  119:{
    #####:  120:    mLineSpacing = Max(1.0f, Min(2.0f, aValue));
    %%%%%:  120-block 2
call    0 never executed
call    1 never executed
    #####:  121:}
        -:  122:
function _ZN10TextEditor9SelectAllEv called 0 returned 0% blocks executed 0%
    #####:  123:void TextEditor::SelectAll()
        -:  124:{
    #####:  125:    ClearSelections();
    %%%%%:  125-block 2
call    0 never executed
    #####:  126:    ClearExtraCursors();
call    0 never executed
    #####:  127:    MoveTop();
call    0 never executed
    #####:  128:    MoveBottom(true);
call    0 never executed
    #####:  129:}
        -:  130:
function _ZN10TextEditor10SelectLineEi called 0 returned 0% blocks executed 0%
    #####:  131:void TextEditor::SelectLine(int aLine)
        -:  132:{
    #####:  133:    ClearSelections();
    %%%%%:  133-block 2
call    0 never executed
    #####:  134:    ClearExtraCursors();
call    0 never executed
    #####:  135:    SetSelection({ aLine, 0 }, { aLine, GetLineMaxColumn(aLine) });
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    $$$$$:  135-block 9
    #####:  136:}
    %%%%%:  136-block 8
        -:  137:
function _ZN10TextEditor12SelectRegionEiiii called 0 returned 0% blocks executed 0%
    #####:  138:void TextEditor::SelectRegion(int aStartLine, int aStartChar, int aEndLine, int aEndChar)
        -:  139:{
    #####:  140:    ClearSelections();
    %%%%%:  140-block 2
call    0 never executed
    #####:  141:    ClearExtraCursors();
call    0 never executed
    #####:  142:    SetSelection(aStartLine, aStartChar, aEndLine, aEndChar);
call    0 never executed
    #####:  143:}
        -:  144:
function _ZN10TextEditor22SelectNextOccurrenceOfEPKcib called 0 returned 0% blocks executed 0%
    #####:  145:void TextEditor::SelectNextOccurrenceOf(const char* aText, int aTextSize, bool aCaseSensitive)
        -:  146:{
    #####:  147:    ClearSelections();
    %%%%%:  147-block 2
call    0 never executed
    #####:  148:    ClearExtraCursors();
call    0 never executed
    #####:  149:    SelectNextOccurrenceOf(aText, aTextSize, -1, aCaseSensitive);
call    0 never executed
    #####:  150:}
        -:  151:
function _ZN10TextEditor22SelectAllOccurrencesOfEPKcib called 0 returned 0% blocks executed 0%
    #####:  152:void TextEditor::SelectAllOccurrencesOf(const char* aText, int aTextSize, bool aCaseSensitive)
        -:  153:{
    #####:  154:    ClearSelections();
    %%%%%:  154-block 2
call    0 never executed
    #####:  155:    ClearExtraCursors();
call    0 never executed
    #####:  156:    SelectNextOccurrenceOf(aText, aTextSize, -1, aCaseSensitive);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  157:    Coordinates startPos = mState.mCursors[mState.GetLastAddedCursorIndex()].mInteractiveEnd;
    %%%%%:  157-block 5
call    0 never executed
call    1 never executed
        -:  158:    while (true)
        -:  159:    {
    #####:  160:        AddCursorForNextOccurrence(aCaseSensitive);
    %%%%%:  160-block 8
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  161:        Coordinates lastAddedPos = mState.mCursors[mState.GetLastAddedCursorIndex()].mInteractiveEnd;
    %%%%%:  161-block 9
call    0 never executed
call    1 never executed
    #####:  162:        if (lastAddedPos == startPos)
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:  163:            break;
    #####:  164:    }
    %%%%%:  164-block 14
    #####:  165:}
    %%%%%:  165-block 13
        -:  166:
function _ZNK10TextEditor21AnyCursorHasSelectionEv called 2 returned 100% blocks executed 100%
        2:  167:bool TextEditor::AnyCursorHasSelection() const
        -:  168:{
        3:  169:    for (int c = 0; c <= mState.mCurrentCursor; c++)
        2:  169-block 2
        1:  169-block 7
        3:  169-block 8
branch  0 taken 2
branch  1 taken 1 (fallthrough)
        2:  170:        if (mState.mCursors[c].HasSelection())
        2:  170-block 3
call    0 returned 2
call    1 returned 2
branch  2 taken 1 (fallthrough)
branch  3 taken 1
        1:  171:            return true;
        1:  171-block 6
        1:  172:    return false;
        1:  172-block 9
        -:  173:}
        -:  174:
function _ZNK10TextEditor23AllCursorsHaveSelectionEv called 0 returned 0% blocks executed 0%
    #####:  175:bool TextEditor::AllCursorsHaveSelection() const
        -:  176:{
    #####:  177:    for (int c = 0; c <= mState.mCurrentCursor; c++)
    %%%%%:  177-block 2
    %%%%%:  177-block 7
    %%%%%:  177-block 8
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:  178:        if (!mState.mCursors[c].HasSelection())
    %%%%%:  178-block 3
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
    #####:  179:            return false;
    %%%%%:  179-block 6
    #####:  180:    return true;
    %%%%%:  180-block 9
        -:  181:}
        -:  182:
function _ZN10TextEditor17ClearExtraCursorsEv called 2 returned 100% blocks executed 100%
        2:  183:void TextEditor::ClearExtraCursors()
        -:  184:{
        2:  185:    mState.mCurrentCursor = 0;
        2:  186:}
        -:  187:
function _ZN10TextEditor15ClearSelectionsEv called 2 returned 100% blocks executed 100%
        2:  188:void TextEditor::ClearSelections()
        -:  189:{
        4:  190:    for (int c = mState.mCurrentCursor; c > -1; c--)
        2:  190-block 2
        4:  190-block 8
branch  0 taken 2
branch  1 taken 2 (fallthrough)
        2:  191:        mState.mCursors[c].mInteractiveEnd =
        2:  192:        mState.mCursors[c].mInteractiveStart =
call    0 returned 2
call    1 returned 2
        2:  193:                mState.mCursors[c].GetSelectionEnd();
        2:  193-block 3
call    0 returned 2
call    1 returned 2
        2:  194:}
        -:  195:
function _ZN10TextEditor17SetCursorPositionEii called 0 returned 0% blocks executed 0%
    #####:  196:void TextEditor::SetCursorPosition(int aLine, int aCharIndex)
        -:  197:{
    #####:  198:    SetCursorPosition({ aLine, GetCharacterColumn(aLine, aCharIndex) }, -1, true);
    %%%%%:  198-block 2
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    #####:  199:}
    %%%%%:  199-block 5
        -:  200:
function _ZN10TextEditor19GetFirstVisibleLineEv called 0 returned 0% blocks executed 0%
    #####:  201:int TextEditor::GetFirstVisibleLine()
        -:  202:{
    #####:  203:    return mFirstVisibleLine;
    %%%%%:  203-block 2
        -:  204:}
        -:  205:
function _ZN10TextEditor18GetLastVisibleLineEv called 0 returned 0% blocks executed 0%
    #####:  206:int TextEditor::GetLastVisibleLine()
        -:  207:{
    #####:  208:    return mLastVisibleLine;
    %%%%%:  208-block 2
        -:  209:}
        -:  210:
function _ZN10TextEditor13SetViewAtLineEiNS_17SetViewAtLineModeE called 0 returned 0% blocks executed 0%
    #####:  211:void TextEditor::SetViewAtLine(int aLine, SetViewAtLineMode aMode)
        -:  212:{
    #####:  213:    mSetViewAtLine = aLine;
    #####:  214:    mSetViewAtLineMode = aMode;
    #####:  215:}
        -:  216:
function _ZN10TextEditor4CopyEv called 0 returned 0% blocks executed 0%
    #####:  217:void TextEditor::Copy()
        -:  218:{
    #####:  219:    if (AnyCursorHasSelection())
    %%%%%:  219-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -:  220:    {
    #####:  221:        std::string clipboardText = GetClipboardText();
    %%%%%:  221-block 4
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  222:        ImGui::SetClipboardText(clipboardText.c_str());
    %%%%%:  222-block 5
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####:  223:    }
    %%%%%:  223-block 7
call    0 never executed
    $$$$$:  223-block 26
call    1 never executed
        -:  224:    else
        -:  225:    {
    #####:  226:        if (!mLines.empty())
    %%%%%:  226-block 9
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -:  227:        {
    #####:  228:            std::string str;
    %%%%%:  228-block 11
call    0 never executed
    #####:  229:            auto& line = mLines[GetActualCursorCoordinates().mLine];
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  229-block 13
call    3 never executed
    #####:  230:            for (auto& g : line)
call    0 never executed
call    1 never executed
    %%%%%:  230-block 16
call    2 never executed
    %%%%%:  230-block 18
call    3 never executed
    %%%%%:  230-block 19
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
    #####:  231:                str.push_back(g.mChar);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  232:            ImGui::SetClipboardText(str.c_str());
    %%%%%:  232-block 21
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####:  233:        }
    %%%%%:  233-block 23
call    0 never executed
    $$$$$:  233-block 30
call    1 never executed
        -:  234:    }
    #####:  235:}
    %%%%%:  235-block 25
        -:  236:
function _ZN10TextEditor3CutEv called 0 returned 0% blocks executed 0%
    #####:  237:void TextEditor::Cut()
        -:  238:{
    #####:  239:    if (mReadOnly)
    %%%%%:  239-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  240:    {
    #####:  241:        Copy();
    %%%%%:  241-block 3
call    0 never executed
        -:  242:    }
        -:  243:    else
        -:  244:    {
    #####:  245:        if (AnyCursorHasSelection())
    %%%%%:  245-block 4
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -:  246:        {
    #####:  247:            UndoRecord u;
    %%%%%:  247-block 6
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  248:            u.mBefore = mState;
    %%%%%:  248-block 7
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  249:
    #####:  250:            Copy();
    %%%%%:  250-block 8
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  251:            for (int c = mState.mCurrentCursor; c > -1; c--)
    %%%%%:  251-block 9
    %%%%%:  251-block 18
    %%%%%:  251-block 19
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  252:            {
    #####:  253:                u.mOperations.push_back({ GetSelectedText(c), mState.mCursors[c].GetSelectionStart(), mState.mCursors[c].GetSelectionEnd(), UndoOperationType::Delete });
call    0 never executed
call    1 never executed
call    2 never executed
    %%%%%:  253-block 16
call    3 never executed
    $$$$$:  253-block 25
call    4 never executed
    $$$$$:  253-block 30
    #####:  254:                DeleteSelection(c);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  255:            }
        -:  256:
    #####:  257:            u.mAfter = mState;
    %%%%%:  257-block 20
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  258:            AddUndo(u);
    %%%%%:  258-block 21
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  259:        }
    %%%%%:  259-block 22
call    0 never executed
    $$$$$:  259-block 31
call    1 never executed
        -:  260:    }
    #####:  261:}
    %%%%%:  261-block 10
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  261-block 11
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  261-block 24
    $$$$$:  261-block 27
branch  7 never executed (fallthrough)
branch  8 never executed
    $$$$$:  261-block 28
call    9 never executed
        -:  262:
function _ZN10TextEditor5PasteEv called 0 returned 0% blocks executed 0%
    #####:  263:void TextEditor::Paste()
        -:  264:{
    #####:  265:    if (mReadOnly)
    %%%%%:  265-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  266:        return;
    %%%%%:  266-block 3
        -:  267:
    #####:  268:    const std::string originalClipboardText = ImGui::GetClipboardText();
    %%%%%:  268-block 6
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  268-block 7
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    $$$$$:  268-block 86
    #####:  269:    if (PasteCallback) {
    %%%%%:  269-block 9
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  270:        PasteCallback(originalClipboardText);
    %%%%%:  270-block 10
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  271:    }
        -:  272:
        -:  273:    // check if we should do multicursor paste
    #####:  274:    const std::string clipText = ImGui::GetClipboardText();
    %%%%%:  274-block 13
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  274-block 14
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    $$$$$:  274-block 89
        -:  275:
    #####:  276:    bool canPasteToMultipleCursors = false;
    #####:  277:    std::vector<std::pair<int, int>> clipTextLines;
    #####:  278:    if (mState.mCurrentCursor > 0)
    %%%%%:  278-block 16
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  279:    {
    #####:  280:        clipTextLines.push_back({ 0,0 });
    %%%%%:  280-block 17
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    $$$$$:  280-block 90
    $$$$$:  280-block 91
    $$$$$:  280-block 92
    #####:  281:        for (int i = 0; i < clipText.length(); i++)
    %%%%%:  281-block 19
    %%%%%:  281-block 26
    %%%%%:  281-block 27
call    0 never executed
branch  1 never executed
branch  2 never executed (fallthrough)
        -:  282:        {
    #####:  283:            if (clipText[i] == '\n')
    %%%%%:  283-block 20
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -:  284:            {
    #####:  285:                clipTextLines.back().second = i;
    %%%%%:  285-block 22
call    0 never executed
    #####:  286:                clipTextLines.push_back({ i + 1, 0 });
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  286-block 25
    $$$$$:  286-block 93
    $$$$$:  286-block 94
    $$$$$:  286-block 95
        -:  287:            }
        -:  288:        }
    #####:  289:        clipTextLines.back().second = clipText.length();
    %%%%%:  289-block 29
call    0 never executed
call    1 never executed
    #####:  290:        canPasteToMultipleCursors = clipTextLines.size() == mState.mCurrentCursor + 1;
call    0 never executed
        -:  291:    }
        -:  292:
    #####:  293:    if (clipText.length() > 0)
    %%%%%:  293-block 33
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -:  294:    {
    #####:  295:        UndoRecord u;
    %%%%%:  295-block 35
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  296:        u.mBefore = mState;
    %%%%%:  296-block 36
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  297:
    #####:  298:        if (AnyCursorHasSelection())
    %%%%%:  298-block 37
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -:  299:        {
    #####:  300:            for (int c = mState.mCurrentCursor; c > -1; c--)
    %%%%%:  300-block 39
    %%%%%:  300-block 48
    %%%%%:  300-block 49
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  301:            {
    #####:  302:                u.mOperations.push_back({ GetSelectedText(c), mState.mCursors[c].GetSelectionStart(), mState.mCursors[c].GetSelectionEnd(), UndoOperationType::Delete });
call    0 never executed
call    1 never executed
call    2 never executed
    %%%%%:  302-block 46
call    3 never executed
    $$$$$:  302-block 96
call    4 never executed
    $$$$$:  302-block 101
    #####:  303:                DeleteSelection(c);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  304:            }
        -:  305:        }
        -:  306:
    #####:  307:        for (int c = mState.mCurrentCursor; c > -1; c--)
    %%%%%:  307-block 50
    %%%%%:  307-block 70
    %%%%%:  307-block 71
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  308:        {
    #####:  309:            Coordinates start = GetActualCursorCoordinates(c);
    %%%%%:  309-block 51
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  310:            if (canPasteToMultipleCursors)
    %%%%%:  310-block 52
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  311:            {
    #####:  312:                std::string clipSubText = clipText.substr(clipTextLines[c].first, clipTextLines[c].second - clipTextLines[c].first);
    %%%%%:  312-block 53
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    #####:  313:                InsertTextAtCursor(clipSubText, c);
    %%%%%:  313-block 57
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  314:                u.mOperations.push_back({ clipSubText, start, GetActualCursorCoordinates(c), UndoOperationType::Add });
    %%%%%:  314-block 61
call    0 never executed
    $$$$$:  314-block 102
call    1 never executed
    $$$$$:  314-block 107
    #####:  315:            }
call    0 never executed
    $$$$$:  315-block 108
call    1 never executed
        -:  316:            else
        -:  317:            {
    #####:  318:                InsertTextAtCursor(clipText, c);
    %%%%%:  318-block 64
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  319:                u.mOperations.push_back({ clipText, start, GetActualCursorCoordinates(c), UndoOperationType::Add });
    %%%%%:  319-block 68
call    0 never executed
    $$$$$:  319-block 111
call    1 never executed
    $$$$$:  319-block 116
        -:  320:            }
        -:  321:        }
        -:  322:
    #####:  323:        u.mAfter = mState;
    %%%%%:  323-block 72
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  324:        AddUndo(u);
    %%%%%:  324-block 73
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  325:    }
    %%%%%:  325-block 74
call    0 never executed
    $$$$$:  325-block 118
call    1 never executed
        -:  326:
    #####:  327:    if (PasteCallback) {
    %%%%%:  327-block 76
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  328:        ImGui::SetClipboardText(originalClipboardText.c_str());
    %%%%%:  328-block 77
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -:  329:    }
    #####:  330:}
    %%%%%:  330-block 40
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  330-block 41
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  330-block 58
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:  330-block 59
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:  330-block 60
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
    %%%%%:  330-block 65
call   16 never executed
branch 17 never executed (fallthrough)
branch 18 never executed (throw)
    %%%%%:  330-block 66
call   19 never executed
branch 20 never executed (fallthrough)
branch 21 never executed (throw)
    %%%%%:  330-block 67
call   22 never executed
branch 23 never executed (fallthrough)
branch 24 never executed (throw)
    %%%%%:  330-block 79
call   25 never executed
call   26 never executed
call   27 never executed
    $$$$$:  330-block 98
branch 28 never executed (fallthrough)
branch 29 never executed
    $$$$$:  330-block 99
call   30 never executed
    $$$$$:  330-block 104
branch 31 never executed (fallthrough)
branch 32 never executed
    $$$$$:  330-block 105
call   33 never executed
    $$$$$:  330-block 113
branch 34 never executed (fallthrough)
branch 35 never executed
    $$$$$:  330-block 114
call   36 never executed
    $$$$$:  330-block 121
call   37 never executed
    $$$$$:  330-block 123
call   38 never executed
    $$$$$:  330-block 125
call   39 never executed
        -:  331:
function _ZN10TextEditor4UndoEi called 0 returned 0% blocks executed 0%
    #####:  332:void TextEditor::Undo(int aSteps)
        -:  333:{
    #####:  334:    while (CanUndo() && aSteps-- > 0)
    %%%%%:  334-block 2
    %%%%%:  334-block 5
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:  334-block 7
branch  3 never executed (fallthrough)
branch  4 never executed
    %%%%%:  334-block 8
    %%%%%:  334-block 9
    %%%%%:  334-block 10
branch  5 never executed
branch  6 never executed (fallthrough)
    #####:  335:        mUndoBuffer[--mUndoIndex].Undo(this);
    %%%%%:  335-block 3
call    0 never executed
call    1 never executed
    #####:  336:}
        -:  337:
function _ZN10TextEditor4RedoEi called 0 returned 0% blocks executed 0%
    #####:  338:void TextEditor::Redo(int aSteps)
        -:  339:{
    #####:  340:    while (CanRedo() && aSteps-- > 0)
    %%%%%:  340-block 2
    %%%%%:  340-block 5
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:  340-block 7
branch  3 never executed (fallthrough)
branch  4 never executed
    %%%%%:  340-block 8
    %%%%%:  340-block 9
    %%%%%:  340-block 10
branch  5 never executed
branch  6 never executed (fallthrough)
    #####:  341:        mUndoBuffer[mUndoIndex++].Redo(this);
    %%%%%:  341-block 3
call    0 never executed
call    1 never executed
    #####:  342:}
        -:  343:
function _ZN10TextEditor7SetTextERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 75%
        1:  344:void TextEditor::SetText(const std::string& aText)
        -:  345:{
        1:  346:    mLines.clear();
        1:  346-block 2
call    0 returned 1
        1:  347:    mLines.emplace_back(Line());
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  347-block 5
call    4 returned 1
    $$$$$:  347-block 26
call    5 never executed
    $$$$$:  347-block 28
call    6 never executed
      545:  348:    for (auto chr : aText)
call    0 returned 1
call    1 returned 1
      544:  348-block 8
call    2 returned 544
      544:  348-block 20
call    3 returned 544
      545:  348-block 21
call    4 returned 545
branch  5 taken 544
branch  6 taken 1 (fallthrough)
        -:  349:    {
     544*:  350:        if (chr == '\r')
branch  0 taken 0 (fallthrough)
branch  1 taken 544
    #####:  351:            continue;
    %%%%%:  351-block 10
        -:  352:
      544:  353:        if (chr == '\n')
      544:  353-block 11
branch  0 taken 40 (fallthrough)
branch  1 taken 504
       40:  354:            mLines.emplace_back(Line());
       40:  354-block 12
call    0 returned 40
call    1 returned 40
branch  2 taken 40 (fallthrough)
branch  3 taken 0 (throw)
       40:  354-block 14
call    4 returned 40
    $$$$$:  354-block 29
call    5 never executed
    $$$$$:  354-block 31
        -:  355:        else
        -:  356:        {
      504:  357:            mLines.back().emplace_back(Glyph(chr, PaletteIndex::Default));
      504:  357-block 16
call    0 returned 504
call    1 returned 504
call    2 returned 504
branch  3 taken 504 (fallthrough)
branch  4 taken 0 (throw)
      504:  357-block 19
    $$$$$:  357-block 32
        -:  358:        }
        -:  359:    }
        -:  360:
        1:  361:    mScrollToTop = true;
        -:  362:
        1:  363:    mUndoBuffer.clear();
        1:  363-block 23
call    0 returned 1
        1:  364:    mUndoIndex = 0;
        -:  365:
        1:  366:    Colorize();
call    0 returned 1
        1:  367:}
        -:  368:
function _ZNK10TextEditor7GetTextB5cxx11Ev called 0 returned 0% blocks executed 0%
    #####:  369:std::string TextEditor::GetText() const
        -:  370:{
    #####:  371:    auto lastLine = (int)mLines.size() - 1;
    %%%%%:  371-block 2
call    0 never executed
    #####:  372:    auto lastLineLength = GetLineMaxColumn(lastLine);
call    0 never executed
    #####:  373:    Coordinates startCoords = Coordinates();
call    0 never executed
    #####:  374:    Coordinates endCoords = Coordinates(lastLine, lastLineLength);
call    0 never executed
    #####:  375:    return startCoords < endCoords ? GetText(startCoords, endCoords) : "";
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:  375-block 8
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  375-block 11
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:  375-block 12
branch  9 never executed (fallthrough)
branch 10 never executed
    %%%%%:  375-block 15
    %%%%%:  375-block 16
    $$$$$:  375-block 17
branch 11 never executed (fallthrough)
branch 12 never executed
    $$$$$:  375-block 21
        -:  376:}
        -:  377:
function _ZN10TextEditor12SetTextLinesERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE called 0 returned 0% blocks executed 0%
    #####:  378:void TextEditor::SetTextLines(const std::vector<std::string>& aLines)
        -:  379:{
    #####:  380:    mLines.clear();
    %%%%%:  380-block 2
call    0 never executed
        -:  381:
    #####:  382:    if (aLines.empty())
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:  383:        mLines.emplace_back(Line());
    %%%%%:  383-block 5
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  383-block 7
call    4 never executed
    $$$$$:  383-block 30
call    5 never executed
    $$$$$:  383-block 32
call    6 never executed
        -:  384:    else
        -:  385:    {
    #####:  386:        mLines.resize(aLines.size());
    %%%%%:  386-block 9
call    0 never executed
call    1 never executed
        -:  387:
    #####:  388:        for (size_t i = 0; i < aLines.size(); ++i)
    %%%%%:  388-block 24
    %%%%%:  388-block 25
call    0 never executed
branch  1 never executed
branch  2 never executed (fallthrough)
        -:  389:        {
    #####:  390:            const std::string& aLine = aLines[i];
    %%%%%:  390-block 12
call    0 never executed
        -:  391:
    #####:  392:            mLines[i].reserve(aLine.size());
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  393:            for (size_t j = 0; j < aLine.size(); ++j)
    %%%%%:  393-block 22
call    0 never executed
branch  1 never executed
branch  2 never executed (fallthrough)
    #####:  394:                mLines[i].emplace_back(Glyph(aLine[j], PaletteIndex::Default));
    %%%%%:  394-block 17
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  394-block 21
        -:  395:        }
        -:  396:    }
        -:  397:
    #####:  398:    mScrollToTop = true;
        -:  399:
    #####:  400:    mUndoBuffer.clear();
    %%%%%:  400-block 27
call    0 never executed
    #####:  401:    mUndoIndex = 0;
        -:  402:
    #####:  403:    Colorize();
call    0 never executed
    #####:  404:}
        -:  405:
function _ZNK10TextEditor12GetTextLinesB5cxx11Ev called 0 returned 0% blocks executed 0%
    #####:  406:std::vector<std::string> TextEditor::GetTextLines() const
        -:  407:{
    #####:  408:    std::vector<std::string> result;
        -:  409:
    #####:  410:    result.reserve(mLines.size());
    %%%%%:  410-block 2
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -:  411:
    #####:  412:    for (auto& line : mLines)
    %%%%%:  412-block 4
call    0 never executed
call    1 never executed
    %%%%%:  412-block 6
call    2 never executed
call    3 never executed
    %%%%%:  412-block 20
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
        -:  413:    {
    #####:  414:        std::string text;
call    0 never executed
        -:  415:
    #####:  416:        text.resize(line.size());
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -:  417:
    #####:  418:        for (size_t i = 0; i < line.size(); ++i)
    %%%%%:  418-block 10
    %%%%%:  418-block 14
call    0 never executed
branch  1 never executed
branch  2 never executed (fallthrough)
    #####:  419:            text[i] = line[i].mChar;
    %%%%%:  419-block 11
call    0 never executed
call    1 never executed
        -:  420:
    #####:  421:        result.emplace_back(std::move(text));
    %%%%%:  421-block 16
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####:  422:    }
    %%%%%:  422-block 18
call    0 never executed
    $$$$$:  422-block 24
call    1 never executed
        -:  423:
    #####:  424:    return result;
    %%%%%:  424-block 22
    %%%%%:  424-block 23
    =====:  425:}
    $$$$$:  425-block 28
call    0 never executed
        -:  426:
function _ZN10TextEditor6RenderEPKcbRK6ImVec2b called 1077 returned 100% blocks executed 60%
     1077:  427:bool TextEditor::Render(const char* aTitle, bool aParentIsFocused, const ImVec2& aSize, bool aBorder)
        -:  428:{
     1077:  429:    if (mCursorPositionChanged)
     1077:  429-block 2
branch  0 taken 86 (fallthrough)
branch  1 taken 991
       86:  430:        OnCursorPositionChanged();
       86:  430-block 3
call    0 returned 86
     1077:  431:    mCursorPositionChanged = false;
        -:  432:
     1077:  433:    ImGui::PushStyleColor(ImGuiCol_ChildBg, ImGui::ColorConvertU32ToFloat4(mPalette[(int)PaletteIndex::Background]));
     1077:  433-block 4
call    0 returned 1077
call    1 returned 1077
branch  2 taken 1077 (fallthrough)
branch  3 taken 0 (throw)
     1077:  433-block 6
call    4 returned 1077
branch  5 taken 1077 (fallthrough)
branch  6 taken 0 (throw)
    $$$$$:  433-block 35
call    7 never executed
     1077:  434:    ImGui::PushStyleVar(ImGuiStyleVar_ItemSpacing, ImVec2(0.0f, 0.0f));
     1077:  434-block 7
call    0 returned 1077
call    1 returned 1077
branch  2 taken 1077 (fallthrough)
branch  3 taken 0 (throw)
        -:  435:
     1077:  436:    ImGui::BeginChild(aTitle, aSize, aBorder, ImGuiWindowFlags_HorizontalScrollbar | ImGuiWindowFlags_NoMove | ImGuiWindowFlags_NoNavInputs);
     1077:  436-block 9
call    0 returned 1077
        -:  437:
     1077:  438:    bool isFocused = ImGui::IsWindowFocused();
call    0 returned 1077
     1077:  439:    HandleKeyboardInputs(aParentIsFocused);
call    0 returned 1077
     1077:  440:    HandleMouseInputs();
call    0 returned 1077
     1077:  441:    ColorizeInternal();
call    0 returned 1077
     1077:  442:    Render(aParentIsFocused);
call    0 returned 1077
     1077:  443:    if (ImGui::BeginPopupContextItem("TextEditorContextMenu"))
call    0 returned 1077
branch  1 taken 0 (fallthrough)
branch  2 taken 1077
        -:  444:    {
    #####:  445:        if (ImGui::MenuItem("Copy", nullptr, false, AnyCursorHasSelection())) // Enable only if there is a selection
    %%%%%:  445-block 17
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
        -:  446:        {
    #####:  447:            Copy();
    %%%%%:  447-block 20
call    0 never executed
        -:  448:        }
    #####:  449:        if (ImGui::MenuItem("Paste", nullptr, false, !mReadOnly && ImGui::GetClipboardText() != nullptr)) // Enable only if not read-only and clipboard has text
    %%%%%:  449-block 21
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  449-block 22
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed
    %%%%%:  449-block 24
    %%%%%:  449-block 25
    %%%%%:  449-block 26
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed
        -:  450:        {
    #####:  451:            Paste();
    %%%%%:  451-block 28
call    0 never executed
        -:  452:        }
    #####:  453:        ImGui::EndPopup();
    %%%%%:  453-block 29
call    0 never executed
        -:  454:    }
        -:  455:
     1077:  456:    ImGui::EndChild();
     1077:  456-block 30
call    0 returned 1077
        -:  457:
     1077:  458:    ImGui::PopStyleVar();
call    0 returned 1077
     1077:  459:    ImGui::PopStyleColor();
call    0 returned 1077
        -:  460:
     1077:  461:    return isFocused;
     1077:  461-block 34
        -:  462:}
        -:  463:
        -:  464:// ------------------------------------ //
        -:  465:// ---------- Generic utils ----------- //
        -:  466:
        -:  467:// https://en.wikipedia.org/wiki/UTF-8
        -:  468:// We assume that the char is a standalone character (<128) or a leading byte of an UTF-8 code sequence (non-10xxxxxx code)
function _ZL14UTF8CharLengthc called 1697780 returned 100% blocks executed 58%
  1697780:  469:static int UTF8CharLength(char c)
        -:  470:{
  1697780:  471:    if ((c & 0xFE) == 0xFC)
  1697780:  471-block 2
branch  0 taken 0 (fallthrough)
branch  1 taken 1697780
    #####:  472:        return 6;
    %%%%%:  472-block 3
  1697780:  473:    if ((c & 0xFC) == 0xF8)
  1697780:  473-block 4
branch  0 taken 0 (fallthrough)
branch  1 taken 1697780
    #####:  474:        return 5;
    %%%%%:  474-block 5
  1697780:  475:    if ((c & 0xF8) == 0xF0)
  1697780:  475-block 6
branch  0 taken 0 (fallthrough)
branch  1 taken 1697780
    #####:  476:        return 4;
    %%%%%:  476-block 7
  1697780:  477:    else if ((c & 0xF0) == 0xE0)
  1697780:  477-block 8
branch  0 taken 0 (fallthrough)
branch  1 taken 1697780
    #####:  478:        return 3;
    %%%%%:  478-block 9
  1697780:  479:    else if ((c & 0xE0) == 0xC0)
  1697780:  479-block 10
branch  0 taken 0 (fallthrough)
branch  1 taken 1697780
    #####:  480:        return 2;
    %%%%%:  480-block 11
  1697780:  481:    return 1;
  1697780:  481-block 12
        -:  482:}
        -:  483:
        -:  484:// "Borrowed" from ImGui source
function _ZL16ImTextCharToUtf8Pcij called 0 returned 0% blocks executed 0%
    #####:  485:static inline int ImTextCharToUtf8(char* buf, int buf_size, unsigned int c)
        -:  486:{
    #####:  487:    if (c < 0x80)
    %%%%%:  487-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  488:    {
    #####:  489:        buf[0] = (char)c;
    #####:  490:        return 1;
    %%%%%:  490-block 3
        -:  491:    }
    #####:  492:    if (c < 0x800)
    %%%%%:  492-block 4
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  493:    {
    #####:  494:        if (buf_size < 2) return 0;
    %%%%%:  494-block 5
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  494-block 6
    #####:  495:        buf[0] = (char)(0xc0 + (c >> 6));
    #####:  496:        buf[1] = (char)(0x80 + (c & 0x3f));
    #####:  497:        return 2;
    %%%%%:  497-block 7
        -:  498:    }
    #####:  499:    if (c >= 0xdc00 && c < 0xe000)
    %%%%%:  499-block 8
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  499-block 9
branch  2 never executed (fallthrough)
branch  3 never executed
        -:  500:    {
    #####:  501:        return 0;
    %%%%%:  501-block 10
        -:  502:    }
    #####:  503:    if (c >= 0xd800 && c < 0xdc00)
    %%%%%:  503-block 11
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  503-block 12
branch  2 never executed (fallthrough)
branch  3 never executed
        -:  504:    {
    #####:  505:        if (buf_size < 4) return 0;
    %%%%%:  505-block 13
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  505-block 14
    #####:  506:        buf[0] = (char)(0xf0 + (c >> 18));
    #####:  507:        buf[1] = (char)(0x80 + ((c >> 12) & 0x3f));
    #####:  508:        buf[2] = (char)(0x80 + ((c >> 6) & 0x3f));
    #####:  509:        buf[3] = (char)(0x80 + ((c) & 0x3f));
    #####:  510:        return 4;
    %%%%%:  510-block 15
        -:  511:    }
        -:  512:    //else if (c < 0x10000)
        -:  513:    {
    #####:  514:        if (buf_size < 3) return 0;
    %%%%%:  514-block 16
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  514-block 17
    #####:  515:        buf[0] = (char)(0xe0 + (c >> 12));
    #####:  516:        buf[1] = (char)(0x80 + ((c >> 6) & 0x3f));
    #####:  517:        buf[2] = (char)(0x80 + ((c) & 0x3f));
    #####:  518:        return 3;
    %%%%%:  518-block 18
        -:  519:    }
        -:  520:}
        -:  521:
function _ZL14CharIsWordCharc called 0 returned 0% blocks executed 0%
    #####:  522:static inline bool CharIsWordChar(char ch)
        -:  523:{
    #####:  524:    int sizeInBytes = UTF8CharLength(ch);
    %%%%%:  524-block 2
call    0 never executed
    #####:  525:    return sizeInBytes > 1 ||
    %%%%%:  525-block 4
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  526:           ch >= 'a' && ch <= 'z' ||
    %%%%%:  526-block 5
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  526-block 6
branch  2 never executed (fallthrough)
branch  3 never executed
    #####:  527:           ch >= 'A' && ch <= 'Z' ||
    %%%%%:  527-block 7
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  527-block 8
branch  2 never executed (fallthrough)
branch  3 never executed
    #####:  528:           ch >= '0' && ch <= '9' ||
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  528-block 9
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%:  528-block 10
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%:  528-block 11
    %%%%%:  528-block 12
    #####:  529:           ch == '_';
    %%%%%:  529-block 13
        -:  530:}
        -:  531:
        -:  532:// ------------------------------------ //
        -:  533:// ------------- Internal ------------- //
        -:  534:
        -:  535:
        -:  536:// ---------- Editor state functions --------- //
        -:  537:
function _ZN10TextEditor11EditorState9AddCursorEv called 0 returned 0% blocks executed 0%
    #####:  538:void TextEditor::EditorState::AddCursor()
        -:  539:{
        -:  540:    // vector is never resized to smaller size, mCurrentCursor points to last available cursor in vector
    #####:  541:    mCurrentCursor++;
    #####:  542:    mCursors.resize(mCurrentCursor + 1);
    %%%%%:  542-block 2
call    0 never executed
    #####:  543:    mLastAddedCursor = mCurrentCursor;
    #####:  544:}
        -:  545:
function _ZN10TextEditor11EditorState23GetLastAddedCursorIndexEv called 105 returned 100% blocks executed 80%
      105:  546:int TextEditor::EditorState::GetLastAddedCursorIndex()
        -:  547:{
     105*:  548:    return mLastAddedCursor > mCurrentCursor ? 0 : mLastAddedCursor;
      105:  548-block 2
branch  0 taken 105 (fallthrough)
branch  1 taken 0
      105:  548-block 3
    %%%%%:  548-block 4
      105:  548-block 5
        -:  549:}
        -:  550:
function _ZN10TextEditor11EditorState26SortCursorsFromTopToBottomEv called 2 returned 100% blocks executed 94%
        2:  551:void TextEditor::EditorState::SortCursorsFromTopToBottom()
        -:  552:{
        2:  553:    Coordinates lastAddedCursorPos = mCursors[GetLastAddedCursorIndex()].mInteractiveEnd;
        2:  553-block 2
call    0 returned 2
call    1 returned 2
function _ZZN10TextEditor11EditorState26SortCursorsFromTopToBottomEvENKUlRKNS_6CursorES3_E_clES3_S3_ called 0 returned 0% blocks executed 0%
       2*:  554:    std::sort(mCursors.begin(), mCursors.begin() + (mCurrentCursor + 1), [](const Cursor& a, const Cursor& b) -> bool
call    0 returned 2
call    1 returned 2
call    2 returned 2
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
    $$$$$:  554-block 16
        -:  555:    {
    #####:  556:        return a.GetSelectionStart() < b.GetSelectionStart();
    %%%%%:  556-block 2
call    0 never executed
call    1 never executed
call    2 never executed
        -:  557:    });
        -:  558:    // update last added cursor index to be valid after sort
        4:  559:    for (int c = mCurrentCursor; c > -1; c--)
        2:  559-block 8
        2:  559-block 13
        4:  559-block 14
branch  0 taken 2
branch  1 taken 2 (fallthrough)
        2:  560:        if (mCursors[c].mInteractiveEnd == lastAddedCursorPos)
        2:  560-block 9
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0
        2:  561:            mLastAddedCursor = c;
        2:  561-block 12
        2:  562:}
        2:  562-block 15
        -:  563:
        -:  564:// ---------- Undo record functions --------- //
        -:  565:
function _ZN10TextEditor10UndoRecordC2ERKSt6vectorINS_13UndoOperationESaIS2_EERNS_11EditorStateES8_ called 0 returned 0% blocks executed 0%
    #####:  566:TextEditor::UndoRecord::UndoRecord(const std::vector<UndoOperation>& aOperations,
    #####:  567:                                   TextEditor::EditorState& aBefore, TextEditor::EditorState& aAfter)
    %%%%%:  567-block 2
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  567-block 4
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
        -:  568:{
    #####:  569:    mOperations = aOperations;
    %%%%%:  569-block 5
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  570:    mBefore = aBefore;
    %%%%%:  570-block 6
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  571:    mAfter = aAfter;
    %%%%%:  571-block 7
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  572:    for (const UndoOperation& o : mOperations)
    %%%%%:  572-block 8
call    0 never executed
call    1 never executed
    %%%%%:  572-block 10
call    2 never executed
    %%%%%:  572-block 14
call    3 never executed
    %%%%%:  572-block 15
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
    #####:  573:        assert(o.mStart <= o.mEnd);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:  573-block 13
call    3 never executed
    #####:  574:}
    %%%%%:  574-block 17
    $$$$$:  574-block 18
call    0 never executed
    $$$$$:  574-block 20
call    1 never executed
    $$$$$:  574-block 22
call    2 never executed
        -:  575:
function _ZN10TextEditor10UndoRecord4UndoEPS_ called 0 returned 0% blocks executed 0%
    #####:  576:void TextEditor::UndoRecord::Undo(TextEditor* aEditor)
        -:  577:{
    #####:  578:    for (int i = mOperations.size() - 1; i > -1; i--)
    %%%%%:  578-block 2
call    0 never executed
    %%%%%:  578-block 17
    %%%%%:  578-block 18
branch  1 never executed
branch  2 never executed (fallthrough)
        -:  579:    {
    #####:  580:        const UndoOperation& operation = mOperations[i];
    %%%%%:  580-block 4
call    0 never executed
    #####:  581:        if (!operation.mText.empty())
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -:  582:        {
    #####:  583:            switch (operation.mType)
    %%%%%:  583-block 7
branch  0 never executed
branch  1 never executed
branch  2 never executed
        -:  584:            {
    #####:  585:                case UndoOperationType::Delete:
        -:  586:                {
    #####:  587:                    auto start = operation.mStart;
    #####:  588:                    aEditor->InsertTextAt(start, operation.mText.c_str());
    %%%%%:  588-block 8
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####:  589:                    aEditor->Colorize(operation.mStart.mLine - 1, operation.mEnd.mLine - operation.mStart.mLine + 2);
    %%%%%:  589-block 10
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  590:                    break;
    %%%%%:  590-block 11
        -:  591:                }
    #####:  592:                case UndoOperationType::Add:
        -:  593:                {
    #####:  594:                    aEditor->DeleteRange(operation.mStart, operation.mEnd);
    %%%%%:  594-block 13
call    0 never executed
    #####:  595:                    aEditor->Colorize(operation.mStart.mLine - 1, operation.mEnd.mLine - operation.mStart.mLine + 2);
call    0 never executed
    #####:  596:                    break;
        -:  597:                }
        -:  598:            }
        -:  599:        }
        -:  600:    }
        -:  601:
    #####:  602:    aEditor->mState = mBefore;
    %%%%%:  602-block 19
call    0 never executed
    #####:  603:    aEditor->EnsureCursorVisible();
call    0 never executed
    #####:  604:}
        -:  605:
function _ZN10TextEditor10UndoRecord4RedoEPS_ called 0 returned 0% blocks executed 0%
    #####:  606:void TextEditor::UndoRecord::Redo(TextEditor* aEditor)
        -:  607:{
    #####:  608:    for (int i = 0; i < mOperations.size(); i++)
    %%%%%:  608-block 2
    %%%%%:  608-block 16
    %%%%%:  608-block 17
call    0 never executed
branch  1 never executed
branch  2 never executed (fallthrough)
        -:  609:    {
    #####:  610:        const UndoOperation& operation = mOperations[i];
    %%%%%:  610-block 3
call    0 never executed
    #####:  611:        if (!operation.mText.empty())
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -:  612:        {
    #####:  613:            switch (operation.mType)
    %%%%%:  613-block 6
branch  0 never executed
branch  1 never executed
branch  2 never executed
        -:  614:            {
    #####:  615:                case UndoOperationType::Delete:
        -:  616:                {
    #####:  617:                    aEditor->DeleteRange(operation.mStart, operation.mEnd);
    %%%%%:  617-block 7
call    0 never executed
    #####:  618:                    aEditor->Colorize(operation.mStart.mLine - 1, operation.mEnd.mLine - operation.mStart.mLine + 1);
call    0 never executed
    #####:  619:                    break;
        -:  620:                }
    #####:  621:                case UndoOperationType::Add:
        -:  622:                {
    #####:  623:                    auto start = operation.mStart;
    #####:  624:                    aEditor->InsertTextAt(start, operation.mText.c_str());
    %%%%%:  624-block 10
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####:  625:                    aEditor->Colorize(operation.mStart.mLine - 1, operation.mEnd.mLine - operation.mStart.mLine + 1);
    %%%%%:  625-block 12
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  626:                    break;
    %%%%%:  626-block 13
        -:  627:                }
        -:  628:            }
        -:  629:        }
        -:  630:    }
        -:  631:
    #####:  632:    aEditor->mState = mAfter;
    %%%%%:  632-block 19
call    0 never executed
    #####:  633:    aEditor->EnsureCursorVisible();
call    0 never executed
    #####:  634:}
        -:  635:
        -:  636:// ---------- Text editor internal functions --------- //
        -:  637:
function _ZNK10TextEditor7GetTextB5cxx11ERKNS_11CoordinatesES2_ called 0 returned 0% blocks executed 0%
    #####:  638:std::string TextEditor::GetText(const Coordinates& aStart, const Coordinates& aEnd) const
        -:  639:{
    #####:  640:    if (aStart > aEnd){
    %%%%%:  640-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:  641:        return "";
    %%%%%:  641-block 6
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  641-block 8
    $$$$$:  641-block 37
        -:  642:    }
        -:  643:
    #####:  644:    std::string result;
    %%%%%:  644-block 9
call    0 never executed
    #####:  645:    auto lstart = aStart.mLine;
    #####:  646:    auto lend = aEnd.mLine;
    #####:  647:    auto istart = GetCharacterIndexR(aStart);
call    0 never executed
    #####:  648:    auto iend = GetCharacterIndexR(aEnd);
call    0 never executed
    #####:  649:    size_t s = 0;
        -:  650:
    #####:  651:    for (size_t i = lstart; i < lend; i++)
    %%%%%:  651-block 16
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:  652:        s += mLines[i].size();
    %%%%%:  652-block 13
call    0 never executed
call    1 never executed
        -:  653:
    #####:  654:    result.reserve(s + s / 8);
    %%%%%:  654-block 17
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  655:
    #####:  656:    while (istart < iend || lstart < lend)
    %%%%%:  656-block 18
    %%%%%:  656-block 29
branch  0 never executed
branch  1 never executed (fallthrough)
    %%%%%:  656-block 30
branch  2 never executed
branch  3 never executed (fallthrough)
        -:  657:    {
    #####:  658:        if (lstart >= (int)mLines.size())
    %%%%%:  658-block 19
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:  659:            break;
    %%%%%:  659-block 21
        -:  660:
    #####:  661:        auto& line = mLines[lstart];
    %%%%%:  661-block 22
call    0 never executed
    #####:  662:        if (istart < (int)line.size())
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -:  663:        {
    #####:  664:            result += line[istart].mChar;
    %%%%%:  664-block 25
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####:  665:            istart++;
    %%%%%:  665-block 27
        -:  666:        }
        -:  667:        else
        -:  668:        {
    #####:  669:            istart = 0;
    #####:  670:            ++lstart;
    #####:  671:            result += '\n';
    %%%%%:  671-block 28
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  672:        }
        -:  673:    }
        -:  674:
    #####:  675:    return result;
    %%%%%:  675-block 31
call    0 never executed
    #####:  676:}
call    0 never executed
    $$$$$:  676-block 38
call    1 never executed
        -:  677:
function _ZNK10TextEditor16GetClipboardTextB5cxx11Ev called 0 returned 0% blocks executed 0%
    #####:  678:std::string TextEditor::GetClipboardText() const
        -:  679:{
    #####:  680:    std::string result;
    %%%%%:  680-block 2
call    0 never executed
    #####:  681:    for (int c = 0; c <= mState.mCurrentCursor; c++)
    %%%%%:  681-block 21
    %%%%%:  681-block 22
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  682:    {
    #####:  683:        if (mState.mCursors[c].GetSelectionStart() < mState.mCursors[c].GetSelectionEnd())
    %%%%%:  683-block 4
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed
        -:  684:        {
    #####:  685:            if (result.length() != 0)
    %%%%%:  685-block 10
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:  686:                result += '\n';
    %%%%%:  686-block 12
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  687:            result += GetText(mState.mCursors[c].GetSelectionStart(), mState.mCursors[c].GetSelectionEnd());
    %%%%%:  687-block 13
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  687-block 18
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:  687-block 19
call   10 never executed
    $$$$$:  687-block 25
call   11 never executed
    $$$$$:  687-block 27
    $$$$$:  687-block 28
    $$$$$:  687-block 29
        -:  688:        }
        -:  689:    }
    #####:  690:    return result;
    %%%%%:  690-block 23
    %%%%%:  690-block 24
    =====:  691:}
    $$$$$:  691-block 30
call    0 never executed
        -:  692:
function _ZNK10TextEditor15GetSelectedTextB5cxx11Ei called 0 returned 0% blocks executed 0%
    #####:  693:std::string TextEditor::GetSelectedText(int aCursor) const
        -:  694:{
    #####:  695:    if (aCursor == -1)
    %%%%%:  695-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  696:        aCursor = mState.mCurrentCursor;
    %%%%%:  696-block 3
        -:  697:
    #####:  698:    return GetText(mState.mCursors[aCursor].GetSelectionStart(), mState.mCursors[aCursor].GetSelectionEnd());
    %%%%%:  698-block 4
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  698-block 9
    %%%%%:  698-block 10
    %%%%%:  698-block 11
    $$$$$:  698-block 12
        -:  699:}
        -:  700:
function _ZN10TextEditor17SetCursorPositionERKNS_11CoordinatesEib called 86 returned 100% blocks executed 91%
       86:  701:void TextEditor::SetCursorPosition(const Coordinates& aPosition, int aCursor, bool aClearSelection)
        -:  702:{
       86:  703:    if (aCursor == -1)
       86:  703-block 2
branch  0 taken 0 (fallthrough)
branch  1 taken 86
    #####:  704:        aCursor = mState.mCurrentCursor;
    %%%%%:  704-block 3
        -:  705:
       86:  706:    mCursorPositionChanged = true;
       86:  707:    if (aClearSelection)
       86:  707-block 4
branch  0 taken 2 (fallthrough)
branch  1 taken 84
        2:  708:        mState.mCursors[aCursor].mInteractiveStart = aPosition;
        2:  708-block 5
call    0 returned 2
       86:  709:    if (mState.mCursors[aCursor].mInteractiveEnd != aPosition)
       86:  709-block 7
call    0 returned 86
call    1 returned 86
branch  2 taken 17 (fallthrough)
branch  3 taken 69
        -:  710:    {
       17:  711:        mState.mCursors[aCursor].mInteractiveEnd = aPosition;
       17:  711-block 10
call    0 returned 17
       17:  712:        EnsureCursorVisible();
call    0 returned 17
        -:  713:    }
       86:  714:}
        -:  715:
function _ZN10TextEditor12InsertTextAtERNS_11CoordinatesEPKc called 0 returned 0% blocks executed 0%
    #####:  716:int TextEditor::InsertTextAt(Coordinates& /* inout */ aWhere, const char* aValue)
        -:  717:{
    #####:  718:    assert(!mReadOnly);
    %%%%%:  718-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  718-block 3
call    2 never executed
        -:  719:
    #####:  720:    int cindex = GetCharacterIndexR(aWhere);
    %%%%%:  720-block 4
call    0 never executed
    #####:  721:    int totalLines = 0;
    #####:  722:    while (*aValue != '\0')
    %%%%%:  722-block 37
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  723:    {
    #####:  724:        assert(!mLines.empty());
    %%%%%:  724-block 6
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:  724-block 8
call    3 never executed
        -:  725:
    #####:  726:        if (*aValue == '\r')
    %%%%%:  726-block 9
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  727:        {
        -:  728:            // skip
    #####:  729:            ++aValue;
    %%%%%:  729-block 10
        -:  730:        }
    #####:  731:        else if (*aValue == '\n')
    %%%%%:  731-block 11
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  732:        {
    #####:  733:            if (cindex < (int)mLines[aWhere.mLine].size())
    %%%%%:  733-block 12
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
        -:  734:            {
    #####:  735:                auto& newLine = InsertLine(aWhere.mLine + 1);
    %%%%%:  735-block 15
call    0 never executed
    #####:  736:                auto& line = mLines[aWhere.mLine];
call    0 never executed
    #####:  737:                AddGlyphsToLine(aWhere.mLine + 1, 0, line.begin() + cindex, line.end());
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    $$$$$:  737-block 40
call    6 never executed
    #####:  738:                RemoveGlyphsFromLine(aWhere.mLine, cindex);
    %%%%%:  738-block 21
call    0 never executed
        -:  739:            }
        -:  740:            else
        -:  741:            {
    #####:  742:                InsertLine(aWhere.mLine + 1);
    %%%%%:  742-block 22
call    0 never executed
        -:  743:            }
    #####:  744:            ++aWhere.mLine;
    #####:  745:            aWhere.mColumn = 0;
    #####:  746:            cindex = 0;
    #####:  747:            ++totalLines;
    #####:  748:            ++aValue;
    %%%%%:  748-block 23
        -:  749:        }
        -:  750:        else
        -:  751:        {
    #####:  752:            auto& line = mLines[aWhere.mLine];
    %%%%%:  752-block 24
call    0 never executed
    #####:  753:            auto d = UTF8CharLength(*aValue);
call    0 never executed
    #####:  754:            while (d-- > 0 && *aValue != '\0')
    %%%%%:  754-block 30
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  754-block 31
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%:  754-block 32
    %%%%%:  754-block 33
    %%%%%:  754-block 34
branch  4 never executed
branch  5 never executed (fallthrough)
    #####:  755:                AddGlyphToLine(aWhere.mLine, cindex++, Glyph(*aValue++, PaletteIndex::Default));
    %%%%%:  755-block 27
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  755-block 29
    #####:  756:            aWhere.mColumn = GetCharacterColumn(aWhere.mLine, cindex);
    %%%%%:  756-block 35
call    0 never executed
        -:  757:        }
        -:  758:    }
        -:  759:
    #####:  760:    return totalLines;
    %%%%%:  760-block 38
    %%%%%:  760-block 39
        -:  761:}
        -:  762:
function _ZN10TextEditor18InsertTextAtCursorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi called 0 returned 0% blocks executed 0%
    #####:  763:void TextEditor::InsertTextAtCursor(const std::string& aValue, int aCursor)
        -:  764:{
    #####:  765:    InsertTextAtCursor(aValue.c_str(), aCursor);
    %%%%%:  765-block 2
call    0 never executed
call    1 never executed
    #####:  766:}
        -:  767:
function _ZN10TextEditor18InsertTextAtCursorEPKci called 0 returned 0% blocks executed 0%
    #####:  768:void TextEditor::InsertTextAtCursor(const char* aValue, int aCursor)
        -:  769:{
    #####:  770:    if (aValue == nullptr)
    %%%%%:  770-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  771:        return;
    %%%%%:  771-block 3
    #####:  772:    if (aCursor == -1)
    %%%%%:  772-block 4
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  773:        aCursor = mState.mCurrentCursor;
    %%%%%:  773-block 5
        -:  774:
    #####:  775:    auto pos = GetActualCursorCoordinates(aCursor);
    %%%%%:  775-block 6
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  776:    auto start = std::min(pos, mState.mCursors[aCursor].GetSelectionStart());
    %%%%%:  776-block 7
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  777:    int totalLines = pos.mLine - start.mLine;
        -:  778:
    #####:  779:    totalLines += InsertTextAt(pos, aValue);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  780:
    #####:  781:    SetCursorPosition(pos, aCursor);
    %%%%%:  781-block 11
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  782:    Colorize(start.mLine - 1, totalLines + 2);
    %%%%%:  782-block 12
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  783:}
        -:  784:
function _ZNK10TextEditor4MoveERiS0_bb called 0 returned 0% blocks executed 0%
    #####:  785:bool TextEditor::Move(int& aLine, int& aCharIndex, bool aLeft, bool aLockLine) const
        -:  786:{
        -:  787:    // assumes given char index is not in the middle of utf8 sequence
        -:  788:    // char index can be line.length()
        -:  789:
        -:  790:    // invalid line
    #####:  791:    if (aLine >= mLines.size())
    %%%%%:  791-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:  792:        return false;
    %%%%%:  792-block 4
        -:  793:
    #####:  794:    if (aLeft)
    %%%%%:  794-block 5
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  795:    {
    #####:  796:        if (aCharIndex == 0)
    %%%%%:  796-block 6
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  797:        {
    #####:  798:            if (aLockLine || aLine == 0)
    %%%%%:  798-block 7
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  798-block 8
branch  2 never executed (fallthrough)
branch  3 never executed
    #####:  799:                return false;
    %%%%%:  799-block 9
    #####:  800:            aLine--;
    #####:  801:            aCharIndex = mLines[aLine].size();
    %%%%%:  801-block 10
call    0 never executed
call    1 never executed
        -:  802:        }
        -:  803:        else
        -:  804:        {
    #####:  805:            aCharIndex--;
    #####:  806:            while (aCharIndex > 0 && IsUTFSequence(mLines[aLine][aCharIndex].mChar))
    %%%%%:  806-block 13
    %%%%%:  806-block 15
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  806-block 16
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed
    %%%%%:  806-block 20
    %%%%%:  806-block 21
    %%%%%:  806-block 22
branch  7 never executed
branch  8 never executed
    #####:  807:                aCharIndex--;
    %%%%%:  807-block 14
        -:  808:        }
        -:  809:    }
        -:  810:    else // right
        -:  811:    {
    #####:  812:        if (aCharIndex == mLines[aLine].size())
    %%%%%:  812-block 23
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
        -:  813:        {
    #####:  814:            if (aLockLine || aLine == mLines.size() - 1)
    %%%%%:  814-block 26
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  814-block 27
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed
    %%%%%:  814-block 29
    %%%%%:  814-block 30
    %%%%%:  814-block 31
branch  5 never executed (fallthrough)
branch  6 never executed
    #####:  815:                return false;
    %%%%%:  815-block 32
    #####:  816:            aLine++;
    #####:  817:            aCharIndex = 0;
    %%%%%:  817-block 33
        -:  818:        }
        -:  819:        else
        -:  820:        {
    #####:  821:            int seqLength = UTF8CharLength(mLines[aLine][aCharIndex].mChar);
    %%%%%:  821-block 34
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  822:            aCharIndex = std::min(aCharIndex + seqLength, (int)mLines[aLine].size());
call    0 never executed
call    1 never executed
call    2 never executed
        -:  823:        }
        -:  824:    }
    #####:  825:    return true;
    %%%%%:  825-block 41
        -:  826:}
        -:  827:
function _ZNK10TextEditor22MoveCharIndexAndColumnEiRiS0_ called 1268524 returned 100% blocks executed 86%
  1268524:  828:void TextEditor::MoveCharIndexAndColumn(int aLine, int& aCharIndex, int& aColumn) const
        -:  829:{
 1268524*:  830:    assert(aLine < mLines.size());
  1268524:  830-block 2
call    0 returned 1268524
branch  1 taken 0 (fallthrough)
branch  2 taken 1268524
    %%%%%:  830-block 4
call    3 never executed
 1268524*:  831:    assert(aCharIndex < mLines[aLine].size());
  1268524:  831-block 5
call    0 returned 1268524
call    1 returned 1268524
branch  2 taken 0 (fallthrough)
branch  3 taken 1268524
    %%%%%:  831-block 8
call    4 never executed
  1268524:  832:    char c = mLines[aLine][aCharIndex].mChar;
  1268524:  832-block 9
call    0 returned 1268524
call    1 returned 1268524
  1268524:  833:    aCharIndex += UTF8CharLength(c);
call    0 returned 1268524
  1268524:  834:    if (c == '\t')
branch  0 taken 45746 (fallthrough)
branch  1 taken 1222778
    45746:  835:        aColumn = (aColumn / mTabSize) * mTabSize + mTabSize;
    45746:  835-block 13
        -:  836:    else
  1222778:  837:        aColumn++;
  1222778:  837-block 14
  1268524:  838:}
        -:  839:
function _ZNK10TextEditor10MoveCoordsERNS_11CoordinatesENS_13MoveDirectionEbi called 0 returned 0% blocks executed 0%
    #####:  840:void TextEditor::MoveCoords(Coordinates& aCoords, MoveDirection aDirection, bool aWordMode, int aLineCount) const
        -:  841:{
    #####:  842:    int charIndex = GetCharacterIndexR(aCoords);
    %%%%%:  842-block 2
call    0 never executed
    #####:  843:    int lineIndex = aCoords.mLine;
    #####:  844:    switch (aDirection)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
        -:  845:    {
    #####:  846:        case MoveDirection::Right:
    #####:  847:            if (charIndex >= mLines[lineIndex].size())
    %%%%%:  847-block 4
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
        -:  848:            {
    #####:  849:                if (lineIndex < mLines.size() - 1)
    %%%%%:  849-block 7
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -:  850:                {
    #####:  851:                    aCoords.mLine = std::max(0, std::min((int)mLines.size() - 1, lineIndex + 1));
    %%%%%:  851-block 9
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  852:                    aCoords.mColumn = 0;
        -:  853:                }
        -:  854:            }
        -:  855:            else
        -:  856:            {
    #####:  857:                Move(lineIndex, charIndex);
    %%%%%:  857-block 13
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  858:                int oneStepRightColumn = GetCharacterColumn(lineIndex, charIndex);
    %%%%%:  858-block 14
call    0 never executed
    #####:  859:                if (aWordMode)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  860:                {
    #####:  861:                    aCoords = FindWordEnd(aCoords);
    %%%%%:  861-block 16
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  862:                    aCoords.mColumn = std::max(aCoords.mColumn, oneStepRightColumn);
    %%%%%:  862-block 17
call    0 never executed
        -:  863:                }
        -:  864:                else
    #####:  865:                    aCoords.mColumn = oneStepRightColumn;
    %%%%%:  865-block 19
        -:  866:            }
    #####:  867:            break;
    %%%%%:  867-block 21
    #####:  868:        case MoveDirection::Left:
    #####:  869:            if (charIndex == 0)
    %%%%%:  869-block 22
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  870:            {
    #####:  871:                if (lineIndex > 0)
    %%%%%:  871-block 23
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  872:                {
    #####:  873:                    aCoords.mLine = lineIndex - 1;
    #####:  874:                    aCoords.mColumn = GetLineMaxColumn(aCoords.mLine);
    %%%%%:  874-block 24
call    0 never executed
        -:  875:                }
        -:  876:            }
        -:  877:            else
        -:  878:            {
    #####:  879:                Move(lineIndex, charIndex, true);
    %%%%%:  879-block 26
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  880:                aCoords.mColumn = GetCharacterColumn(lineIndex, charIndex);
    %%%%%:  880-block 27
call    0 never executed
    #####:  881:                if (aWordMode)
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  882:                    aCoords = FindWordStart(aCoords);
    %%%%%:  882-block 29
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  883:            }
    #####:  884:            break;
    %%%%%:  884-block 30
    #####:  885:        case MoveDirection::Up:
    #####:  886:            aCoords.mLine = std::max(0, lineIndex - aLineCount);
    %%%%%:  886-block 31
call    0 never executed
    #####:  887:            break;
    #####:  888:        case MoveDirection::Down:
    #####:  889:            aCoords.mLine = std::max(0, std::min((int)mLines.size() - 1, lineIndex + aLineCount));
    %%%%%:  889-block 33
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  890:            break;
        -:  891:    }
    #####:  892:}
    %%%%%:  892-block 37
        -:  893:
function _ZN10TextEditor6MoveUpEib called 0 returned 0% blocks executed 0%
    #####:  894:void TextEditor::MoveUp(int aAmount, bool aSelect)
        -:  895:{
    #####:  896:    for (int c = 0; c <= mState.mCurrentCursor; c++)
    %%%%%:  896-block 2
    %%%%%:  896-block 6
    %%%%%:  896-block 7
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  897:    {
    #####:  898:        Coordinates newCoords = mState.mCursors[c].mInteractiveEnd;
    %%%%%:  898-block 3
call    0 never executed
    #####:  899:        MoveCoords(newCoords, MoveDirection::Up, false, aAmount);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  900:        SetCursorPosition(newCoords, c, !aSelect);
    %%%%%:  900-block 5
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  901:    }
    #####:  902:    EnsureCursorVisible();
    %%%%%:  902-block 8
call    0 never executed
    #####:  903:}
        -:  904:
function _ZN10TextEditor8MoveDownEib called 0 returned 0% blocks executed 0%
    #####:  905:void TextEditor::MoveDown(int aAmount, bool aSelect)
        -:  906:{
    #####:  907:    for (int c = 0; c <= mState.mCurrentCursor; c++)
    %%%%%:  907-block 2
    %%%%%:  907-block 9
    %%%%%:  907-block 10
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  908:    {
    #####:  909:        assert(mState.mCursors[c].mInteractiveEnd.mColumn >= 0);
    %%%%%:  909-block 3
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:  909-block 5
call    3 never executed
    #####:  910:        Coordinates newCoords = mState.mCursors[c].mInteractiveEnd;
    %%%%%:  910-block 6
call    0 never executed
    #####:  911:        MoveCoords(newCoords, MoveDirection::Down, false, aAmount);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  912:        SetCursorPosition(newCoords, c, !aSelect);
    %%%%%:  912-block 8
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  913:    }
    #####:  914:    EnsureCursorVisible();
    %%%%%:  914-block 11
call    0 never executed
    #####:  915:}
        -:  916:
function _ZN10TextEditor8MoveLeftEbb called 0 returned 0% blocks executed 0%
    #####:  917:void TextEditor::MoveLeft(bool aSelect, bool aWordMode)
        -:  918:{
    #####:  919:    if (mLines.empty())
    %%%%%:  919-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:  920:        return;
    %%%%%:  920-block 4
        -:  921:
    #####:  922:    if (AnyCursorHasSelection() && !aSelect && !aWordMode)
    %%%%%:  922-block 5
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:  922-block 7
branch  3 never executed (fallthrough)
branch  4 never executed
    %%%%%:  922-block 8
branch  5 never executed (fallthrough)
branch  6 never executed
    %%%%%:  922-block 9
    %%%%%:  922-block 10
    %%%%%:  922-block 11
branch  7 never executed (fallthrough)
branch  8 never executed
        -:  923:    {
    #####:  924:        for (int c = 0; c <= mState.mCurrentCursor; c++)
    %%%%%:  924-block 12
    %%%%%:  924-block 17
branch  0 never executed
branch  1 never executed
    #####:  925:            SetCursorPosition(mState.mCursors[c].GetSelectionStart(), c);
    %%%%%:  925-block 13
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    %%%%%:  925-block 16
    $$$$$:  925-block 26
call    5 never executed
        -:  926:    }
        -:  927:    else
        -:  928:    {
    #####:  929:        for (int c = 0; c <= mState.mCurrentCursor; c++)
    %%%%%:  929-block 18
    %%%%%:  929-block 22
    %%%%%:  929-block 23
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  930:        {
    #####:  931:            Coordinates newCoords = mState.mCursors[c].mInteractiveEnd;
    %%%%%:  931-block 19
call    0 never executed
    #####:  932:            MoveCoords(newCoords, MoveDirection::Left, aWordMode);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  933:            SetCursorPosition(newCoords, c, !aSelect);
    %%%%%:  933-block 21
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  934:        }
        -:  935:    }
    #####:  936:    EnsureCursorVisible();
    %%%%%:  936-block 24
call    0 never executed
        -:  937:}
        -:  938:
function _ZN10TextEditor9MoveRightEbb called 0 returned 0% blocks executed 0%
    #####:  939:void TextEditor::MoveRight(bool aSelect, bool aWordMode)
        -:  940:{
    #####:  941:    if (mLines.empty())
    %%%%%:  941-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:  942:        return;
    %%%%%:  942-block 4
        -:  943:
    #####:  944:    if (AnyCursorHasSelection() && !aSelect && !aWordMode)
    %%%%%:  944-block 5
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:  944-block 7
branch  3 never executed (fallthrough)
branch  4 never executed
    %%%%%:  944-block 8
branch  5 never executed (fallthrough)
branch  6 never executed
    %%%%%:  944-block 9
    %%%%%:  944-block 10
    %%%%%:  944-block 11
branch  7 never executed (fallthrough)
branch  8 never executed
        -:  945:    {
    #####:  946:        for (int c = 0; c <= mState.mCurrentCursor; c++)
    %%%%%:  946-block 12
    %%%%%:  946-block 17
branch  0 never executed
branch  1 never executed
    #####:  947:            SetCursorPosition(mState.mCursors[c].GetSelectionEnd(), c);
    %%%%%:  947-block 13
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    %%%%%:  947-block 16
    $$$$$:  947-block 26
call    5 never executed
        -:  948:    }
        -:  949:    else
        -:  950:    {
    #####:  951:        for (int c = 0; c <= mState.mCurrentCursor; c++)
    %%%%%:  951-block 18
    %%%%%:  951-block 22
    %%%%%:  951-block 23
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  952:        {
    #####:  953:            Coordinates newCoords = mState.mCursors[c].mInteractiveEnd;
    %%%%%:  953-block 19
call    0 never executed
    #####:  954:            MoveCoords(newCoords, MoveDirection::Right, aWordMode);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  955:            SetCursorPosition(newCoords, c, !aSelect);
    %%%%%:  955-block 21
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  956:        }
        -:  957:    }
    #####:  958:    EnsureCursorVisible();
    %%%%%:  958-block 24
call    0 never executed
        -:  959:}
        -:  960:
function _ZN10TextEditor7MoveTopEb called 0 returned 0% blocks executed 0%
    #####:  961:void TextEditor::MoveTop(bool aSelect)
        -:  962:{
    #####:  963:    SetCursorPosition(Coordinates(0, 0), mState.mCurrentCursor, !aSelect);
    %%%%%:  963-block 2
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####:  964:}
    %%%%%:  964-block 4
        -:  965:
function _ZN10TextEditor10MoveBottomEb called 0 returned 0% blocks executed 0%
    #####:  966:void TextEditor::TextEditor::MoveBottom(bool aSelect)
        -:  967:{
    #####:  968:    int maxLine = (int)mLines.size() - 1;
    %%%%%:  968-block 2
call    0 never executed
    #####:  969:    Coordinates newPos = Coordinates(maxLine, GetLineMaxColumn(maxLine));
call    0 never executed
call    1 never executed
    #####:  970:    SetCursorPosition(newPos, mState.mCurrentCursor, !aSelect);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  971:}
    %%%%%:  971-block 6
        -:  972:
function _ZN10TextEditor8MoveHomeEb called 0 returned 0% blocks executed 0%
    #####:  973:void TextEditor::MoveHome(bool aSelect)
        -:  974:{
    #####:  975:    for (int c = 0; c <= mState.mCurrentCursor; c++)
    %%%%%:  975-block 2
    %%%%%:  975-block 7
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:  976:        SetCursorPosition(Coordinates(mState.mCursors[c].mInteractiveEnd.mLine, 0), c, !aSelect);
    %%%%%:  976-block 3
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    %%%%%:  976-block 6
    #####:  977:}
    %%%%%:  977-block 8
        -:  978:
function _ZN10TextEditor7MoveEndEb called 0 returned 0% blocks executed 0%
    #####:  979:void TextEditor::MoveEnd(bool aSelect)
        -:  980:{
    #####:  981:    for (int c = 0; c <= mState.mCurrentCursor; c++)
    %%%%%:  981-block 2
    %%%%%:  981-block 8
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  982:    {
    #####:  983:        int lindex = mState.mCursors[c].mInteractiveEnd.mLine;
    %%%%%:  983-block 3
call    0 never executed
    #####:  984:        SetCursorPosition(Coordinates(lindex, GetLineMaxColumn(lindex)), c, !aSelect);
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    %%%%%:  984-block 7
        -:  985:    }
    #####:  986:}
    %%%%%:  986-block 9
        -:  987:
function _ZN10TextEditor14EnterCharacterEtb called 0 returned 0% blocks executed 0%
    #####:  988:void TextEditor::EnterCharacter(ImWchar aChar, bool aShift)
        -:  989:{
    #####:  990:    assert(!mReadOnly);
    %%%%%:  990-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  990-block 3
call    2 never executed
        -:  991:
    #####:  992:    bool hasSelection = AnyCursorHasSelection();
    %%%%%:  992-block 4
call    0 never executed
    #####:  993:    bool anyCursorHasMultilineSelection = false;
    #####:  994:    for (int c = mState.mCurrentCursor; c > -1; c--)
    %%%%%:  994-block 12
    %%%%%:  994-block 13
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:  995:        if (mState.mCursors[c].GetSelectionStart().mLine != mState.mCursors[c].GetSelectionEnd().mLine)
    %%%%%:  995-block 6
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
        -:  996:        {
    #####:  997:            anyCursorHasMultilineSelection = true;
    #####:  998:            break;
    %%%%%:  998-block 11
        -:  999:        }
    #####: 1000:    bool isIndentOperation = hasSelection && anyCursorHasMultilineSelection && aChar == '\t';
    %%%%%: 1000-block 14
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1000-block 15
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 1000-block 16
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 1000-block 17
    %%%%%: 1000-block 18
    #####: 1001:    if (isIndentOperation)
    %%%%%: 1001-block 19
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 1002:    {
    #####: 1003:        ChangeCurrentLinesIndentation(!aShift);
    %%%%%: 1003-block 20
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1004:        return;
    %%%%%: 1004-block 21
        -: 1005:    }
        -: 1006:
    #####: 1007:    UndoRecord u;
    %%%%%: 1007-block 22
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1008:    u.mBefore = mState;
    %%%%%: 1008-block 23
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1009:
    #####: 1010:    if (hasSelection)
    %%%%%: 1010-block 24
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 1011:    {
    #####: 1012:        for (int c = mState.mCurrentCursor; c > -1; c--)
    %%%%%: 1012-block 25
    %%%%%: 1012-block 34
    %%%%%: 1012-block 35
branch  0 never executed
branch  1 never executed (fallthrough)
        -: 1013:        {
    #####: 1014:            u.mOperations.push_back({ GetSelectedText(c), mState.mCursors[c].GetSelectionStart(), mState.mCursors[c].GetSelectionEnd(), UndoOperationType::Delete });
call    0 never executed
call    1 never executed
call    2 never executed
    %%%%%: 1014-block 32
call    3 never executed
    $$$$$: 1014-block 143
call    4 never executed
    $$$$$: 1014-block 148
    #####: 1015:            DeleteSelection(c);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1016:        }
        -: 1017:    }
        -: 1018:
    #####: 1019:    std::vector<Coordinates> coords;
    #####: 1020:    for (int c = mState.mCurrentCursor; c > -1; c--) // order important here for typing \n in the same line at the same time
    %%%%%: 1020-block 36
    %%%%%: 1020-block 127
    %%%%%: 1020-block 128
branch  0 never executed
branch  1 never executed (fallthrough)
        -: 1021:    {
    #####: 1022:        auto coord = GetActualCursorCoordinates(c);
    %%%%%: 1022-block 37
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1023:        coords.push_back(coord);
    %%%%%: 1023-block 38
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1024:        UndoOperation added;
    %%%%%: 1024-block 39
call    0 never executed
    #####: 1025:        added.mType = UndoOperationType::Add;
    #####: 1026:        added.mStart = coord;
        -: 1027:
    #####: 1028:        assert(!mLines.empty());
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%: 1028-block 42
call    3 never executed
        -: 1029:
    #####: 1030:        if (aChar == '\n')
    %%%%%: 1030-block 43
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 1031:        {
    #####: 1032:            InsertLine(coord.mLine + 1);
    %%%%%: 1032-block 44
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1033:            auto& line = mLines[coord.mLine];
    %%%%%: 1033-block 45
call    0 never executed
    #####: 1034:            auto& newLine = mLines[coord.mLine + 1];
call    0 never executed
        -: 1035:
    #####: 1036:            added.mText = "";
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1037:            added.mText += (char)aChar;
    %%%%%: 1037-block 48
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1038:            if (mAutoIndent)
    %%%%%: 1038-block 49
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 1039:                for (int i = 0; i < line.size() && isascii(line[i].mChar) && isblank(line[i].mChar); ++i)
    %%%%%: 1039-block 50
    %%%%%: 1039-block 55
    %%%%%: 1039-block 56
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%: 1039-block 58
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 1039-block 60
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed
    %%%%%: 1039-block 62
    %%%%%: 1039-block 63
    %%%%%: 1039-block 64
branch  9 never executed
branch 10 never executed (fallthrough)
        -: 1040:                {
    #####: 1041:                    newLine.push_back(line[i]);
    %%%%%: 1041-block 51
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####: 1042:                    added.mText += line[i].mChar;
    %%%%%: 1042-block 53
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -: 1043:                }
        -: 1044:
    #####: 1045:            const size_t whitespaceSize = newLine.size();
    %%%%%: 1045-block 65
call    0 never executed
    #####: 1046:            auto cindex = GetCharacterIndexR(coord);
call    0 never executed
    #####: 1047:            AddGlyphsToLine(coord.mLine + 1, newLine.size(), line.begin() + cindex, line.end());
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    $$$$$: 1047-block 149
    #####: 1048:            RemoveGlyphsFromLine(coord.mLine, cindex);
    %%%%%: 1048-block 72
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1049:            SetCursorPosition(Coordinates(coord.mLine + 1, GetCharacterColumn(coord.mLine + 1, (int)whitespaceSize)), c);
    %%%%%: 1049-block 73
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    %%%%%: 1049-block 76
    $$$$$: 1049-block 150
        -: 1050:        }
        -: 1051:        else
        -: 1052:        {
        -: 1053:            char buf[7];
    #####: 1054:            int e = ImTextCharToUtf8(buf, 7, aChar);
    %%%%%: 1054-block 77
call    0 never executed
    #####: 1055:            if (e > 0)
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 1056:            {
    #####: 1057:                buf[e] = '\0';
    #####: 1058:                auto& line = mLines[coord.mLine];
    %%%%%: 1058-block 79
call    0 never executed
    #####: 1059:                auto cindex = GetCharacterIndexR(coord);
call    0 never executed
        -: 1060:
    #####: 1061:                if (mOverwrite && cindex < (int)line.size())
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1061-block 82
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed
    %%%%%: 1061-block 84
    %%%%%: 1061-block 85
    %%%%%: 1061-block 86
branch  5 never executed (fallthrough)
branch  6 never executed
        -: 1062:                {
    #####: 1063:                    auto d = UTF8CharLength(line[cindex].mChar);
    %%%%%: 1063-block 87
call    0 never executed
call    1 never executed
        -: 1064:
    #####: 1065:                    UndoOperation removed;
call    0 never executed
    #####: 1066:                    removed.mType = UndoOperationType::Delete;
    #####: 1067:                    removed.mStart = mState.mCursors[c].mInteractiveEnd;
call    0 never executed
    #####: 1068:                    removed.mEnd = Coordinates(coord.mLine, GetCharacterColumn(coord.mLine, cindex + d));
call    0 never executed
call    1 never executed
        -: 1069:
    #####: 1070:                    while (d-- > 0 && cindex < (int)line.size())
    %%%%%: 1070-block 97
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1070-block 98
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed
    %%%%%: 1070-block 100
    %%%%%: 1070-block 101
    %%%%%: 1070-block 102
branch  5 never executed
branch  6 never executed (fallthrough)
        -: 1071:                    {
    #####: 1072:                        removed.mText += line[cindex].mChar;
    %%%%%: 1072-block 94
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####: 1073:                        RemoveGlyphsFromLine(coord.mLine, cindex, cindex + 1);
    %%%%%: 1073-block 96
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1074:                    }
    #####: 1075:                    u.mOperations.push_back(removed);
    %%%%%: 1075-block 103
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1076:                }
    %%%%%: 1076-block 104
call    0 never executed
    $$$$$: 1076-block 151
call    1 never executed
        -: 1077:
    #####: 1078:                for (auto p = buf; *p != '\0'; p++, ++cindex)
    %%%%%: 1078-block 106
    %%%%%: 1078-block 110
branch  0 never executed
branch  1 never executed (fallthrough)
    #####: 1079:                    AddGlyphToLine(coord.mLine, cindex, Glyph(*p, PaletteIndex::Default));
    %%%%%: 1079-block 107
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%: 1079-block 109
    $$$$$: 1079-block 154
    #####: 1080:                added.mText = buf;
    %%%%%: 1080-block 111
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1081:
    #####: 1082:                SetCursorPosition(Coordinates(coord.mLine, GetCharacterColumn(coord.mLine, cindex)), c);
    %%%%%: 1082-block 112
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    %%%%%: 1082-block 115
    $$$$$: 1082-block 155
        -: 1083:            }
        -: 1084:            else
    #####: 1085:                continue;
    %%%%%: 1085-block 116
    %%%%%: 1085-block 118
        -: 1086:        }
        -: 1087:
    #####: 1088:        added.mEnd = GetActualCursorCoordinates(c);
    %%%%%: 1088-block 119
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1089:        u.mOperations.push_back(added);
    %%%%%: 1089-block 120
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1090:    }
    %%%%%: 1090-block 121
    %%%%%: 1090-block 122
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    $$$$$: 1090-block 157
call    3 never executed
        -: 1091:
    #####: 1092:    u.mAfter = mState;
    %%%%%: 1092-block 129
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1093:    AddUndo(u);
    %%%%%: 1093-block 130
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1094:
    #####: 1095:    for (const auto& coord : coords)
    %%%%%: 1095-block 131
call    0 never executed
call    1 never executed
    %%%%%: 1095-block 133
call    2 never executed
    %%%%%: 1095-block 135
call    3 never executed
    %%%%%: 1095-block 136
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
    #####: 1096:        Colorize(coord.mLine - 1, 3);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1097:    EnsureCursorVisible();
    %%%%%: 1097-block 138
call    0 never executed
    #####: 1098:}
    %%%%%: 1098-block 26
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 1098-block 27
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
call    7 never executed
call    8 never executed
    $$$$$: 1098-block 145
branch  9 never executed (fallthrough)
branch 10 never executed
    $$$$$: 1098-block 146
call   11 never executed
    $$$$$: 1098-block 161
call   12 never executed
    $$$$$: 1098-block 163
call   13 never executed
        -: 1099:
function _ZN10TextEditor9BackspaceEb called 0 returned 0% blocks executed 0%
    #####: 1100:void TextEditor::Backspace(bool aWordMode)
        -: 1101:{
    #####: 1102:    assert(!mReadOnly);
    %%%%%: 1102-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1102-block 3
call    2 never executed
        -: 1103:
    #####: 1104:    if (mLines.empty())
    %%%%%: 1104-block 4
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1105:        return;
    %%%%%: 1105-block 6
        -: 1106:
    #####: 1107:    if (AnyCursorHasSelection())
    %%%%%: 1107-block 7
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1108:        Delete(aWordMode);
    %%%%%: 1108-block 9
call    0 never executed
        -: 1109:    else
        -: 1110:    {
    #####: 1111:        EditorState stateBeforeDeleting = mState;
    %%%%%: 1111-block 10
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1112:        MoveLeft(true, aWordMode);
    %%%%%: 1112-block 11
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1113:        if (!AllCursorsHaveSelection()) // can't do backspace if any cursor at {0,0}
    %%%%%: 1113-block 12
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -: 1114:        {
    #####: 1115:            if (AnyCursorHasSelection())
    %%%%%: 1115-block 14
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1116:                MoveRight();
    %%%%%: 1116-block 16
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1117:            return;
    %%%%%: 1117-block 17
        -: 1118:        }
        -: 1119:
    #####: 1120:        OnCursorPositionChanged(); // might combine cursors
    %%%%%: 1120-block 18
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1121:        Delete(aWordMode, &stateBeforeDeleting);
    %%%%%: 1121-block 19
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1122:    }
    %%%%%: 1122-block 20
    %%%%%: 1122-block 21
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    $$$$$: 1122-block 27
call    3 never executed
        -: 1123:}
        -: 1124:
function _ZN10TextEditor6DeleteEbPKNS_11EditorStateE called 0 returned 0% blocks executed 0%
    #####: 1125:void TextEditor::Delete(bool aWordMode, const EditorState* aEditorState)
        -: 1126:{
    #####: 1127:    assert(!mReadOnly);
    %%%%%: 1127-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1127-block 3
call    2 never executed
        -: 1128:
    #####: 1129:    if (mLines.empty())
    %%%%%: 1129-block 4
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1130:        return;
    %%%%%: 1130-block 6
        -: 1131:
    #####: 1132:    if (AnyCursorHasSelection())
    %%%%%: 1132-block 7
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -: 1133:    {
    #####: 1134:        UndoRecord u;
    %%%%%: 1134-block 9
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1135:        u.mBefore = aEditorState == nullptr ? mState : *aEditorState;
    %%%%%: 1135-block 10
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1135-block 11
    %%%%%: 1135-block 12
    %%%%%: 1135-block 13
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    #####: 1136:        for (int c = mState.mCurrentCursor; c > -1; c--)
    %%%%%: 1136-block 14
    %%%%%: 1136-block 27
    %%%%%: 1136-block 28
branch  0 never executed
branch  1 never executed (fallthrough)
        -: 1137:        {
    #####: 1138:            if (!mState.mCursors[c].HasSelection())
    %%%%%: 1138-block 15
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
    #####: 1139:                continue;
    %%%%%: 1139-block 18
    #####: 1140:            u.mOperations.push_back({ GetSelectedText(c), mState.mCursors[c].GetSelectionStart(), mState.mCursors[c].GetSelectionEnd(), UndoOperationType::Delete });
call    0 never executed
call    1 never executed
call    2 never executed
    %%%%%: 1140-block 25
call    3 never executed
    $$$$$: 1140-block 50
call    4 never executed
    $$$$$: 1140-block 55
    #####: 1141:            DeleteSelection(c);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1142:        }
    #####: 1143:        u.mAfter = mState;
    %%%%%: 1143-block 29
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1144:        AddUndo(u);
    %%%%%: 1144-block 30
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1145:    }
    %%%%%: 1145-block 31
call    0 never executed
    $$$$$: 1145-block 56
call    1 never executed
        -: 1146:    else
        -: 1147:    {
    #####: 1148:        EditorState stateBeforeDeleting = mState;
    %%%%%: 1148-block 33
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1149:        MoveRight(true, aWordMode);
    %%%%%: 1149-block 34
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1150:        if (!AllCursorsHaveSelection()) // can't do delete if any cursor at end of last line
    %%%%%: 1150-block 35
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -: 1151:        {
    #####: 1152:            if (AnyCursorHasSelection())
    %%%%%: 1152-block 37
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1153:                MoveLeft();
    %%%%%: 1153-block 39
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1154:            return;
    %%%%%: 1154-block 40
        -: 1155:        }
        -: 1156:
    #####: 1157:        OnCursorPositionChanged(); // might combine cursors
    %%%%%: 1157-block 41
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1158:        Delete(aWordMode, &stateBeforeDeleting);
    %%%%%: 1158-block 42
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1159:    }
    %%%%%: 1159-block 43
    %%%%%: 1159-block 44
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    $$$$$: 1159-block 59
call    3 never executed
    #####: 1160:}
    %%%%%: 1160-block 19
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 1160-block 20
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    $$$$$: 1160-block 52
branch  7 never executed (fallthrough)
branch  8 never executed
    $$$$$: 1160-block 53
call    9 never executed
        -: 1161:
function _ZN10TextEditor12SetSelectionENS_11CoordinatesES0_i called 0 returned 0% blocks executed 0%
    #####: 1162:void TextEditor::SetSelection(Coordinates aStart, Coordinates aEnd, int aCursor)
        -: 1163:{
    #####: 1164:    if (aCursor == -1)
    %%%%%: 1164-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 1165:        aCursor = mState.mCurrentCursor;
    %%%%%: 1165-block 3
        -: 1166:
    #####: 1167:    Coordinates minCoords = Coordinates(0, 0);
    %%%%%: 1167-block 4
call    0 never executed
    #####: 1168:    int maxLine = (int)mLines.size() - 1;
call    0 never executed
    #####: 1169:    Coordinates maxCoords = Coordinates(maxLine, GetLineMaxColumn(maxLine));
call    0 never executed
call    1 never executed
    #####: 1170:    if (aStart < minCoords)
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1171:        aStart = minCoords;
    %%%%%: 1171-block 10
    #####: 1172:    else if (aStart > maxCoords)
    %%%%%: 1172-block 11
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1173:        aStart = maxCoords;
    %%%%%: 1173-block 13
    #####: 1174:    if (aEnd < minCoords)
    %%%%%: 1174-block 14
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1175:        aEnd = minCoords;
    %%%%%: 1175-block 16
    #####: 1176:    else if (aEnd > maxCoords)
    %%%%%: 1176-block 17
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1177:        aEnd = maxCoords;
    %%%%%: 1177-block 19
        -: 1178:
    #####: 1179:    mState.mCursors[aCursor].mInteractiveStart = aStart;
    %%%%%: 1179-block 20
call    0 never executed
    #####: 1180:    SetCursorPosition(aEnd, aCursor, false);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1181:}
    %%%%%: 1181-block 22
        -: 1182:
function _ZN10TextEditor12SetSelectionEiiiii called 0 returned 0% blocks executed 0%
    #####: 1183:void TextEditor::SetSelection(int aStartLine, int aStartChar, int aEndLine, int aEndChar, int aCursor)
        -: 1184:{
    #####: 1185:    Coordinates startCoords = { aStartLine, GetCharacterColumn(aStartLine, aStartChar) };
    %%%%%: 1185-block 2
call    0 never executed
call    1 never executed
    #####: 1186:    Coordinates endCoords = { aEndLine, GetCharacterColumn(aEndLine, aEndChar) };
call    0 never executed
call    1 never executed
    #####: 1187:    SetSelection(startCoords, endCoords, aCursor);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1188:}
    %%%%%: 1188-block 7
        -: 1189:
function _ZN10TextEditor22SelectNextOccurrenceOfEPKciib called 0 returned 0% blocks executed 0%
    #####: 1190:void TextEditor::SelectNextOccurrenceOf(const char* aText, int aTextSize, int aCursor, bool aCaseSensitive)
        -: 1191:{
    #####: 1192:    if (aCursor == -1)
    %%%%%: 1192-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 1193:        aCursor = mState.mCurrentCursor;
    %%%%%: 1193-block 3
    #####: 1194:    Coordinates nextStart, nextEnd;
    %%%%%: 1194-block 4
call    0 never executed
call    1 never executed
    #####: 1195:    FindNextOccurrence(aText, aTextSize, mState.mCursors[aCursor].mInteractiveEnd, nextStart, nextEnd, aCaseSensitive);
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####: 1196:    SetSelection(nextStart, nextEnd, aCursor);
    %%%%%: 1196-block 8
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1197:    EnsureCursorVisible(aCursor, true);
    %%%%%: 1197-block 9
call    0 never executed
    #####: 1198:}
        -: 1199:
function _ZN10TextEditor26AddCursorForNextOccurrenceEb called 0 returned 0% blocks executed 0%
    #####: 1200:void TextEditor::AddCursorForNextOccurrence(bool aCaseSensitive)
        -: 1201:{
    #####: 1202:    const Cursor& currentCursor = mState.mCursors[mState.GetLastAddedCursorIndex()];
    %%%%%: 1202-block 2
call    0 never executed
call    1 never executed
    #####: 1203:    if (currentCursor.GetSelectionStart() == currentCursor.GetSelectionEnd())
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed
    #####: 1204:        return;
    %%%%%: 1204-block 8
    %%%%%: 1204-block 30
        -: 1205:
    #####: 1206:    std::string selectionText = GetText(currentCursor.GetSelectionStart(), currentCursor.GetSelectionEnd());
    %%%%%: 1206-block 9
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    $$$$$: 1206-block 32
    $$$$$: 1206-block 33
    #####: 1207:    Coordinates nextStart, nextEnd;
    %%%%%: 1207-block 12
call    0 never executed
call    1 never executed
    #####: 1208:    if (!FindNextOccurrence(selectionText.c_str(), selectionText.length(), currentCursor.GetSelectionEnd(), nextStart, nextEnd, aCaseSensitive))
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%: 1208-block 18
branch  6 never executed (fallthrough)
branch  7 never executed
    $$$$$: 1208-block 34
    #####: 1209:        return;
    %%%%%: 1209-block 19
        -: 1210:
    #####: 1211:    mState.AddCursor();
    %%%%%: 1211-block 20
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1212:    SetSelection(nextStart, nextEnd, mState.mCurrentCursor);
    %%%%%: 1212-block 21
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1213:    mState.SortCursorsFromTopToBottom();
    %%%%%: 1213-block 22
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1214:    MergeCursorsIfPossible();
    %%%%%: 1214-block 23
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1215:    EnsureCursorVisible(-1, true);
    %%%%%: 1215-block 24
call    0 never executed
    #####: 1216:}
    %%%%%: 1216-block 26
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    $$$$$: 1216-block 35
call    3 never executed
        -: 1217://
        -: 1218://bool TextEditor::CreateLabelsVector(){
        -: 1219://    unsigned int lineNo = 1;
        -: 1220://
        -: 1221://    for (auto & mLine : mLines) {
        -: 1222://        if (mLine.empty()){
        -: 1223://            lineNo++;
        -: 1224://            continue;
        -: 1225://        }
        -: 1226://
        -: 1227://        bool foundColon = false;
        -: 1228://        bool foundSemiColon = false;
        -: 1229://
        -: 1230://        std::string line;
        -: 1231://        for (auto & i : mLine){
        -: 1232://            if (i.mChar == ':'){
        -: 1233://                if (!foundSemiColon){
        -: 1234://                    foundColon = true;
        -: 1235://                }
        -: 1236://            }
        -: 1237://            else if (i.mChar == ';'){
        -: 1238://                foundSemiColon = true;
        -: 1239://            }
        -: 1240://            line += i.mChar;
        -: 1241://        }
        -: 1242://        line.pop_back();
        -: 1243://
        -: 1244://        if (foundColon){
        -: 1245://            labelLineNoMap.insert({line, lineNo});
        -: 1246://        }
        -: 1247://
        -: 1248://        lineNo++;
        -: 1249://    }
        -: 1250://
        -: 1251://    return true;
        -: 1252://}
        -: 1253:
function _ZN10TextEditor21SelectLabelDefinitionEb called 0 returned 0% blocks executed 0%
    #####: 1254:bool TextEditor::SelectLabelDefinition(bool useScreenPos){
    #####: 1255:    Coordinates cursorCoords = useScreenPos ? ScreenPosToCoordinates(ImGui::GetMousePos()) : GetActualCursorCoordinates();
    %%%%%: 1255-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1255-block 3
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    %%%%%: 1255-block 4
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed (throw)
    %%%%%: 1255-block 5
call    8 never executed
branch  9 never executed (fallthrough)
branch 10 never executed (throw)
    $$$$$: 1255-block 23
    #####: 1256:    std::string label = GetText(FindWordStart(cursorCoords), FindWordEnd(cursorCoords));
    %%%%%: 1256-block 6
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 1256-block 7
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%: 1256-block 8
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    $$$$$: 1256-block 24
    $$$$$: 1256-block 25
        -: 1257:
    #####: 1258:    if (labelLineNoMap.count(label) == 0){
    %%%%%: 1258-block 9
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 1258-block 10
branch  3 never executed (fallthrough)
branch  4 never executed
    #####: 1259:        return false;
    %%%%%: 1259-block 11
        -: 1260:    }
        -: 1261:
    #####: 1262:    int line = labelLineNoMap[label];
    %%%%%: 1262-block 12
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1263:
    #####: 1264:    SetCursorPosition(line, 0);
    %%%%%: 1264-block 13
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1265:    cursorCoords = {line - 1, 0};
    %%%%%: 1265-block 14
call    0 never executed
    #####: 1266:    ClearSelections();
call    0 never executed
    #####: 1267:    SetSelection(FindWordStart(cursorCoords), FindWordEnd(cursorCoords), mState.mCurrentCursor);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 1267-block 17
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%: 1267-block 18
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    #####: 1268:    return true;
    %%%%%: 1268-block 19
    #####: 1269:}
    %%%%%: 1269-block 20
call    0 never executed
    $$$$$: 1269-block 26
call    1 never executed
        -: 1270:
function _ZN10TextEditor18FindNextOccurrenceEPKciRKNS_11CoordinatesERS2_S5_b called 0 returned 0% blocks executed 0%
    #####: 1271:bool TextEditor::FindNextOccurrence(const char* aText, int aTextSize, const Coordinates& aFrom, Coordinates& outStart, Coordinates& outEnd, bool aCaseSensitive)
        -: 1272:{
    #####: 1273:    assert(aTextSize > 0);
    %%%%%: 1273-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1273-block 3
call    2 never executed
    #####: 1274:    bool fmatches = false;
        -: 1275:    int fline, ifline;
        -: 1276:    int findex, ifindex;
        -: 1277:
    #####: 1278:    ifline = fline = aFrom.mLine;
    #####: 1279:    ifindex = findex = GetCharacterIndexR(aFrom);
    %%%%%: 1279-block 4
call    0 never executed
        -: 1280:
        -: 1281:    while (true)
        -: 1282:    {
        -: 1283:        bool matches;
        -: 1284:        { // match function
    #####: 1285:            int lineOffset = 0;
    #####: 1286:            int currentCharIndex = findex;
    #####: 1287:            int i = 0;
    #####: 1288:            for (; i < aTextSize; i++)
    %%%%%: 1288-block 6
    %%%%%: 1288-block 33
    %%%%%: 1288-block 34
branch  0 never executed
branch  1 never executed (fallthrough)
        -: 1289:            {
    #####: 1290:                if (currentCharIndex == mLines[fline + lineOffset].size())
    %%%%%: 1290-block 7
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
        -: 1291:                {
    #####: 1292:                    if (aText[i] == '\n' && fline + lineOffset + 1 < mLines.size())
    %%%%%: 1292-block 10
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1292-block 11
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed
    %%%%%: 1292-block 13
    %%%%%: 1292-block 14
    %%%%%: 1292-block 15
branch  5 never executed (fallthrough)
branch  6 never executed
        -: 1293:                    {
    #####: 1294:                        currentCharIndex = 0;
    #####: 1295:                        lineOffset++;
    %%%%%: 1295-block 16
        -: 1296:                    }
        -: 1297:                    else
    #####: 1298:                        break;
    %%%%%: 1298-block 17
        -: 1299:                }
        -: 1300:                else
        -: 1301:                {
    #####: 1302:                    char toCompareA = mLines[fline + lineOffset][currentCharIndex].mChar;
    %%%%%: 1302-block 18
call    0 never executed
call    1 never executed
    #####: 1303:                    char toCompareB = aText[i];
    #####: 1304:                    toCompareA = (!aCaseSensitive && toCompareA >= 'A' && toCompareA <= 'Z') ? toCompareA - 'A' + 'a' : toCompareA;
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1304-block 21
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 1304-block 22
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 1304-block 23
    %%%%%: 1304-block 24
    #####: 1305:                    toCompareB = (!aCaseSensitive && toCompareB >= 'A' && toCompareB <= 'Z') ? toCompareB - 'A' + 'a' : toCompareB;
    %%%%%: 1305-block 25
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1305-block 26
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 1305-block 27
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 1305-block 28
    %%%%%: 1305-block 29
    #####: 1306:                    if (toCompareA != toCompareB)
    %%%%%: 1306-block 30
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 1307:                        break;
    %%%%%: 1307-block 31
        -: 1308:                    else
    #####: 1309:                        currentCharIndex++;
    %%%%%: 1309-block 32
        -: 1310:                }
        -: 1311:            }
    #####: 1312:            matches = i == aTextSize;
    #####: 1313:            if (matches)
    %%%%%: 1313-block 35
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 1314:            {
    #####: 1315:                outStart = { fline, GetCharacterColumn(fline, findex) };
    %%%%%: 1315-block 36
call    0 never executed
call    1 never executed
    #####: 1316:                outEnd = { fline + lineOffset, GetCharacterColumn(fline + lineOffset, currentCharIndex) };
call    0 never executed
call    1 never executed
    #####: 1317:                return true;
        -: 1318:            }
        -: 1319:        }
        -: 1320:
        -: 1321:        // move forward
    #####: 1322:        if (findex == mLines[fline].size()) // need to consider line breaks
    %%%%%: 1322-block 41
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
        -: 1323:        {
    #####: 1324:            if (fline == mLines.size() - 1)
    %%%%%: 1324-block 44
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -: 1325:            {
    #####: 1326:                fline = 0;
    #####: 1327:                findex = 0;
    %%%%%: 1327-block 46
        -: 1328:            }
        -: 1329:            else
        -: 1330:            {
    #####: 1331:                fline++;
    #####: 1332:                findex = 0;
    %%%%%: 1332-block 47
        -: 1333:            }
        -: 1334:        }
        -: 1335:        else
    #####: 1336:            findex++;
    %%%%%: 1336-block 48
        -: 1337:
        -: 1338:        // detect complete scan
    #####: 1339:        if (findex == ifindex && fline == ifline)
    %%%%%: 1339-block 49
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1339-block 50
branch  2 never executed (fallthrough)
branch  3 never executed
    #####: 1340:            return false;
    %%%%%: 1340-block 51
    #####: 1341:    }
    %%%%%: 1341-block 52
        -: 1342:
        -: 1343:    return false;
        -: 1344:}
        -: 1345:
function _ZN10TextEditor19FindMatchingBracketEiiRNS_11CoordinatesE called 3 returned 100% blocks executed 13%
        3: 1346:bool TextEditor::FindMatchingBracket(int aLine, int aCharIndex, Coordinates& out)
        -: 1347:{
        3: 1348:    if (aLine > mLines.size() - 1)
        3: 1348-block 2
call    0 returned 3
branch  1 taken 0 (fallthrough)
branch  2 taken 3
    #####: 1349:        return false;
    %%%%%: 1349-block 4
        3: 1350:    int maxCharIndex = mLines[aLine].size() - 1;
        3: 1350-block 5
call    0 returned 3
call    1 returned 3
        3: 1351:    if (aCharIndex > maxCharIndex)
branch  0 taken 3 (fallthrough)
branch  1 taken 0
        3: 1352:        return false;
        3: 1352-block 8
        -: 1353:
    #####: 1354:    int currentLine = aLine;
    #####: 1355:    int currentCharIndex = aCharIndex;
    #####: 1356:    int counter = 1;
    #####: 1357:    if (CLOSE_TO_OPEN_CHAR.find(mLines[aLine][aCharIndex].mChar) != CLOSE_TO_OPEN_CHAR.end())
    %%%%%: 1357-block 9
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%: 1357-block 13
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed
    $$$$$: 1357-block 62
    $$$$$: 1357-block 63
        -: 1358:    {
    #####: 1359:        char shouldCloseChar = mLines[aLine][aCharIndex].mChar;
    %%%%%: 1359-block 15
call    0 never executed
call    1 never executed
    #####: 1360:        char openChar = CLOSE_TO_OPEN_CHAR.at(shouldCloseChar);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1361:        while (Move(currentLine, currentCharIndex, true))
    %%%%%: 1361-block 18
    %%%%%: 1361-block 31
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 1361-block 32
branch  3 never executed
branch  4 never executed (fallthrough)
        -: 1362:        {
    #####: 1363:            if (currentCharIndex < mLines[currentLine].size())
    %%%%%: 1363-block 19
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
        -: 1364:            {
    #####: 1365:                char currentChar = mLines[currentLine][currentCharIndex].mChar;
    %%%%%: 1365-block 22
call    0 never executed
call    1 never executed
    #####: 1366:                if (currentChar == openChar)
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 1367:                {
    #####: 1368:                    counter--;
    #####: 1369:                    if (counter == 0)
    %%%%%: 1369-block 25
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 1370:                    {
    #####: 1371:                        out = { currentLine, GetCharacterColumn(currentLine, currentCharIndex) };
    %%%%%: 1371-block 26
call    0 never executed
call    1 never executed
    #####: 1372:                        return true;
        -: 1373:                    }
        -: 1374:                }
    #####: 1375:                else if (currentChar == shouldCloseChar)
    %%%%%: 1375-block 29
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 1376:                    counter++;
    %%%%%: 1376-block 30
        -: 1377:            }
        -: 1378:        }
        -: 1379:    }
    #####: 1380:    else if (OPEN_TO_CLOSE_CHAR.find(mLines[aLine][aCharIndex].mChar) != OPEN_TO_CLOSE_CHAR.end())
    %%%%%: 1380-block 34
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%: 1380-block 38
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed
    $$$$$: 1380-block 65
    $$$$$: 1380-block 66
        -: 1381:    {
    #####: 1382:        char openChar = mLines[aLine][aCharIndex].mChar;
    %%%%%: 1382-block 40
call    0 never executed
call    1 never executed
    #####: 1383:        char shouldCloseChar = OPEN_TO_CLOSE_CHAR.at(openChar);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1384:        while (Move(currentLine, currentCharIndex))
    %%%%%: 1384-block 43
    %%%%%: 1384-block 56
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 1384-block 57
branch  3 never executed
branch  4 never executed (fallthrough)
        -: 1385:        {
    #####: 1386:            if (currentCharIndex < mLines[currentLine].size())
    %%%%%: 1386-block 44
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
        -: 1387:            {
    #####: 1388:                char currentChar = mLines[currentLine][currentCharIndex].mChar;
    %%%%%: 1388-block 47
call    0 never executed
call    1 never executed
    #####: 1389:                if (currentChar == shouldCloseChar)
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 1390:                {
    #####: 1391:                    counter--;
    #####: 1392:                    if (counter == 0)
    %%%%%: 1392-block 50
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 1393:                    {
    #####: 1394:                        out = { currentLine, GetCharacterColumn(currentLine, currentCharIndex) };
    %%%%%: 1394-block 51
call    0 never executed
call    1 never executed
    #####: 1395:                        return true;
        -: 1396:                    }
        -: 1397:                }
    #####: 1398:                else if (currentChar == openChar)
    %%%%%: 1398-block 54
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 1399:                    counter++;
    %%%%%: 1399-block 55
        -: 1400:            }
        -: 1401:        }
        -: 1402:    }
    #####: 1403:    return false;
    %%%%%: 1403-block 59
        -: 1404:}
        -: 1405:
function _ZN10TextEditor29ChangeCurrentLinesIndentationEb called 0 returned 0% blocks executed 0%
    #####: 1406:void TextEditor::ChangeCurrentLinesIndentation(bool aIncrease)
        -: 1407:{
    #####: 1408:    assert(!mReadOnly);
    %%%%%: 1408-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1408-block 3
call    2 never executed
        -: 1409:
    #####: 1410:    UndoRecord u;
    %%%%%: 1410-block 4
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1411:    u.mBefore = mState;
    %%%%%: 1411-block 5
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1412:
    #####: 1413:    for (int c = mState.mCurrentCursor; c > -1; c--)
    %%%%%: 1413-block 6
    %%%%%: 1413-block 65
    %%%%%: 1413-block 66
branch  0 never executed
branch  1 never executed (fallthrough)
        -: 1414:    {
    #####: 1415:        for (int currentLine = mState.mCursors[c].GetSelectionEnd().mLine; currentLine >= mState.mCursors[c].GetSelectionStart().mLine; currentLine--)
    %%%%%: 1415-block 7
call    0 never executed
call    1 never executed
    %%%%%: 1415-block 61
    %%%%%: 1415-block 62
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed (fallthrough)
        -: 1416:        {
    #####: 1417:            if (Coordinates{ currentLine, 0 } == mState.mCursors[c].GetSelectionEnd() && mState.mCursors[c].GetSelectionEnd() != mState.mCursors[c].GetSelectionStart()) // when selection ends at line start
    %%%%%: 1417-block 10
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 1417-block 15
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed
    %%%%%: 1417-block 21
    %%%%%: 1417-block 22
    %%%%%: 1417-block 23
branch 13 never executed (fallthrough)
branch 14 never executed
    #####: 1418:                continue;
    %%%%%: 1418-block 24
        -: 1419:
    #####: 1420:            if (aIncrease)
    %%%%%: 1420-block 25
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 1421:            {
    #####: 1422:                if (mLines[currentLine].size() > 0)
    %%%%%: 1422-block 26
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
        -: 1423:                {
    #####: 1424:                    Coordinates lineStart = { currentLine, 0 };
    %%%%%: 1424-block 29
call    0 never executed
    #####: 1425:                    Coordinates insertionEnd = lineStart;
    #####: 1426:                    InsertTextAt(insertionEnd, "\t"); // sets insertion end
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1427:                    u.mOperations.push_back({ "\t", lineStart, insertionEnd, UndoOperationType::Add });
    %%%%%: 1427-block 35
call    0 never executed
    $$$$$: 1427-block 72
call    1 never executed
    $$$$$: 1427-block 79
    $$$$$: 1427-block 80
    #####: 1428:                    Colorize(lineStart.mLine, 1);
    %%%%%: 1428-block 37
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1429:                }
        -: 1430:            }
        -: 1431:            else
        -: 1432:            {
    #####: 1433:                Coordinates start = { currentLine, 0 };
    %%%%%: 1433-block 39
call    0 never executed
    #####: 1434:                Coordinates end = { currentLine, mTabSize };
call    0 never executed
    #####: 1435:                int charIndex = GetCharacterIndexL(end) - 1;
call    0 never executed
    #####: 1436:                while (charIndex > -1 && (mLines[currentLine][charIndex].mChar == ' ' || mLines[currentLine][charIndex].mChar == '\t')) charIndex--;
    %%%%%: 1436-block 43
    %%%%%: 1436-block 44
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1436-block 45
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 1436-block 48
call    6 never executed
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed
    %%%%%: 1436-block 51
    %%%%%: 1436-block 52
    %%%%%: 1436-block 53
branch 10 never executed
branch 11 never executed (fallthrough)
    #####: 1437:                bool onlySpaceCharactersFound = charIndex == -1;
    #####: 1438:                if (onlySpaceCharactersFound)
    %%%%%: 1438-block 54
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 1439:                {
    #####: 1440:                    u.mOperations.push_back({ GetText(start, end), start, end, UndoOperationType::Delete });
    %%%%%: 1440-block 57
call    0 never executed
    $$$$$: 1440-block 82
call    1 never executed
    $$$$$: 1440-block 87
    #####: 1441:                    DeleteRange(start, end);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1442:                    Colorize(currentLine, 1);
    %%%%%: 1442-block 59
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1443:                }
        -: 1444:            }
        -: 1445:        }
        -: 1446:    }
        -: 1447:
    #####: 1448:    if (u.mOperations.size() > 0)
    %%%%%: 1448-block 67
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1449:        AddUndo(u);
    %%%%%: 1449-block 69
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1450:}
    %%%%%: 1450-block 31
    %%%%%: 1450-block 33
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 1450-block 34
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%: 1450-block 55
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%: 1450-block 56
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    %%%%%: 1450-block 70
call   12 never executed
    $$$$$: 1450-block 74
branch 13 never executed (fallthrough)
branch 14 never executed
    $$$$$: 1450-block 75
call   15 never executed
    $$$$$: 1450-block 84
branch 16 never executed (fallthrough)
branch 17 never executed
    $$$$$: 1450-block 85
call   18 never executed
    $$$$$: 1450-block 89
call   19 never executed
        -: 1451:
function _ZN10TextEditor18MoveUpCurrentLinesEv called 0 returned 0% blocks executed 0%
    #####: 1452:void TextEditor::MoveUpCurrentLines()
        -: 1453:{
    #####: 1454:    assert(!mReadOnly);
    %%%%%: 1454-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1454-block 3
call    2 never executed
        -: 1455:
    #####: 1456:    UndoRecord u;
    %%%%%: 1456-block 4
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1457:    u.mBefore = mState;
    %%%%%: 1457-block 5
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1458:
    #####: 1459:    std::set<int> affectedLines;
    %%%%%: 1459-block 6
call    0 never executed
    #####: 1460:    int minLine = -1;
    #####: 1461:    int maxLine = -1;
    #####: 1462:    for (int c = mState.mCurrentCursor; c > -1; c--) // cursors are expected to be sorted from top to bottom
    %%%%%: 1462-block 44
    %%%%%: 1462-block 45
branch  0 never executed
branch  1 never executed (fallthrough)
        -: 1463:    {
    #####: 1464:        for (int currentLine = mState.mCursors[c].GetSelectionEnd().mLine; currentLine >= mState.mCursors[c].GetSelectionStart().mLine; currentLine--)
    %%%%%: 1464-block 8
call    0 never executed
call    1 never executed
    %%%%%: 1464-block 40
    %%%%%: 1464-block 41
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed (fallthrough)
        -: 1465:        {
    #####: 1466:            if (Coordinates{ currentLine, 0 } == mState.mCursors[c].GetSelectionEnd() && mState.mCursors[c].GetSelectionEnd() != mState.mCursors[c].GetSelectionStart()) // when selection ends at line start
    %%%%%: 1466-block 11
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 1466-block 16
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed
    %%%%%: 1466-block 22
    %%%%%: 1466-block 23
    %%%%%: 1466-block 24
branch 13 never executed (fallthrough)
branch 14 never executed
    #####: 1467:                continue;
    %%%%%: 1467-block 25
    #####: 1468:            affectedLines.insert(currentLine);
    %%%%%: 1468-block 26
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1469:            minLine = minLine == -1 ? currentLine : (currentLine < minLine ? currentLine : minLine);
    %%%%%: 1469-block 27
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1469-block 28
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 1469-block 29
    %%%%%: 1469-block 30
    %%%%%: 1469-block 31
    %%%%%: 1469-block 32
    #####: 1470:            maxLine = maxLine == -1 ? currentLine : (currentLine > maxLine ? currentLine : maxLine);
    %%%%%: 1470-block 33
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1470-block 34
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 1470-block 35
    %%%%%: 1470-block 36
    %%%%%: 1470-block 37
    %%%%%: 1470-block 38
    %%%%%: 1470-block 39
        -: 1471:        }
        -: 1472:    }
    #####: 1473:    if (minLine == 0) // can't move up anymore
    %%%%%: 1473-block 46
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 1474:        return;
    %%%%%: 1474-block 47
        -: 1475:
    #####: 1476:    Coordinates start = { minLine - 1, 0 };
    %%%%%: 1476-block 48
call    0 never executed
    #####: 1477:    Coordinates end = { maxLine, GetLineMaxColumn(maxLine) };
call    0 never executed
call    1 never executed
    #####: 1478:    u.mOperations.push_back({ GetText(start, end), start, end, UndoOperationType::Delete });
    %%%%%: 1478-block 53
call    0 never executed
    $$$$$: 1478-block 87
call    1 never executed
    $$$$$: 1478-block 92
        -: 1479:
    #####: 1480:    for (int line : affectedLines) // lines should be sorted here
call    0 never executed
call    1 never executed
    %%%%%: 1480-block 56
call    2 never executed
call    3 never executed
    %%%%%: 1480-block 61
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
    #####: 1481:        std::swap(mLines[line - 1], mLines[line]);
call    0 never executed
call    1 never executed
call    2 never executed
    #####: 1482:    for (int c = mState.mCurrentCursor; c > -1; c--)
    %%%%%: 1482-block 63
    %%%%%: 1482-block 67
branch  0 never executed
branch  1 never executed (fallthrough)
        -: 1483:    {
    #####: 1484:        mState.mCursors[c].mInteractiveStart.mLine -= 1;
    %%%%%: 1484-block 64
call    0 never executed
    #####: 1485:        mState.mCursors[c].mInteractiveEnd.mLine -= 1;
call    0 never executed
        -: 1486:        // no need to set mCursorPositionChanged as cursors will remain sorted
        -: 1487:    }
        -: 1488:
    #####: 1489:    end = { maxLine, GetLineMaxColumn(maxLine) }; // this line is swapped with line above, need to find new max column
    %%%%%: 1489-block 68
call    0 never executed
call    1 never executed
    #####: 1490:    u.mOperations.push_back({ GetText(start, end), start, end, UndoOperationType::Add });
    %%%%%: 1490-block 72
call    0 never executed
    $$$$$: 1490-block 93
call    1 never executed
    $$$$$: 1490-block 98
    #####: 1491:    u.mAfter = mState;
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1492:    AddUndo(u);
    %%%%%: 1492-block 74
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1493:}
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 1493-block 52
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%: 1493-block 71
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    %%%%%: 1493-block 75
    %%%%%: 1493-block 76
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed
    %%%%%: 1493-block 78
    %%%%%: 1493-block 80
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed
    $$$$$: 1493-block 89
branch 18 never executed (fallthrough)
branch 19 never executed
    $$$$$: 1493-block 90
call   20 never executed
    $$$$$: 1493-block 95
branch 21 never executed (fallthrough)
branch 22 never executed
    $$$$$: 1493-block 96
call   23 never executed
    $$$$$: 1493-block 99
call   24 never executed
    $$$$$: 1493-block 101
call   25 never executed
        -: 1494:
function _ZN10TextEditor20MoveDownCurrentLinesEv called 0 returned 0% blocks executed 0%
    #####: 1495:void TextEditor::MoveDownCurrentLines()
        -: 1496:{
    #####: 1497:    assert(!mReadOnly);
    %%%%%: 1497-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1497-block 3
call    2 never executed
        -: 1498:
    #####: 1499:    UndoRecord u;
    %%%%%: 1499-block 4
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1500:    u.mBefore = mState;
    %%%%%: 1500-block 5
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1501:
    #####: 1502:    std::set<int> affectedLines;
    %%%%%: 1502-block 6
call    0 never executed
    #####: 1503:    int minLine = -1;
    #####: 1504:    int maxLine = -1;
    #####: 1505:    for (int c = 0; c <= mState.mCurrentCursor; c++) // cursors are expected to be sorted from top to bottom
    %%%%%: 1505-block 44
    %%%%%: 1505-block 45
branch  0 never executed
branch  1 never executed (fallthrough)
        -: 1506:    {
    #####: 1507:        for (int currentLine = mState.mCursors[c].GetSelectionEnd().mLine; currentLine >= mState.mCursors[c].GetSelectionStart().mLine; currentLine--)
    %%%%%: 1507-block 8
call    0 never executed
call    1 never executed
    %%%%%: 1507-block 40
    %%%%%: 1507-block 41
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed (fallthrough)
        -: 1508:        {
    #####: 1509:            if (Coordinates{ currentLine, 0 } == mState.mCursors[c].GetSelectionEnd() && mState.mCursors[c].GetSelectionEnd() != mState.mCursors[c].GetSelectionStart()) // when selection ends at line start
    %%%%%: 1509-block 11
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 1509-block 16
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed
    %%%%%: 1509-block 22
    %%%%%: 1509-block 23
    %%%%%: 1509-block 24
branch 13 never executed (fallthrough)
branch 14 never executed
    #####: 1510:                continue;
    %%%%%: 1510-block 25
    #####: 1511:            affectedLines.insert(currentLine);
    %%%%%: 1511-block 26
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1512:            minLine = minLine == -1 ? currentLine : (currentLine < minLine ? currentLine : minLine);
    %%%%%: 1512-block 27
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1512-block 28
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 1512-block 29
    %%%%%: 1512-block 30
    %%%%%: 1512-block 31
    %%%%%: 1512-block 32
    #####: 1513:            maxLine = maxLine == -1 ? currentLine : (currentLine > maxLine ? currentLine : maxLine);
    %%%%%: 1513-block 33
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1513-block 34
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 1513-block 35
    %%%%%: 1513-block 36
    %%%%%: 1513-block 37
    %%%%%: 1513-block 38
    %%%%%: 1513-block 39
        -: 1514:        }
        -: 1515:    }
    #####: 1516:    if (maxLine == mLines.size() - 1) // can't move down anymore
    %%%%%: 1516-block 46
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1517:        return;
    %%%%%: 1517-block 48
        -: 1518:
    #####: 1519:    Coordinates start = { minLine, 0 };
    %%%%%: 1519-block 49
call    0 never executed
    #####: 1520:    Coordinates end = { maxLine + 1, GetLineMaxColumn(maxLine + 1)};
call    0 never executed
call    1 never executed
    #####: 1521:    u.mOperations.push_back({ GetText(start, end), start, end, UndoOperationType::Delete });
    %%%%%: 1521-block 54
call    0 never executed
    $$$$$: 1521-block 92
call    1 never executed
    $$$$$: 1521-block 97
        -: 1522:
    #####: 1523:    std::set<int>::reverse_iterator rit;
call    0 never executed
    #####: 1524:    for (rit = affectedLines.rbegin(); rit != affectedLines.rend(); rit++) // lines should be sorted here
call    0 never executed
call    1 never executed
    %%%%%: 1524-block 65
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed (fallthrough)
    #####: 1525:        std::swap(mLines[*rit + 1], mLines[*rit]);
    %%%%%: 1525-block 58
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
    #####: 1526:    for (int c = mState.mCurrentCursor; c > -1; c--)
    %%%%%: 1526-block 68
    %%%%%: 1526-block 72
branch  0 never executed
branch  1 never executed (fallthrough)
        -: 1527:    {
    #####: 1528:        mState.mCursors[c].mInteractiveStart.mLine += 1;
    %%%%%: 1528-block 69
call    0 never executed
    #####: 1529:        mState.mCursors[c].mInteractiveEnd.mLine += 1;
call    0 never executed
        -: 1530:        // no need to set mCursorPositionChanged as cursors will remain sorted
        -: 1531:    }
        -: 1532:
    #####: 1533:    end = { maxLine + 1, GetLineMaxColumn(maxLine + 1) }; // this line is swapped with line below, need to find new max column
    %%%%%: 1533-block 73
call    0 never executed
call    1 never executed
    #####: 1534:    u.mOperations.push_back({ GetText(start, end), start, end, UndoOperationType::Add });
    %%%%%: 1534-block 77
call    0 never executed
    $$$$$: 1534-block 98
call    1 never executed
    $$$$$: 1534-block 103
    #####: 1535:    u.mAfter = mState;
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1536:    AddUndo(u);
    %%%%%: 1536-block 79
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1537:}
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 1537-block 53
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%: 1537-block 76
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    %%%%%: 1537-block 80
    %%%%%: 1537-block 81
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed
    %%%%%: 1537-block 83
    %%%%%: 1537-block 85
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed
    $$$$$: 1537-block 94
branch 18 never executed (fallthrough)
branch 19 never executed
    $$$$$: 1537-block 95
call   20 never executed
    $$$$$: 1537-block 100
branch 21 never executed (fallthrough)
branch 22 never executed
    $$$$$: 1537-block 101
call   23 never executed
    $$$$$: 1537-block 104
call   24 never executed
    $$$$$: 1537-block 106
call   25 never executed
        -: 1538:
function _ZN10TextEditor17ToggleLineCommentEv called 0 returned 0% blocks executed 0%
    #####: 1539:void TextEditor::ToggleLineComment()
        -: 1540:{
    #####: 1541:    assert(!mReadOnly);
    %%%%%: 1541-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1541-block 3
call    2 never executed
    #####: 1542:    if (mLanguageDefinition == nullptr)
    %%%%%: 1542-block 4
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 1543:        return;
    %%%%%: 1543-block 5
    #####: 1544:    const std::string& commentString = mLanguageDefinition->mSingleLineComment;
        -: 1545:
    #####: 1546:    UndoRecord u;
    %%%%%: 1546-block 6
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1547:    u.mBefore = mState;
    %%%%%: 1547-block 7
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1548:
    #####: 1549:    bool shouldAddComment = false;
    #####: 1550:    std::unordered_set<int> affectedLines;
    %%%%%: 1550-block 8
call    0 never executed
    #####: 1551:    for (int c = mState.mCurrentCursor; c > -1; c--)
    %%%%%: 1551-block 67
    %%%%%: 1551-block 68
branch  0 never executed
branch  1 never executed (fallthrough)
        -: 1552:    {
    #####: 1553:        for (int currentLine = mState.mCursors[c].GetSelectionEnd().mLine; currentLine >= mState.mCursors[c].GetSelectionStart().mLine; currentLine--)
    %%%%%: 1553-block 10
call    0 never executed
call    1 never executed
    %%%%%: 1553-block 63
    %%%%%: 1553-block 64
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed (fallthrough)
        -: 1554:        {
    #####: 1555:            if (Coordinates{ currentLine, 0 } == mState.mCursors[c].GetSelectionEnd() && mState.mCursors[c].GetSelectionEnd() != mState.mCursors[c].GetSelectionStart()) // when selection ends at line start
    %%%%%: 1555-block 13
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 1555-block 18
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed
    %%%%%: 1555-block 24
    %%%%%: 1555-block 25
    %%%%%: 1555-block 26
branch 13 never executed (fallthrough)
branch 14 never executed
    #####: 1556:                continue;
    %%%%%: 1556-block 27
    #####: 1557:            affectedLines.insert(currentLine);
    %%%%%: 1557-block 28
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1558:            int currentIndex = 0;
    #####: 1559:            while (currentIndex < mLines[currentLine].size() && (mLines[currentLine][currentIndex].mChar == ' ' || mLines[currentLine][currentIndex].mChar == '\t')) currentIndex++;
    %%%%%: 1559-block 29
    %%%%%: 1559-block 30
    %%%%%: 1559-block 31
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 1559-block 34
call    4 never executed
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 1559-block 37
call    8 never executed
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed
    %%%%%: 1559-block 40
    %%%%%: 1559-block 41
    %%%%%: 1559-block 42
branch 12 never executed
branch 13 never executed (fallthrough)
    #####: 1560:            if (currentIndex == mLines[currentLine].size())
    %%%%%: 1560-block 43
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
    #####: 1561:                continue;
    %%%%%: 1561-block 46
    #####: 1562:            int i = 0;
    #####: 1563:            while (i < commentString.length() && currentIndex + i < mLines[currentLine].size() && mLines[currentLine][currentIndex + i].mChar == commentString[i]) i++;
    %%%%%: 1563-block 47
    %%%%%: 1563-block 48
    %%%%%: 1563-block 49
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%: 1563-block 51
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed
    %%%%%: 1563-block 54
call    7 never executed
call    8 never executed
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed
    %%%%%: 1563-block 58
    %%%%%: 1563-block 59
    %%%%%: 1563-block 60
branch 12 never executed
branch 13 never executed (fallthrough)
    #####: 1564:            bool matched = i == commentString.length();
    %%%%%: 1564-block 61
call    0 never executed
    #####: 1565:            shouldAddComment |= !matched;
        -: 1566:        }
        -: 1567:    }
        -: 1568:
    #####: 1569:    if (shouldAddComment)
    %%%%%: 1569-block 69
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 1570:    {
    #####: 1571:        for (int currentLine : affectedLines) // order doesn't matter as changes are not multiline
    %%%%%: 1571-block 70
call    0 never executed
call    1 never executed
    %%%%%: 1571-block 72
call    2 never executed
    %%%%%: 1571-block 82
call    3 never executed
    %%%%%: 1571-block 83
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
        -: 1572:        {
    #####: 1573:            Coordinates lineStart = { currentLine, 0 };
call    0 never executed
    #####: 1574:            Coordinates insertionEnd = lineStart;
    #####: 1575:            InsertTextAt(insertionEnd, (commentString + ' ').c_str()); // sets insertion end
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 1575-block 75
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%: 1575-block 77
call    7 never executed
    $$$$$: 1575-block 155
call    8 never executed
    $$$$$: 1575-block 157
    #####: 1576:            u.mOperations.push_back({ (commentString + ' ') , lineStart, insertionEnd, UndoOperationType::Add });
    %%%%%: 1576-block 80
call    0 never executed
    $$$$$: 1576-block 158
call    1 never executed
    $$$$$: 1576-block 163
    #####: 1577:            Colorize(lineStart.mLine, 1);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1578:        }
        -: 1579:    }
        -: 1580:    else
        -: 1581:    {
    #####: 1582:        for (int currentLine : affectedLines) // order doesn't matter as changes are not multiline
    %%%%%: 1582-block 86
call    0 never executed
call    1 never executed
    %%%%%: 1582-block 88
call    2 never executed
    %%%%%: 1582-block 144
call    3 never executed
    %%%%%: 1582-block 145
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
        -: 1583:        {
    #####: 1584:            int currentIndex = 0;
    #####: 1585:            while (currentIndex < mLines[currentLine].size() && (mLines[currentLine][currentIndex].mChar == ' ' || mLines[currentLine][currentIndex].mChar == '\t')) currentIndex++;
    %%%%%: 1585-block 90
    %%%%%: 1585-block 91
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 1585-block 94
call    4 never executed
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 1585-block 97
call    8 never executed
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed
    %%%%%: 1585-block 100
    %%%%%: 1585-block 101
    %%%%%: 1585-block 102
branch 12 never executed
branch 13 never executed (fallthrough)
    #####: 1586:            if (currentIndex == mLines[currentLine].size())
    %%%%%: 1586-block 103
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
    #####: 1587:                continue;
    %%%%%: 1587-block 106
    #####: 1588:            int i = 0;
    #####: 1589:            while (i < commentString.length() && currentIndex + i < mLines[currentLine].size() && mLines[currentLine][currentIndex + i].mChar == commentString[i]) i++;
    %%%%%: 1589-block 107
    %%%%%: 1589-block 108
    %%%%%: 1589-block 109
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%: 1589-block 111
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed
    %%%%%: 1589-block 114
call    7 never executed
call    8 never executed
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed
    %%%%%: 1589-block 118
    %%%%%: 1589-block 119
    %%%%%: 1589-block 120
branch 12 never executed
branch 13 never executed (fallthrough)
    #####: 1590:            bool matched = i == commentString.length();
    %%%%%: 1590-block 121
call    0 never executed
    #####: 1591:            assert(matched);
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1591-block 123
call    2 never executed
    #####: 1592:            if (currentIndex + i < mLines[currentLine].size() && mLines[currentLine][currentIndex + i].mChar == ' ')
    %%%%%: 1592-block 124
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 1592-block 127
call    4 never executed
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 1592-block 130
    %%%%%: 1592-block 131
    %%%%%: 1592-block 132
branch  8 never executed (fallthrough)
branch  9 never executed
    #####: 1593:                i++;
    %%%%%: 1593-block 133
        -: 1594:
    #####: 1595:            Coordinates start = { currentLine, GetCharacterColumn(currentLine, currentIndex) };
    %%%%%: 1595-block 134
call    0 never executed
call    1 never executed
    #####: 1596:            Coordinates end = { currentLine, GetCharacterColumn(currentLine, currentIndex + i) };
call    0 never executed
call    1 never executed
    #####: 1597:            u.mOperations.push_back({ GetText(start, end) , start, end, UndoOperationType::Delete});
    %%%%%: 1597-block 140
call    0 never executed
    $$$$$: 1597-block 166
call    1 never executed
    $$$$$: 1597-block 171
    #####: 1598:            DeleteRange(start, end);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1599:            Colorize(currentLine, 1);
    %%%%%: 1599-block 142
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1600:        }
        -: 1601:    }
        -: 1602:
    #####: 1603:    u.mAfter = mState;
    %%%%%: 1603-block 148
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1604:    AddUndo(u);
    %%%%%: 1604-block 149
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1605:}
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 1605-block 79
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%: 1605-block 139
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    %%%%%: 1605-block 150
call   12 never executed
call   13 never executed
    $$$$$: 1605-block 160
branch 14 never executed (fallthrough)
branch 15 never executed
    $$$$$: 1605-block 161
call   16 never executed
    $$$$$: 1605-block 168
branch 17 never executed (fallthrough)
branch 18 never executed
    $$$$$: 1605-block 169
call   19 never executed
    $$$$$: 1605-block 174
call   20 never executed
    $$$$$: 1605-block 176
call   21 never executed
        -: 1606:
function _ZN10TextEditor18RemoveCurrentLinesEv called 0 returned 0% blocks executed 0%
    #####: 1607:void TextEditor::RemoveCurrentLines()
        -: 1608:{
    #####: 1609:    UndoRecord u;
    %%%%%: 1609-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1610:    u.mBefore = mState;
    %%%%%: 1610-block 3
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1611:
    #####: 1612:    if (AnyCursorHasSelection())
    %%%%%: 1612-block 4
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -: 1613:    {
    #####: 1614:        for (int c = mState.mCurrentCursor; c > -1; c--)
    %%%%%: 1614-block 6
    %%%%%: 1614-block 19
    %%%%%: 1614-block 20
branch  0 never executed
branch  1 never executed (fallthrough)
        -: 1615:        {
    #####: 1616:            if (!mState.mCursors[c].HasSelection())
    %%%%%: 1616-block 7
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
    #####: 1617:                continue;
    %%%%%: 1617-block 10
    #####: 1618:            u.mOperations.push_back({ GetSelectedText(c), mState.mCursors[c].GetSelectionStart(), mState.mCursors[c].GetSelectionEnd(), UndoOperationType::Delete });
call    0 never executed
call    1 never executed
call    2 never executed
    %%%%%: 1618-block 17
call    3 never executed
    $$$$$: 1618-block 66
call    4 never executed
    $$$$$: 1618-block 71
    #####: 1619:            DeleteSelection(c);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1620:        }
        -: 1621:    }
    #####: 1622:    MoveHome();
    %%%%%: 1622-block 21
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1623:    OnCursorPositionChanged(); // might combine cursors
    %%%%%: 1623-block 22
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1624:
    #####: 1625:    for (int c = mState.mCurrentCursor; c > -1; c--)
    %%%%%: 1625-block 23
    %%%%%: 1625-block 61
branch  0 never executed
branch  1 never executed (fallthrough)
        -: 1626:    {
    #####: 1627:        int currentLine = mState.mCursors[c].mInteractiveEnd.mLine;
    %%%%%: 1627-block 24
call    0 never executed
    #####: 1628:        int nextLine = currentLine + 1;
    #####: 1629:        int prevLine = currentLine - 1;
        -: 1630:
    #####: 1631:        Coordinates toDeleteStart, toDeleteEnd;
call    0 never executed
call    1 never executed
    #####: 1632:        if (mLines.size() > nextLine) // next line exists
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -: 1633:        {
    #####: 1634:            toDeleteStart = Coordinates(currentLine, 0);
    %%%%%: 1634-block 29
call    0 never executed
    #####: 1635:            toDeleteEnd = Coordinates(nextLine, 0);
call    0 never executed
    #####: 1636:            SetCursorPosition({ mState.mCursors[c].mInteractiveEnd.mLine, 0 }, c);
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    %%%%%: 1636-block 34
    $$$$$: 1636-block 72
        -: 1637:        }
    #####: 1638:        else if (prevLine > -1) // previous line exists
    %%%%%: 1638-block 35
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 1639:        {
    #####: 1640:            toDeleteStart = Coordinates(prevLine, GetLineMaxColumn(prevLine));
    %%%%%: 1640-block 36
call    0 never executed
call    1 never executed
    #####: 1641:            toDeleteEnd = Coordinates(currentLine, GetLineMaxColumn(currentLine));
call    0 never executed
call    1 never executed
    #####: 1642:            SetCursorPosition({ prevLine, 0 }, c);
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%: 1642-block 42
    $$$$$: 1642-block 73
        -: 1643:        }
        -: 1644:        else
        -: 1645:        {
    #####: 1646:            toDeleteStart = Coordinates(currentLine, 0);
    %%%%%: 1646-block 43
call    0 never executed
    #####: 1647:            toDeleteEnd = Coordinates(currentLine, GetLineMaxColumn(currentLine));
call    0 never executed
call    1 never executed
    #####: 1648:            SetCursorPosition({ currentLine, 0 }, c);
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%: 1648-block 48
    $$$$$: 1648-block 74
        -: 1649:        }
        -: 1650:
    #####: 1651:        u.mOperations.push_back({ GetText(toDeleteStart, toDeleteEnd), toDeleteStart, toDeleteEnd, UndoOperationType::Delete });
    %%%%%: 1651-block 51
call    0 never executed
    $$$$$: 1651-block 75
call    1 never executed
    $$$$$: 1651-block 80
        -: 1652:
    #####: 1653:        std::unordered_set<int> handledCursors = { c };
    %%%%%: 1653-block 54
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    $$$$$: 1653-block 83
    $$$$$: 1653-block 84
    $$$$$: 1653-block 85
    $$$$$: 1653-block 86
    #####: 1654:        if (toDeleteStart.mLine != toDeleteEnd.mLine)
    %%%%%: 1654-block 56
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 1655:            RemoveLine(currentLine, &handledCursors);
    %%%%%: 1655-block 57
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1656:        else
    #####: 1657:            DeleteRange(toDeleteStart, toDeleteEnd);
    %%%%%: 1657-block 58
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1658:    }
    %%%%%: 1658-block 59
call    0 never executed
    $$$$$: 1658-block 87
call    1 never executed
        -: 1659:
    #####: 1660:    u.mAfter = mState;
    %%%%%: 1660-block 62
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1661:    AddUndo(u);
    %%%%%: 1661-block 63
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1662:}
    %%%%%: 1662-block 11
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 1662-block 12
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%: 1662-block 49
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%: 1662-block 50
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%: 1662-block 64
call   13 never executed
    $$$$$: 1662-block 68
branch 14 never executed (fallthrough)
branch 15 never executed
    $$$$$: 1662-block 69
call   16 never executed
    $$$$$: 1662-block 77
branch 17 never executed (fallthrough)
branch 18 never executed
    $$$$$: 1662-block 78
call   19 never executed
    $$$$$: 1662-block 90
call   20 never executed
        -: 1663:
function _ZNK10TextEditor23TextDistanceToLineStartERKNS_11CoordinatesEb called 553671 returned 100% blocks executed 100%
   553671: 1664:float TextEditor::TextDistanceToLineStart(const Coordinates& aFrom, bool aSanitizeCoords) const
        -: 1665:{
   553671: 1666:    if (aSanitizeCoords)
   553671: 1666-block 2
branch  0 taken 10863 (fallthrough)
branch  1 taken 542808
    10863: 1667:        return SanitizeCoordinates(aFrom).mColumn * mCharAdvance.x;
    10863: 1667-block 3
call    0 returned 10863
        -: 1668:    else
   542808: 1669:        return aFrom.mColumn * mCharAdvance.x;
   542808: 1669-block 5
        -: 1670:}
        -: 1671:
function _ZN10TextEditor19EnsureCursorVisibleEib called 17 returned 100% blocks executed 100%
       17: 1672:void TextEditor::EnsureCursorVisible(int aCursor, bool aStartToo)
        -: 1673:{
       17: 1674:    if (aCursor == -1)
       17: 1674-block 2
branch  0 taken 17 (fallthrough)
branch  1 taken 0
       17: 1675:        aCursor = mState.GetLastAddedCursorIndex();
       17: 1675-block 3
call    0 returned 17
        -: 1676:
       17: 1677:    mEnsureCursorVisible = aCursor;
       17: 1678:    mEnsureCursorVisibleStartToo = aStartToo;
       17: 1679:    return;
       17: 1679-block 4
        -: 1680:}
        -: 1681:
function _ZNK10TextEditor19SanitizeCoordinatesERKNS_11CoordinatesE called 10966 returned 100% blocks executed 50%
    10966: 1682:TextEditor::Coordinates TextEditor::SanitizeCoordinates(const Coordinates& aValue) const
        -: 1683:{
    10966: 1684:    auto line = aValue.mLine;
    10966: 1685:    auto column = aValue.mColumn;
    10966: 1686:    if (line >= (int) mLines.size())
    10966: 1686-block 2
call    0 returned 10966
branch  1 taken 0 (fallthrough)
branch  2 taken 10966
        -: 1687:    {
    #####: 1688:        if (mLines.empty())
    %%%%%: 1688-block 4
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -: 1689:        {
    #####: 1690:            line = 0;
    #####: 1691:            column = 0;
    %%%%%: 1691-block 6
        -: 1692:        }
        -: 1693:        else
        -: 1694:        {
    #####: 1695:            line = (int) mLines.size() - 1;
    %%%%%: 1695-block 7
call    0 never executed
    #####: 1696:            column = GetLineMaxColumn(line);
call    0 never executed
        -: 1697:        }
    #####: 1698:        return Coordinates(line, column);
    %%%%%: 1698-block 9
call    0 never executed
    %%%%%: 1698-block 11
        -: 1699:    }
        -: 1700:    else
        -: 1701:    {
   10966*: 1702:        column = mLines.empty() ? 0 : GetLineMaxColumn(line, column);
    10966: 1702-block 12
call    0 returned 10966
branch  1 taken 0 (fallthrough)
branch  2 taken 10966
    %%%%%: 1702-block 14
    10966: 1702-block 15
call    3 returned 10966
    10966: 1703:        return Coordinates(line, column);
    10966: 1703-block 16
call    0 returned 10966
    10966: 1703-block 18
        -: 1704:    }
        -: 1705:}
        -: 1706:
function _ZNK10TextEditor26GetActualCursorCoordinatesEib called 17 returned 100% blocks executed 43%
       17: 1707:TextEditor::Coordinates TextEditor::GetActualCursorCoordinates(int aCursor, bool aStart) const
        -: 1708:{
       17: 1709:    if (aCursor == -1)
       17: 1709-block 2
branch  0 taken 0 (fallthrough)
branch  1 taken 17
    #####: 1710:        return SanitizeCoordinates(aStart ? mState.mCursors[mState.mCurrentCursor].mInteractiveStart : mState.mCursors[mState.mCurrentCursor].mInteractiveEnd);
    %%%%%: 1710-block 3
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1710-block 4
call    2 never executed
    %%%%%: 1710-block 6
call    3 never executed
    %%%%%: 1710-block 8
call    4 never executed
        -: 1711:    else
      17*: 1712:        return SanitizeCoordinates(aStart ? mState.mCursors[aCursor].mInteractiveStart : mState.mCursors[aCursor].mInteractiveEnd);
       17: 1712-block 9
branch  0 taken 0 (fallthrough)
branch  1 taken 17
    %%%%%: 1712-block 10
call    2 never executed
       17: 1712-block 12
call    3 returned 17
       17: 1712-block 14
call    4 returned 17
        -: 1713:}
        -: 1714:
function _ZNK10TextEditor22ScreenPosToCoordinatesERK6ImVec2bPb called 86 returned 100% blocks executed 71%
       86: 1715:TextEditor::Coordinates TextEditor::ScreenPosToCoordinates(const ImVec2& aPosition, bool aInsertionMode, bool* isOverLineNumber) const
        -: 1716:{
       86: 1717:    ImVec2 origin = ImGui::GetCursorScreenPos();
       86: 1717-block 2
call    0 returned 86
branch  1 taken 86 (fallthrough)
branch  2 taken 0 (throw)
       86: 1718:    ImVec2 local(aPosition.x - origin.x + 3.0f, aPosition.y - origin.y);
       86: 1718-block 3
call    0 returned 86
        -: 1719:
       86: 1720:    if (isOverLineNumber != nullptr)
branch  0 taken 2 (fallthrough)
branch  1 taken 84
        2: 1721:        *isOverLineNumber = local.x < mTextStart;
        2: 1721-block 5
        -: 1722:
        -: 1723:    Coordinates out = {
       86: 1724:            Max(0, (int)floor(local.y / mCharAdvance.y)),
       86: 1724-block 6
call    0 returned 86
       86: 1725:            Max(0, (int)floor((local.x - mTextStart) / mCharAdvance.x))
call    0 returned 86
      172: 1726:    };
call    0 returned 86
call    1 returned 86
call    2 returned 86
       86: 1727:    int charIndex = GetCharacterIndexL(out);
call    0 returned 86
      86*: 1728:    if (charIndex > -1 && charIndex < mLines[out.mLine].size() && mLines[out.mLine][charIndex].mChar == '\t')
branch  0 taken 86 (fallthrough)
branch  1 taken 0
       86: 1728-block 13
call    2 returned 86
call    3 returned 86
branch  4 taken 0 (fallthrough)
branch  5 taken 86
    %%%%%: 1728-block 16
call    6 never executed
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed
    %%%%%: 1728-block 19
       86: 1728-block 20
       86: 1728-block 21
branch 10 taken 0 (fallthrough)
branch 11 taken 86
        -: 1729:    {
    #####: 1730:        int columnToLeft = GetCharacterColumn(out.mLine, charIndex);
    %%%%%: 1730-block 22
call    0 never executed
    #####: 1731:        int columnToRight = GetCharacterColumn(out.mLine, GetCharacterIndexR(out));
call    0 never executed
call    1 never executed
    #####: 1732:        if (out.mColumn - columnToLeft < columnToRight - out.mColumn)
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 1733:            out.mColumn = columnToLeft;
    %%%%%: 1733-block 26
        -: 1734:        else
    #####: 1735:            out.mColumn = columnToRight;
    %%%%%: 1735-block 27
        -: 1736:    }
        -: 1737:    else
       86: 1738:        out.mColumn = Max(0, (int)floor((local.x - mTextStart + POS_TO_COORDS_COLUMN_OFFSET * mCharAdvance.x) / mCharAdvance.x));
       86: 1738-block 28
call    0 returned 86
call    1 returned 86
      172: 1739:    return SanitizeCoordinates(out);
       86: 1739-block 31
call    0 returned 86
branch  1 taken 86 (fallthrough)
branch  2 taken 0 (throw)
       86: 1739-block 32
       86: 1739-block 34
        -: 1740:}
        -: 1741:
function _ZNK10TextEditor13FindWordStartERKNS_11CoordinatesE called 0 returned 0% blocks executed 0%
    #####: 1742:TextEditor::Coordinates TextEditor::FindWordStart(const Coordinates& aFrom) const
        -: 1743:{
    #####: 1744:    if (aFrom.mLine >= (int)mLines.size())
    %%%%%: 1744-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1745:        return aFrom;
    %%%%%: 1745-block 4
        -: 1746:
    #####: 1747:    int lineIndex = aFrom.mLine;
    #####: 1748:    auto& line = mLines[lineIndex];
    %%%%%: 1748-block 5
call    0 never executed
    #####: 1749:    int charIndex = GetCharacterIndexL(aFrom);
call    0 never executed
        -: 1750:
    #####: 1751:    if (charIndex > (int)line.size() || line.size() == 0)
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%: 1751-block 9
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 1751-block 11
    %%%%%: 1751-block 12
    %%%%%: 1751-block 13
branch  6 never executed (fallthrough)
branch  7 never executed
    #####: 1752:        return aFrom;
    %%%%%: 1752-block 14
    #####: 1753:    if (charIndex == (int)line.size())
    %%%%%: 1753-block 15
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1754:        charIndex--;
    %%%%%: 1754-block 17
        -: 1755:
    #####: 1756:    bool initialIsWordChar = CharIsWordChar(line[charIndex].mChar);
    %%%%%: 1756-block 18
call    0 never executed
call    1 never executed
    #####: 1757:    bool initialIsSpace = isspace(line[charIndex].mChar);
call    0 never executed
    #####: 1758:    char initialChar = line[charIndex].mChar;
call    0 never executed
    #####: 1759:    while (Move(lineIndex, charIndex, true, true))
    %%%%%: 1759-block 39
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 1759-block 40
branch  3 never executed
branch  4 never executed (fallthrough)
        -: 1760:    {
    #####: 1761:        bool isWordChar = CharIsWordChar(line[charIndex].mChar);
    %%%%%: 1761-block 23
call    0 never executed
call    1 never executed
    #####: 1762:        bool isSpace = isspace(line[charIndex].mChar);
call    0 never executed
    #####: 1763:        if (initialIsSpace && !isSpace ||
    %%%%%: 1763-block 27
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1763-block 28
branch  2 never executed (fallthrough)
branch  3 never executed
    #####: 1764:            initialIsWordChar && !isWordChar ||
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1764-block 29
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 1764-block 34
    %%%%%: 1764-block 35
    %%%%%: 1764-block 36
branch  4 never executed (fallthrough)
branch  5 never executed
    #####: 1765:            !initialIsWordChar && !initialIsSpace && initialChar != line[charIndex].mChar)
    %%%%%: 1765-block 30
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1765-block 31
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 1765-block 32
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed
        -: 1766:        {
    #####: 1767:            Move(lineIndex, charIndex, false, true); // one step to the right
    %%%%%: 1767-block 37
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1768:            break;
    %%%%%: 1768-block 38
        -: 1769:        }
        -: 1770:    }
    #####: 1771:    return { aFrom.mLine, GetCharacterColumn(aFrom.mLine, charIndex) };
    %%%%%: 1771-block 41
call    0 never executed
call    1 never executed
    %%%%%: 1771-block 44
        -: 1772:}
        -: 1773:
function _ZNK10TextEditor11FindWordEndERKNS_11CoordinatesE called 0 returned 0% blocks executed 0%
    #####: 1774:TextEditor::Coordinates TextEditor::FindWordEnd(const Coordinates& aFrom) const
        -: 1775:{
    #####: 1776:    if (aFrom.mLine >= (int)mLines.size())
    %%%%%: 1776-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1777:        return aFrom;
    %%%%%: 1777-block 4
        -: 1778:
    #####: 1779:    int lineIndex = aFrom.mLine;
    #####: 1780:    auto& line = mLines[lineIndex];
    %%%%%: 1780-block 5
call    0 never executed
    #####: 1781:    auto charIndex = GetCharacterIndexL(aFrom);
call    0 never executed
        -: 1782:
    #####: 1783:    if (charIndex >= (int)line.size())
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1784:        return aFrom;
    %%%%%: 1784-block 9
        -: 1785:
    #####: 1786:    bool initialIsWordChar = CharIsWordChar(line[charIndex].mChar);
    %%%%%: 1786-block 10
call    0 never executed
call    1 never executed
    #####: 1787:    bool initialIsSpace = isspace(line[charIndex].mChar);
call    0 never executed
    #####: 1788:    char initialChar = line[charIndex].mChar;
call    0 never executed
    #####: 1789:    while (Move(lineIndex, charIndex, false, true))
    %%%%%: 1789-block 33
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 1789-block 34
branch  3 never executed
branch  4 never executed (fallthrough)
        -: 1790:    {
    #####: 1791:        if (charIndex == line.size())
    %%%%%: 1791-block 15
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1792:            break;
    %%%%%: 1792-block 17
    #####: 1793:        bool isWordChar = CharIsWordChar(line[charIndex].mChar);
    %%%%%: 1793-block 18
call    0 never executed
call    1 never executed
    #####: 1794:        bool isSpace = isspace(line[charIndex].mChar);
call    0 never executed
    #####: 1795:        if (initialIsSpace && !isSpace ||
    %%%%%: 1795-block 22
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1795-block 23
branch  2 never executed (fallthrough)
branch  3 never executed
    #####: 1796:            initialIsWordChar && !isWordChar ||
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1796-block 24
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 1796-block 29
    %%%%%: 1796-block 30
    %%%%%: 1796-block 31
branch  4 never executed (fallthrough)
branch  5 never executed
    #####: 1797:            !initialIsWordChar && !initialIsSpace && initialChar != line[charIndex].mChar)
    %%%%%: 1797-block 25
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1797-block 26
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 1797-block 27
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed
    #####: 1798:            break;
    %%%%%: 1798-block 32
        -: 1799:    }
    #####: 1800:    return { lineIndex, GetCharacterColumn(aFrom.mLine, charIndex) };
    %%%%%: 1800-block 35
call    0 never executed
call    1 never executed
    %%%%%: 1800-block 38
        -: 1801:}
        -: 1802:
function _ZNK10TextEditor18GetCharacterIndexLERKNS_11CoordinatesE called 86 returned 100% blocks executed 96%
       86: 1803:int TextEditor::GetCharacterIndexL(const Coordinates& aCoords) const
        -: 1804:{
       86: 1805:    if (aCoords.mLine >= mLines.size())
       86: 1805-block 2
call    0 returned 86
branch  1 taken 0 (fallthrough)
branch  2 taken 86
    #####: 1806:        return -1;
    %%%%%: 1806-block 4
        -: 1807:
       86: 1808:    auto& line = mLines[aCoords.mLine];
       86: 1808-block 5
call    0 returned 86
       86: 1809:    int c = 0;
       86: 1810:    int i = 0;
       86: 1811:    int tabCoordsLeft = 0;
        -: 1812:
     1275: 1813:    for (; i < line.size() && c < aCoords.mColumn;)
     1275: 1813-block 19
call    0 returned 1275
branch  1 taken 1189 (fallthrough)
branch  2 taken 86
     1189: 1813-block 21
branch  3 taken 1189 (fallthrough)
branch  4 taken 0
     1189: 1813-block 22
       86: 1813-block 23
     1275: 1813-block 24
branch  5 taken 1189
branch  6 taken 86 (fallthrough)
        -: 1814:    {
     1189: 1815:        if (line[i].mChar == '\t')
     1189: 1815-block 7
call    0 returned 1189
branch  1 taken 8 (fallthrough)
branch  2 taken 1181
        -: 1816:        {
        8: 1817:            if (tabCoordsLeft == 0)
        8: 1817-block 9
branch  0 taken 2 (fallthrough)
branch  1 taken 6
        2: 1818:                tabCoordsLeft = TabSizeAtColumn(c);
        2: 1818-block 10
call    0 returned 2
        8: 1819:            if (tabCoordsLeft > 0)
        8: 1819-block 11
branch  0 taken 8 (fallthrough)
branch  1 taken 0
        8: 1820:                tabCoordsLeft--;
        8: 1820-block 12
        8: 1821:            c++;
        8: 1821-block 13
        -: 1822:        }
        -: 1823:        else
     1181: 1824:            ++c;
     1181: 1824-block 14
     1189: 1825:        if (tabCoordsLeft == 0)
     1189: 1825-block 15
branch  0 taken 1183 (fallthrough)
branch  1 taken 6
     1183: 1826:            i += UTF8CharLength(line[i].mChar);
     1183: 1826-block 16
call    0 returned 1183
call    1 returned 1183
        -: 1827:    }
       86: 1828:    return i;
       86: 1828-block 25
        -: 1829:}
        -: 1830:
function _ZNK10TextEditor18GetCharacterIndexRERKNS_11CoordinatesE called 393 returned 100% blocks executed 93%
      393: 1831:int TextEditor::GetCharacterIndexR(const Coordinates& aCoords) const
        -: 1832:{
      393: 1833:    if (aCoords.mLine >= mLines.size())
      393: 1833-block 2
call    0 returned 393
branch  1 taken 0 (fallthrough)
branch  2 taken 393
    #####: 1834:        return -1;
    %%%%%: 1834-block 4
      393: 1835:    int c = 0;
      393: 1836:    int i = 0;
     8202: 1837:    for (; i < mLines[aCoords.mLine].size() && c < aCoords.mColumn;)
      393: 1837-block 5
     8202: 1837-block 7
call    0 returned 8202
call    1 returned 8202
branch  2 taken 7809 (fallthrough)
branch  3 taken 393
     7809: 1837-block 10
branch  4 taken 7809 (fallthrough)
branch  5 taken 0
     7809: 1837-block 11
      393: 1837-block 12
     8202: 1837-block 13
branch  6 taken 7809
branch  7 taken 393 (fallthrough)
     7809: 1838:        MoveCharIndexAndColumn(aCoords.mLine, i, c);
     7809: 1838-block 6
call    0 returned 7809
      393: 1839:    return i;
      393: 1839-block 14
        -: 1840:}
        -: 1841:
function _ZNK10TextEditor18GetCharacterColumnEii called 0 returned 0% blocks executed 0%
    #####: 1842:int TextEditor::GetCharacterColumn(int aLine, int aIndex) const
        -: 1843:{
    #####: 1844:    if (aLine >= mLines.size())
    %%%%%: 1844-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1845:        return 0;
    %%%%%: 1845-block 4
    #####: 1846:    int c = 0;
    #####: 1847:    int i = 0;
    #####: 1848:    while (i < aIndex && i < mLines[aLine].size())
    %%%%%: 1848-block 5
    %%%%%: 1848-block 7
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1848-block 8
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 1848-block 11
    %%%%%: 1848-block 12
    %%%%%: 1848-block 13
branch  6 never executed
branch  7 never executed (fallthrough)
    #####: 1849:        MoveCharIndexAndColumn(aLine, i, c);
    %%%%%: 1849-block 6
call    0 never executed
    #####: 1850:    return c;
    %%%%%: 1850-block 14
        -: 1851:}
        -: 1852:
function _ZNK10TextEditor29GetFirstVisibleCharacterIndexEi called 43081 returned 100% blocks executed 59%
    43081: 1853:int TextEditor::GetFirstVisibleCharacterIndex(int aLine) const
        -: 1854:{
    43081: 1855:    if (aLine >= mLines.size())
    43081: 1855-block 2
call    0 returned 43081
branch  1 taken 0 (fallthrough)
branch  2 taken 43081
    #####: 1856:        return 0;
    %%%%%: 1856-block 4
    43081: 1857:    int c = 0;
    43081: 1858:    int i = 0;
   43081*: 1859:    while (c < mFirstVisibleColumn && i < mLines[aLine].size())
    43081: 1859-block 5
    43081: 1859-block 7
branch  0 taken 0 (fallthrough)
branch  1 taken 43081
    %%%%%: 1859-block 8
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 1859-block 11
    43081: 1859-block 12
    43081: 1859-block 13
branch  6 taken 0
branch  7 taken 43081 (fallthrough)
    #####: 1860:        MoveCharIndexAndColumn(aLine, i, c);
    %%%%%: 1860-block 6
call    0 never executed
    43081: 1861:    if (c > mFirstVisibleColumn)
    43081: 1861-block 14
branch  0 taken 0 (fallthrough)
branch  1 taken 43081
    #####: 1862:        i--;
    %%%%%: 1862-block 15
    43081: 1863:    return i;
    43081: 1863-block 16
        -: 1864:}
        -: 1865:
function _ZNK10TextEditor16GetLineMaxColumnEii called 54047 returned 100% blocks executed 62%
    54047: 1866:int TextEditor::GetLineMaxColumn(int aLine, int aLimit) const
        -: 1867:{
    54047: 1868:    if (aLine >= mLines.size())
    54047: 1868-block 2
call    0 returned 54047
branch  1 taken 0 (fallthrough)
branch  2 taken 54047
    #####: 1869:        return 0;
    %%%%%: 1869-block 4
    54047: 1870:    int c = 0;
    54047: 1871:    if (aLimit == -1)
    54047: 1871-block 5
branch  0 taken 0 (fallthrough)
branch  1 taken 54047
        -: 1872:    {
    #####: 1873:        for (int i = 0; i < mLines[aLine].size(); )
    %%%%%: 1873-block 6
    %%%%%: 1873-block 8
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed (fallthrough)
    #####: 1874:            MoveCharIndexAndColumn(aLine, i, c);
    %%%%%: 1874-block 7
call    0 never executed
        -: 1875:    }
        -: 1876:    else
        -: 1877:    {
   771954: 1878:        for (int i = 0; i < mLines[aLine].size(); )
    54047: 1878-block 12
   771954: 1878-block 16
call    0 returned 771954
call    1 returned 771954
branch  2 taken 717907
branch  3 taken 54047 (fallthrough)
        -: 1879:        {
   717907: 1880:            MoveCharIndexAndColumn(aLine, i, c);
   717907: 1880-block 13
call    0 returned 717907
   717907: 1881:            if (c > aLimit)
branch  0 taken 0 (fallthrough)
branch  1 taken 717907
    #####: 1882:                return aLimit;
    %%%%%: 1882-block 15
        -: 1883:        }
        -: 1884:    }
    54047: 1885:    return c;
    54047: 1885-block 20
        -: 1886:}
        -: 1887:
function _ZN10TextEditor10InsertLineEi called 0 returned 0% blocks executed 0%
    #####: 1888:TextEditor::Line& TextEditor::InsertLine(int aIndex)
        -: 1889:{
    #####: 1890:    assert(!mReadOnly);
    %%%%%: 1890-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1890-block 3
call    2 never executed
    #####: 1891:    auto& result = *mLines.insert(mLines.begin() + aIndex, Line());
    %%%%%: 1891-block 4
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%: 1891-block 9
call    7 never executed
call    8 never executed
    $$$$$: 1891-block 23
    $$$$$: 1891-block 24
    $$$$$: 1891-block 25
    $$$$$: 1891-block 26
call    9 never executed
    $$$$$: 1891-block 28
    $$$$$: 1891-block 29
call   10 never executed
        -: 1892:
    #####: 1893:    for (int c = 0; c <= mState.mCurrentCursor; c++) // handle multiple cursors
    %%%%%: 1893-block 19
    %%%%%: 1893-block 20
branch  0 never executed
branch  1 never executed (fallthrough)
        -: 1894:    {
    #####: 1895:        if (mState.mCursors[c].mInteractiveEnd.mLine >= aIndex)
    %%%%%: 1895-block 12
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1896:            SetCursorPosition({ mState.mCursors[c].mInteractiveEnd.mLine + 1, mState.mCursors[c].mInteractiveEnd.mColumn }, c);
    %%%%%: 1896-block 14
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%: 1896-block 18
        -: 1897:    }
        -: 1898:
    #####: 1899:    return result;
    %%%%%: 1899-block 21
    %%%%%: 1899-block 22
        -: 1900:}
        -: 1901:
function _ZN10TextEditor10RemoveLineEiPKSt13unordered_setIiSt4hashIiESt8equal_toIiESaIiEE called 0 returned 0% blocks executed 0%
    #####: 1902:void TextEditor::RemoveLine(int aIndex, const std::unordered_set<int>* aHandledCursors)
        -: 1903:{
    #####: 1904:    assert(!mReadOnly);
    %%%%%: 1904-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1904-block 3
call    2 never executed
    #####: 1905:    assert(mLines.size() > 1);
    %%%%%: 1905-block 4
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%: 1905-block 6
call    3 never executed
        -: 1906:
    #####: 1907:    mLines.erase(mLines.begin() + aIndex);
    %%%%%: 1907-block 7
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    $$$$$: 1907-block 33
    $$$$$: 1907-block 34
    $$$$$: 1907-block 35
call    6 never executed
    #####: 1908:    assert(!mLines.empty());
    %%%%%: 1908-block 11
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%: 1908-block 13
call    3 never executed
        -: 1909:
        -: 1910:    // handle multiple cursors
    #####: 1911:    for (int c = 0; c <= mState.mCurrentCursor; c++)
    %%%%%: 1911-block 14
    %%%%%: 1911-block 30
    %%%%%: 1911-block 31
branch  0 never executed
branch  1 never executed (fallthrough)
        -: 1912:    {
    #####: 1913:        if (mState.mCursors[c].mInteractiveEnd.mLine >= aIndex)
    %%%%%: 1913-block 15
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -: 1914:        {
    #####: 1915:            if (aHandledCursors == nullptr || aHandledCursors->find(c) == aHandledCursors->end()) // move up if has not been handled already
    %%%%%: 1915-block 17
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1915-block 18
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%: 1915-block 20
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed
    %%%%%: 1915-block 22
    %%%%%: 1915-block 23
    %%%%%: 1915-block 24
branch  9 never executed (fallthrough)
branch 10 never executed
    $$$$$: 1915-block 36
    $$$$$: 1915-block 37
    #####: 1916:                SetCursorPosition({ mState.mCursors[c].mInteractiveEnd.mLine - 1, mState.mCursors[c].mInteractiveEnd.mColumn }, c);
    %%%%%: 1916-block 25
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%: 1916-block 29
    $$$$$: 1916-block 38
        -: 1917:        }
        -: 1918:    }
    #####: 1919:}
    %%%%%: 1919-block 32
        -: 1920:
function _ZN10TextEditor11RemoveLinesEii called 0 returned 0% blocks executed 0%
    #####: 1921:void TextEditor::RemoveLines(int aStart, int aEnd)
        -: 1922:{
    #####: 1923:    assert(!mReadOnly);
    %%%%%: 1923-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1923-block 3
call    2 never executed
    #####: 1924:    assert(aEnd >= aStart);
    %%%%%: 1924-block 4
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1924-block 5
call    2 never executed
    #####: 1925:    assert(mLines.size() > (size_t)(aEnd - aStart));
    %%%%%: 1925-block 6
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%: 1925-block 8
call    3 never executed
        -: 1926:
    #####: 1927:    mLines.erase(mLines.begin() + aStart, mLines.begin() + aEnd);
    %%%%%: 1927-block 9
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    $$$$$: 1927-block 30
    $$$$$: 1927-block 31
    $$$$$: 1927-block 32
    $$$$$: 1927-block 33
    $$$$$: 1927-block 34
    $$$$$: 1927-block 35
call    9 never executed
    #####: 1928:    assert(!mLines.empty());
    %%%%%: 1928-block 16
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%: 1928-block 18
call    3 never executed
        -: 1929:
        -: 1930:    // handle multiple cursors
    #####: 1931:    for (int c = 0; c <= mState.mCurrentCursor; c++)
    %%%%%: 1931-block 19
    %%%%%: 1931-block 27
    %%%%%: 1931-block 28
branch  0 never executed
branch  1 never executed (fallthrough)
        -: 1932:    {
    #####: 1933:        if (mState.mCursors[c].mInteractiveEnd.mLine >= aStart)
    %%%%%: 1933-block 20
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -: 1934:        {
    #####: 1935:            int targetLine = mState.mCursors[c].mInteractiveEnd.mLine - (aEnd - aStart);
    %%%%%: 1935-block 22
call    0 never executed
    #####: 1936:            targetLine = targetLine < 0 ? 0 : targetLine;
    #####: 1937:            SetCursorPosition({ targetLine , mState.mCursors[c].mInteractiveEnd.mColumn }, c);
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    %%%%%: 1937-block 26
        -: 1938:        }
        -: 1939:    }
    #####: 1940:}
    %%%%%: 1940-block 29
        -: 1941:
function _ZN10TextEditor11DeleteRangeERKNS_11CoordinatesES2_ called 0 returned 0% blocks executed 0%
    #####: 1942:void TextEditor::DeleteRange(const Coordinates& aStart, const Coordinates& aEnd)
        -: 1943:{
    #####: 1944:    assert(aEnd >= aStart);
    %%%%%: 1944-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%: 1944-block 4
call    3 never executed
    #####: 1945:    assert(!mReadOnly);
    %%%%%: 1945-block 5
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 1945-block 6
call    2 never executed
        -: 1946:
    #####: 1947:    if (aEnd == aStart)
    %%%%%: 1947-block 7
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1948:        return;
    %%%%%: 1948-block 9
        -: 1949:
    #####: 1950:    auto start = GetCharacterIndexL(aStart);
    %%%%%: 1950-block 10
call    0 never executed
    #####: 1951:    auto end = GetCharacterIndexR(aEnd);
call    0 never executed
        -: 1952:
    #####: 1953:    if (aStart.mLine == aEnd.mLine)
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 1954:    {
    #####: 1955:        auto n = GetLineMaxColumn(aStart.mLine);
    %%%%%: 1955-block 13
call    0 never executed
    #####: 1956:        if (aEnd.mColumn >= n)
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 1957:            RemoveGlyphsFromLine(aStart.mLine, start); // from start to end of line
    %%%%%: 1957-block 15
call    0 never executed
        -: 1958:        else
    #####: 1959:            RemoveGlyphsFromLine(aStart.mLine, start, end);
    %%%%%: 1959-block 16
call    0 never executed
        -: 1960:    }
        -: 1961:    else
        -: 1962:    {
    #####: 1963:        RemoveGlyphsFromLine(aStart.mLine, start); // from start to end of line
    %%%%%: 1963-block 17
call    0 never executed
    #####: 1964:        RemoveGlyphsFromLine(aEnd.mLine, 0, end);
call    0 never executed
    #####: 1965:        auto& firstLine = mLines[aStart.mLine];
call    0 never executed
    #####: 1966:        auto& lastLine = mLines[aEnd.mLine];
call    0 never executed
        -: 1967:
    #####: 1968:        if (aStart.mLine < aEnd.mLine)
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 1969:        {
    #####: 1970:            AddGlyphsToLine(aStart.mLine, firstLine.size(), lastLine.begin(), lastLine.end());
    %%%%%: 1970-block 22
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####: 1971:            for (int c = 0; c <= mState.mCurrentCursor; c++) // move up cursors in line that is being moved up
    %%%%%: 1971-block 46
    %%%%%: 1971-block 47
branch  0 never executed
branch  1 never executed (fallthrough)
        -: 1972:            {
    #####: 1973:                if (mState.mCursors[c].mInteractiveEnd.mLine > aEnd.mLine)
    %%%%%: 1973-block 27
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1974:                    break;
    %%%%%: 1974-block 29
    #####: 1975:                else if (mState.mCursors[c].mInteractiveEnd.mLine != aEnd.mLine)
    %%%%%: 1975-block 30
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 1976:                    continue;
    %%%%%: 1976-block 32
    #####: 1977:                int otherCursorEndCharIndex = GetCharacterIndexR(mState.mCursors[c].mInteractiveEnd);
    %%%%%: 1977-block 33
call    0 never executed
call    1 never executed
    #####: 1978:                int otherCursorStartCharIndex = GetCharacterIndexR(mState.mCursors[c].mInteractiveStart);
call    0 never executed
call    1 never executed
    #####: 1979:                int otherCursorNewEndCharIndex = GetCharacterIndexR(aStart) + otherCursorEndCharIndex;
call    0 never executed
    #####: 1980:                int otherCursorNewStartCharIndex = GetCharacterIndexR(aStart) + otherCursorStartCharIndex;
call    0 never executed
    #####: 1981:                auto targetEndCoords = Coordinates(aStart.mLine, GetCharacterColumn(aStart.mLine, otherCursorNewEndCharIndex));
call    0 never executed
call    1 never executed
    #####: 1982:                auto targetStartCoords = Coordinates(aStart.mLine, GetCharacterColumn(aStart.mLine, otherCursorNewStartCharIndex));
call    0 never executed
call    1 never executed
    #####: 1983:                SetCursorPosition(targetStartCoords, c, true);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 1984:                SetCursorPosition(targetEndCoords, c, false);
    %%%%%: 1984-block 44
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 1985:            }
    #####: 1986:            RemoveLines(aStart.mLine + 1, aEnd.mLine + 1);
    %%%%%: 1986-block 48
call    0 never executed
        -: 1987:        }
        -: 1988:    }
        -: 1989:}
        -: 1990:
function _ZN10TextEditor15DeleteSelectionEi called 0 returned 0% blocks executed 0%
    #####: 1991:void TextEditor::DeleteSelection(int aCursor)
        -: 1992:{
    #####: 1993:    if (aCursor == -1)
    %%%%%: 1993-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 1994:        aCursor = mState.mCurrentCursor;
    %%%%%: 1994-block 3
        -: 1995:
    #####: 1996:    if (mState.mCursors[aCursor].GetSelectionEnd() == mState.mCursors[aCursor].GetSelectionStart())
    %%%%%: 1996-block 4
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed
    #####: 1997:        return;
    %%%%%: 1997-block 10
        -: 1998:
    #####: 1999:    DeleteRange(mState.mCursors[aCursor].GetSelectionStart(), mState.mCursors[aCursor].GetSelectionEnd());
    %%%%%: 1999-block 11
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    $$$$$: 1999-block 23
    $$$$$: 1999-block 24
call    7 never executed
    #####: 2000:    SetCursorPosition(mState.mCursors[aCursor].GetSelectionStart(), aCursor);
    %%%%%: 2000-block 16
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    #####: 2001:    Colorize(mState.mCursors[aCursor].GetSelectionStart().mLine, 1);
    %%%%%: 2001-block 19
call    0 never executed
call    1 never executed
call    2 never executed
        -: 2002:}
        -: 2003:
function _ZN10TextEditor20RemoveGlyphsFromLineEiii called 0 returned 0% blocks executed 0%
    #####: 2004:void TextEditor::RemoveGlyphsFromLine(int aLine, int aStartChar, int aEndChar)
        -: 2005:{
    #####: 2006:    int column = GetCharacterColumn(aLine, aStartChar);
    %%%%%: 2006-block 2
call    0 never executed
    #####: 2007:    auto& line = mLines[aLine];
call    0 never executed
    #####: 2008:    OnLineChanged(true, aLine, column, aEndChar - aStartChar, true);
call    0 never executed
    #####: 2009:    line.erase(line.begin() + aStartChar, aEndChar == -1 ? line.end() : line.begin() + aEndChar);
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 2009-block 6
call    2 never executed
    %%%%%: 2009-block 7
call    3 never executed
call    4 never executed
    %%%%%: 2009-block 9
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    $$$$$: 2009-block 16
    $$$$$: 2009-block 17
    $$$$$: 2009-block 18
    $$$$$: 2009-block 19
    $$$$$: 2009-block 20
    #####: 2010:    OnLineChanged(false, aLine, column, aEndChar - aStartChar, true);
    %%%%%: 2010-block 14
call    0 never executed
    #####: 2011:}
        -: 2012:
function _ZN10TextEditor15AddGlyphsToLineEiiN9__gnu_cxx17__normal_iteratorIPNS_5GlyphESt6vectorIS2_SaIS2_EEEES7_ called 0 returned 0% blocks executed 0%
    #####: 2013:void TextEditor::AddGlyphsToLine(int aLine, int aTargetIndex, Line::iterator aSourceStart, Line::iterator aSourceEnd)
        -: 2014:{
    #####: 2015:    int targetColumn = GetCharacterColumn(aLine, aTargetIndex);
    %%%%%: 2015-block 2
call    0 never executed
    #####: 2016:    int charsInserted = std::distance(aSourceStart, aSourceEnd);
    #####: 2017:    auto& line = mLines[aLine];
    %%%%%: 2017-block 9
call    0 never executed
    #####: 2018:    OnLineChanged(true, aLine, targetColumn, charsInserted, false);
call    0 never executed
    #####: 2019:    line.insert(line.begin() + aTargetIndex, aSourceStart, aSourceEnd);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    $$$$$: 2019-block 17
    $$$$$: 2019-block 18
    #####: 2020:    OnLineChanged(false, aLine, targetColumn, charsInserted, false);
    %%%%%: 2020-block 15
call    0 never executed
    #####: 2021:}
        -: 2022:
function _ZN10TextEditor14AddGlyphToLineEiiNS_5GlyphE called 0 returned 0% blocks executed 0%
    #####: 2023:void TextEditor::AddGlyphToLine(int aLine, int aTargetIndex, Glyph aGlyph)
        -: 2024:{
    #####: 2025:    int targetColumn = GetCharacterColumn(aLine, aTargetIndex);
    %%%%%: 2025-block 2
call    0 never executed
    #####: 2026:    auto& line = mLines[aLine];
call    0 never executed
    #####: 2027:    OnLineChanged(true, aLine, targetColumn, 1, false);
call    0 never executed
    #####: 2028:    line.insert(line.begin() + aTargetIndex, aGlyph);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    $$$$$: 2028-block 11
    $$$$$: 2028-block 12
    #####: 2029:    OnLineChanged(false, aLine, targetColumn, 1, false);
    %%%%%: 2029-block 9
call    0 never executed
    #####: 2030:}
        -: 2031:
function _ZNK10TextEditor13GetGlyphColorERKNS_5GlyphE called 542808 returned 100% blocks executed 47%
   542808: 2032:ImU32 TextEditor::GetGlyphColor(const Glyph& aGlyph) const
        -: 2033:{
   542808: 2034:    if (mLanguageDefinition == nullptr)
   542808: 2034-block 2
branch  0 taken 0 (fallthrough)
branch  1 taken 542808
    #####: 2035:        return mPalette[(int)PaletteIndex::Default];
    %%%%%: 2035-block 3
call    0 never executed
   542808: 2036:    if (aGlyph.mComment)
   542808: 2036-block 5
branch  0 taken 0 (fallthrough)
branch  1 taken 542808
    #####: 2037:        return mPalette[(int)PaletteIndex::Comment];
    %%%%%: 2037-block 6
call    0 never executed
   542808: 2038:    if (aGlyph.mMultiLineComment)
   542808: 2038-block 8
branch  0 taken 0 (fallthrough)
branch  1 taken 542808
    #####: 2039:        return mPalette[(int)PaletteIndex::MultiLineComment];
    %%%%%: 2039-block 9
call    0 never executed
   542808: 2040:    auto const color = mPalette[(int)aGlyph.mColorIndex];
   542808: 2040-block 11
call    0 returned 542808
   542808: 2041:    if (aGlyph.mPreprocessor)
branch  0 taken 0 (fallthrough)
branch  1 taken 542808
        -: 2042:    {
    #####: 2043:        const auto ppcolor = mPalette[(int)PaletteIndex::Preprocessor];
    %%%%%: 2043-block 13
call    0 never executed
    #####: 2044:        const int c0 = ((ppcolor & 0xff) + (color & 0xff)) / 2;
    #####: 2045:        const int c1 = (((ppcolor >> 8) & 0xff) + ((color >> 8) & 0xff)) / 2;
    #####: 2046:        const int c2 = (((ppcolor >> 16) & 0xff) + ((color >> 16) & 0xff)) / 2;
    #####: 2047:        const int c3 = (((ppcolor >> 24) & 0xff) + ((color >> 24) & 0xff)) / 2;
    #####: 2048:        return ImU32(c0 | (c1 << 8) | (c2 << 16) | (c3 << 24));
        -: 2049:    }
   542808: 2050:    return color;
   542808: 2050-block 15
        -: 2051:}
        -: 2052:
function _ZN10TextEditor9GoToPopupEv called 0 returned 0% blocks executed 0%
    #####: 2053:void TextEditor::GoToPopup(){
    #####: 2054:    char inputText[200] = "";
        -: 2055:    static bool setFocus = true;
        -: 2056:
    #####: 2057:    if (FontInit){
    %%%%%: 2057-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2058:        FontInit();
    %%%%%: 2058-block 3
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2059:    }
        -: 2060:
    #####: 2061:    if (keepPopup){
    %%%%%: 2061-block 4
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2062:        ImGui::OpenPopup("InputPopup");
    %%%%%: 2062-block 5
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2063:    }
        -: 2064:
    #####: 2065:    auto text = "Go to Line:Column";
        -: 2066:
    #####: 2067:    ImVec2 windowPos = ImGui::GetWindowPos();
    %%%%%: 2067-block 6
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 2068:    ImVec2 windowTextPos= ImGui::CalcTextSize(text);
    %%%%%: 2068-block 7
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 2069:    ImVec2 windowSize = ImGui::GetWindowSize();
    %%%%%: 2069-block 8
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 2070:    ImVec2 popupSize = ImVec2(300, 100); // Adjust based on your popup size
    #####: 2071:    ImVec2 popupPos = windowPos + ImVec2((windowSize.x - popupSize.x) * 0.5f, (windowSize.y - popupSize.y) * 0.5f);
    %%%%%: 2071-block 9
call    0 never executed
call    1 never executed
        -: 2072:
    #####: 2073:    ImGui::SetNextWindowPos(popupPos, ImGuiCond_Appearing);
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    $$$$$: 2073-block 68
        -: 2074:
    #####: 2075:    ImGui::GetStyle().Colors[ImGuiCol_PopupBg] = ImColor(0x1e, 0x20, 0x30);
    %%%%%: 2075-block 13
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    $$$$$: 2075-block 69
    #####: 2076:    ImGui::GetStyle().PopupBorderSize = 5.0f;
    %%%%%: 2076-block 16
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 2077:    ImGui::SetNextWindowSize(ImVec2(300.0, 100.0), 0);
    %%%%%: 2077-block 17
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    $$$$$: 2077-block 70
    #####: 2078:    if (ImGui::BeginPopup("InputPopup", ImGuiWindowFlags_AlwaysAutoResize))
    %%%%%: 2078-block 19
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 2078-block 20
branch  3 never executed (fallthrough)
branch  4 never executed
        -: 2079:    {
    #####: 2080:        windowSize = ImGui::GetWindowSize();
    %%%%%: 2080-block 21
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2081:
    #####: 2082:        ImGui::SetCursorPosX((windowSize.x - windowTextPos.x) * 0.5f);
    %%%%%: 2082-block 22
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 2083:        ImGui::Text("%s", text);
    %%%%%: 2083-block 23
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2084:
    #####: 2085:        ImGui::Dummy(ImVec2(0.0f, 15.0f));
    %%%%%: 2085-block 24
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    $$$$$: 2085-block 71
    #####: 2086:        ImGui::NewLine();
    %%%%%: 2086-block 26
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 2087:        ImGui::SameLine(0, 10);
    %%%%%: 2087-block 27
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2088:
    #####: 2089:        ImGui::Text("[Line][:Column]: ");
    %%%%%: 2089-block 28
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2090:
    #####: 2091:        ImGui::SameLine(0, 5);
    %%%%%: 2091-block 29
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 2092:        ImGui::PushItemWidth(150);
    %%%%%: 2092-block 30
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2093:
        -: 2094:        bool entered;
    #####: 2095:        auto flags = ImGuiInputTextFlags_EnterReturnsTrue;
    #####: 2096:        ImGuiInputTextCallback callback = nullptr;
        -: 2097:
    #####: 2098:        if (CompletionCallback){
    %%%%%: 2098-block 31
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2099:            flags = static_cast<ImGuiInputTextFlags_>(flags | ImGuiInputTextFlags_CallbackCompletion);
    #####: 2100:            callback = reinterpret_cast<ImGuiInputTextCallback>(CompletionCallback);
    %%%%%: 2100-block 32
        -: 2101:        }
        -: 2102:
    #####: 2103:       entered = ImGui::InputTextWithHint("##input", "Line or Label", inputText, IM_ARRAYSIZE(inputText), flags, callback);
    %%%%%: 2103-block 33
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2104:
    #####: 2105:        if (setFocus){
    %%%%%: 2105-block 34
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2106:            ImGui::SetKeyboardFocusHere(-1);
    %%%%%: 2106-block 35
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 2107:            setFocus = false;
    %%%%%: 2107-block 36
        -: 2108:        }
        -: 2109:
    #####: 2110:       if (entered){
    %%%%%: 2110-block 37
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2111:            if (ParseStrIntoCoordinates){
    %%%%%: 2111-block 38
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2112:                auto inputstr = std::string(inputText);
    %%%%%: 2112-block 41
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    $$$$$: 2112-block 74
    #####: 2113:                auto [x, y] = ParseStrIntoCoordinates(inputstr);
    %%%%%: 2113-block 43
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 2113-block 44
call    3 never executed
call    4 never executed
    #####: 2114:                SetCursorPosition(Coordinates(x, y));
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    $$$$$: 2114-block 75
    #####: 2115:            }
    %%%%%: 2115-block 48
call    0 never executed
    $$$$$: 2115-block 76
call    1 never executed
    #####: 2116:            keepPopup = false;
    #####: 2117:            setFocus = true;
    %%%%%: 2117-block 50
        -: 2118:        }
        -: 2119:
    #####: 2120:        ImGui::PopItemWidth();
    %%%%%: 2120-block 51
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 2121:        ImGui::Dummy(ImVec2(0, 8.0f));
    %%%%%: 2121-block 52
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    $$$$$: 2121-block 79
    #####: 2122:        ImGui::SetCursorPosX(windowSize.y + windowSize.y - 12);
    %%%%%: 2122-block 54
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2123:
    #####: 2124:        if (ImGui::Button("OK"))
    %%%%%: 2124-block 55
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%: 2124-block 57
branch  4 never executed (fallthrough)
branch  5 never executed
    $$$$$: 2124-block 80
        -: 2125:        {
    #####: 2126:            keepPopup = false;
    #####: 2127:            setFocus = true;
    #####: 2128:           ImGui::CloseCurrentPopup();
    %%%%%: 2128-block 58
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2129:        }
        -: 2130:
    #####: 2131:        ImGui::SameLine(0, 3);
    %%%%%: 2131-block 59
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2132:
    #####: 2133:        if (ImGui::Button("CANCEL"))
    %%%%%: 2133-block 60
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%: 2133-block 62
branch  4 never executed (fallthrough)
branch  5 never executed
    $$$$$: 2133-block 81
        -: 2134:        {
    #####: 2135:            keepPopup = false;
    #####: 2136:            setFocus = true;
    #####: 2137:            ImGui::CloseCurrentPopup();
    %%%%%: 2137-block 63
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2138:        }
        -: 2139:
    #####: 2140:        ImGui::EndPopup();
    %%%%%: 2140-block 64
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2141:    }
        -: 2142:
    #####: 2143:    if (FontInit){
    %%%%%: 2143-block 65
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2144:        ImGui::PopFont();
    %%%%%: 2144-block 66
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2145:    }
    #####: 2146:}
    %%%%%: 2146-block 67
        -: 2147:
function _ZN10TextEditor20HandleKeyboardInputsEb called 1077 returned 100% blocks executed 54%
     1077: 2148:void TextEditor::HandleKeyboardInputs(bool aParentIsFocused)
        -: 2149:{
     1077: 2150:    if (ImGui::IsWindowFocused() || aParentIsFocused)
     1077: 2150-block 2
call    0 returned 1077
branch  1 taken 687 (fallthrough)
branch  2 taken 390
      687: 2150-block 4
branch  3 taken 0 (fallthrough)
branch  4 taken 687
      390: 2150-block 5
      687: 2150-block 6
     1077: 2150-block 7
branch  5 taken 390 (fallthrough)
branch  6 taken 687
        -: 2151:    {
      390: 2152:        if (ImGui::IsWindowHovered())
      390: 2152-block 8
call    0 returned 390
branch  1 taken 344 (fallthrough)
branch  2 taken 46
      344: 2153:            ImGui::SetMouseCursor(ImGuiMouseCursor_TextInput);
      344: 2153-block 10
call    0 returned 344
        -: 2154:
      390: 2155:        ImGuiIO& io = ImGui::GetIO();
      390: 2155-block 11
call    0 returned 390
      390: 2156:        auto isOSX = io.ConfigMacOSXBehaviors;
      390: 2157:        auto alt = io.KeyAlt;
      390: 2158:        auto ctrl = io.KeyCtrl;
      390: 2159:        auto shift = io.KeyShift;
      390: 2160:        auto super = io.KeySuper;
        -: 2161:
     390*: 2162:        auto isShortcut = (isOSX ? (super && !ctrl) : (ctrl && !super)) && !alt && !shift;
branch  0 taken 0 (fallthrough)
branch  1 taken 390
    %%%%%: 2162-block 13
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 2162-block 14
branch  4 never executed
branch  5 never executed
      390: 2162-block 15
branch  6 taken 0 (fallthrough)
branch  7 taken 390
    %%%%%: 2162-block 16
branch  8 never executed (fallthrough)
branch  9 never executed
    %%%%%: 2162-block 17
branch 10 never executed (fallthrough)
branch 11 never executed
    %%%%%: 2162-block 18
branch 12 never executed (fallthrough)
branch 13 never executed
    %%%%%: 2162-block 19
      390: 2162-block 20
     390*: 2163:        auto isShiftShortcut = (isOSX ? (super && !ctrl) : (ctrl && !super)) && shift && !alt;
      390: 2163-block 21
branch  0 taken 0 (fallthrough)
branch  1 taken 390
    %%%%%: 2163-block 22
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 2163-block 23
branch  4 never executed
branch  5 never executed
      390: 2163-block 24
branch  6 taken 0 (fallthrough)
branch  7 taken 390
    %%%%%: 2163-block 25
branch  8 never executed (fallthrough)
branch  9 never executed
    %%%%%: 2163-block 26
branch 10 never executed (fallthrough)
branch 11 never executed
    %%%%%: 2163-block 27
branch 12 never executed (fallthrough)
branch 13 never executed
    %%%%%: 2163-block 28
      390: 2163-block 29
     390*: 2164:        auto isWordmoveKey = isOSX ? alt : ctrl;
      390: 2164-block 30
branch  0 taken 0 (fallthrough)
branch  1 taken 390
    %%%%%: 2164-block 31
      390: 2164-block 32
     390*: 2165:        auto isAltOnly = alt && !ctrl && !shift && !super;
      390: 2165-block 33
branch  0 taken 0 (fallthrough)
branch  1 taken 390
    %%%%%: 2165-block 34
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 2165-block 35
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 2165-block 36
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 2165-block 37
      390: 2165-block 38
     390*: 2166:        auto isCtrlOnly = ctrl && !alt && !shift && !super;
      390: 2166-block 39
branch  0 taken 0 (fallthrough)
branch  1 taken 390
    %%%%%: 2166-block 40
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 2166-block 41
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 2166-block 42
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 2166-block 43
      390: 2166-block 44
     390*: 2167:        auto isShiftOnly = shift && !alt && !ctrl && !super;
      390: 2167-block 45
branch  0 taken 0 (fallthrough)
branch  1 taken 390
    %%%%%: 2167-block 46
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 2167-block 47
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 2167-block 48
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 2167-block 49
      390: 2167-block 50
        -: 2168:
      390: 2169:        io.WantCaptureKeyboard = true;
      390: 2170:        io.WantTextInput = true;
        -: 2171:
     390*: 2172:        if (!mReadOnly && isShortcut && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_Z)))
      390: 2172-block 51
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2172-block 52
branch  2 taken 0 (fallthrough)
branch  3 taken 390
    %%%%%: 2172-block 53
call    4 never executed
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 2172-block 56
      390: 2172-block 57
      390: 2172-block 58
branch  8 taken 0 (fallthrough)
branch  9 taken 390
    #####: 2173:            Undo();
    %%%%%: 2173-block 59
call    0 never executed
     390*: 2174:        else if (!mReadOnly && isAltOnly && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_Backspace)))
      390: 2174-block 60
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2174-block 61
branch  2 taken 0 (fallthrough)
branch  3 taken 390
    %%%%%: 2174-block 62
call    4 never executed
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 2174-block 65
      390: 2174-block 66
      390: 2174-block 67
branch  8 taken 0 (fallthrough)
branch  9 taken 390
    #####: 2175:            Undo();
    %%%%%: 2175-block 68
call    0 never executed
     390*: 2176:        else if (!mReadOnly && isShortcut && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_Y)))
      390: 2176-block 69
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2176-block 70
branch  2 taken 0 (fallthrough)
branch  3 taken 390
    %%%%%: 2176-block 71
call    4 never executed
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 2176-block 74
      390: 2176-block 75
      390: 2176-block 76
branch  8 taken 0 (fallthrough)
branch  9 taken 390
    #####: 2177:            Redo();
    %%%%%: 2177-block 77
call    0 never executed
     390*: 2178:        else if (!mReadOnly && isShiftShortcut && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_Z)))
      390: 2178-block 78
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2178-block 79
branch  2 taken 0 (fallthrough)
branch  3 taken 390
    %%%%%: 2178-block 80
call    4 never executed
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 2178-block 83
      390: 2178-block 84
      390: 2178-block 85
branch  8 taken 0 (fallthrough)
branch  9 taken 390
    #####: 2179:            Redo();
    %%%%%: 2179-block 86
call    0 never executed
     390*: 2180:        else if (!alt && !ctrl && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_UpArrow)))
      390: 2180-block 87
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2180-block 88
branch  2 taken 390 (fallthrough)
branch  3 taken 0
      390: 2180-block 89
branch  4 taken 370 (fallthrough)
branch  5 taken 20
      370: 2180-block 90
call    6 returned 370
call    7 returned 370
branch  8 taken 0 (fallthrough)
branch  9 taken 370
    %%%%%: 2180-block 93
      390: 2180-block 94
      390: 2180-block 95
branch 10 taken 0 (fallthrough)
branch 11 taken 390
    #####: 2181:            MoveUp(1, shift);
    %%%%%: 2181-block 96
call    0 never executed
     390*: 2182:        else if (!alt && !ctrl && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_DownArrow)))
      390: 2182-block 97
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2182-block 98
branch  2 taken 390 (fallthrough)
branch  3 taken 0
      390: 2182-block 99
branch  4 taken 370 (fallthrough)
branch  5 taken 20
      370: 2182-block 100
call    6 returned 370
call    7 returned 370
branch  8 taken 0 (fallthrough)
branch  9 taken 370
    %%%%%: 2182-block 103
      390: 2182-block 104
      390: 2182-block 105
branch 10 taken 0 (fallthrough)
branch 11 taken 390
    #####: 2183:            MoveDown(1, shift);
    %%%%%: 2183-block 106
call    0 never executed
     390*: 2184:        else if ((isOSX ? !ctrl : !alt) && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_LeftArrow)))
      390: 2184-block 107
branch  0 taken 0 (fallthrough)
branch  1 taken 390
    %%%%%: 2184-block 108
branch  2 never executed
branch  3 never executed
      390: 2184-block 109
branch  4 taken 390 (fallthrough)
branch  5 taken 0
      390: 2184-block 110
branch  6 taken 370 (fallthrough)
branch  7 taken 20
      370: 2184-block 111
call    8 returned 370
call    9 returned 370
branch 10 taken 0 (fallthrough)
branch 11 taken 370
    %%%%%: 2184-block 114
      390: 2184-block 115
      390: 2184-block 116
branch 12 taken 0 (fallthrough)
branch 13 taken 390
    #####: 2185:            MoveLeft(shift, isWordmoveKey);
    %%%%%: 2185-block 117
call    0 never executed
     390*: 2186:        else if ((isOSX ? !ctrl : !alt) && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_RightArrow)))
      390: 2186-block 118
branch  0 taken 0 (fallthrough)
branch  1 taken 390
    %%%%%: 2186-block 119
branch  2 never executed
branch  3 never executed
      390: 2186-block 120
branch  4 taken 390 (fallthrough)
branch  5 taken 0
      390: 2186-block 121
branch  6 taken 370 (fallthrough)
branch  7 taken 20
      370: 2186-block 122
call    8 returned 370
call    9 returned 370
branch 10 taken 0 (fallthrough)
branch 11 taken 370
    %%%%%: 2186-block 125
      390: 2186-block 126
      390: 2186-block 127
branch 12 taken 0 (fallthrough)
branch 13 taken 390
    #####: 2187:            MoveRight(shift, isWordmoveKey);
    %%%%%: 2187-block 128
call    0 never executed
     390*: 2188:        else if (!alt && !ctrl && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_PageUp)))
      390: 2188-block 129
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2188-block 130
branch  2 taken 390 (fallthrough)
branch  3 taken 0
      390: 2188-block 131
branch  4 taken 370 (fallthrough)
branch  5 taken 20
      370: 2188-block 132
call    6 returned 370
call    7 returned 370
branch  8 taken 0 (fallthrough)
branch  9 taken 370
    %%%%%: 2188-block 135
      390: 2188-block 136
      390: 2188-block 137
branch 10 taken 0 (fallthrough)
branch 11 taken 390
    #####: 2189:            MoveUp(mVisibleLineCount - 2, shift);
    %%%%%: 2189-block 138
call    0 never executed
     390*: 2190:        else if (!alt && !ctrl && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_PageDown)))
      390: 2190-block 139
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2190-block 140
branch  2 taken 390 (fallthrough)
branch  3 taken 0
      390: 2190-block 141
branch  4 taken 370 (fallthrough)
branch  5 taken 20
      370: 2190-block 142
call    6 returned 370
call    7 returned 370
branch  8 taken 0 (fallthrough)
branch  9 taken 370
    %%%%%: 2190-block 145
      390: 2190-block 146
      390: 2190-block 147
branch 10 taken 0 (fallthrough)
branch 11 taken 390
    #####: 2191:            MoveDown(mVisibleLineCount - 2, shift);
    %%%%%: 2191-block 148
call    0 never executed
     390*: 2192:        else if (ctrl && !alt && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_Home)))
      390: 2192-block 149
branch  0 taken 0 (fallthrough)
branch  1 taken 390
    %%%%%: 2192-block 150
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 2192-block 151
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 2192-block 152
call    6 never executed
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed
    %%%%%: 2192-block 155
      390: 2192-block 156
      390: 2192-block 157
branch 10 taken 0 (fallthrough)
branch 11 taken 390
    #####: 2193:            MoveTop(shift);
    %%%%%: 2193-block 158
call    0 never executed
     390*: 2194:        else if (ctrl && !alt && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_End)))
      390: 2194-block 159
branch  0 taken 0 (fallthrough)
branch  1 taken 390
    %%%%%: 2194-block 160
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 2194-block 161
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 2194-block 162
call    6 never executed
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed
    %%%%%: 2194-block 165
      390: 2194-block 166
      390: 2194-block 167
branch 10 taken 0 (fallthrough)
branch 11 taken 390
    #####: 2195:            MoveBottom(shift);
    %%%%%: 2195-block 168
call    0 never executed
     390*: 2196:        else if (!alt && !ctrl && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_Home)))
      390: 2196-block 169
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2196-block 170
branch  2 taken 390 (fallthrough)
branch  3 taken 0
      390: 2196-block 171
branch  4 taken 370 (fallthrough)
branch  5 taken 20
      370: 2196-block 172
call    6 returned 370
call    7 returned 370
branch  8 taken 0 (fallthrough)
branch  9 taken 370
    %%%%%: 2196-block 175
      390: 2196-block 176
      390: 2196-block 177
branch 10 taken 0 (fallthrough)
branch 11 taken 390
    #####: 2197:            MoveHome(shift);
    %%%%%: 2197-block 178
call    0 never executed
     390*: 2198:        else if (!alt && !ctrl && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_End)))
      390: 2198-block 179
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2198-block 180
branch  2 taken 390 (fallthrough)
branch  3 taken 0
      390: 2198-block 181
branch  4 taken 370 (fallthrough)
branch  5 taken 20
      370: 2198-block 182
call    6 returned 370
call    7 returned 370
branch  8 taken 0 (fallthrough)
branch  9 taken 370
    %%%%%: 2198-block 185
      390: 2198-block 186
      390: 2198-block 187
branch 10 taken 0 (fallthrough)
branch 11 taken 390
    #####: 2199:            MoveEnd(shift);
    %%%%%: 2199-block 188
call    0 never executed
     390*: 2200:        else if (!mReadOnly && !alt && !shift && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_Delete)))
      390: 2200-block 189
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2200-block 190
branch  2 taken 390 (fallthrough)
branch  3 taken 0
      390: 2200-block 191
branch  4 taken 390 (fallthrough)
branch  5 taken 0
      390: 2200-block 192
branch  6 taken 370 (fallthrough)
branch  7 taken 20
      370: 2200-block 193
call    8 returned 370
call    9 returned 370
branch 10 taken 0 (fallthrough)
branch 11 taken 370
    %%%%%: 2200-block 196
      390: 2200-block 197
      390: 2200-block 198
branch 12 taken 0 (fallthrough)
branch 13 taken 390
    #####: 2201:            Delete(ctrl);
    %%%%%: 2201-block 199
call    0 never executed
     390*: 2202:        else if (!mReadOnly && !alt && !shift && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_Backspace)))
      390: 2202-block 200
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2202-block 201
branch  2 taken 390 (fallthrough)
branch  3 taken 0
      390: 2202-block 202
branch  4 taken 390 (fallthrough)
branch  5 taken 0
      390: 2202-block 203
branch  6 taken 370 (fallthrough)
branch  7 taken 20
      370: 2202-block 204
call    8 returned 370
call    9 returned 370
branch 10 taken 0 (fallthrough)
branch 11 taken 370
    %%%%%: 2202-block 207
      390: 2202-block 208
      390: 2202-block 209
branch 12 taken 0 (fallthrough)
branch 13 taken 390
    #####: 2203:            Backspace(ctrl);
    %%%%%: 2203-block 210
call    0 never executed
     390*: 2204:        else if (!mReadOnly && !alt && ctrl && shift && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_K)))
      390: 2204-block 211
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2204-block 212
branch  2 taken 390 (fallthrough)
branch  3 taken 0
      390: 2204-block 213
branch  4 taken 0 (fallthrough)
branch  5 taken 390
    %%%%%: 2204-block 214
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 2204-block 215
branch  8 never executed (fallthrough)
branch  9 never executed
    %%%%%: 2204-block 216
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed
    %%%%%: 2204-block 219
      390: 2204-block 220
      390: 2204-block 221
branch 14 taken 0 (fallthrough)
branch 15 taken 390
    #####: 2205:            RemoveCurrentLines();
    %%%%%: 2205-block 222
call    0 never executed
     390*: 2206:        else if (!mReadOnly && !alt && ctrl && !shift && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_LeftBracket)))
      390: 2206-block 223
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2206-block 224
branch  2 taken 390 (fallthrough)
branch  3 taken 0
      390: 2206-block 225
branch  4 taken 0 (fallthrough)
branch  5 taken 390
    %%%%%: 2206-block 226
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 2206-block 227
branch  8 never executed (fallthrough)
branch  9 never executed
    %%%%%: 2206-block 228
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed
    %%%%%: 2206-block 231
      390: 2206-block 232
      390: 2206-block 233
branch 14 taken 0 (fallthrough)
branch 15 taken 390
    #####: 2207:            ChangeCurrentLinesIndentation(false);
    %%%%%: 2207-block 234
call    0 never executed
     390*: 2208:        else if (!mReadOnly && !alt && ctrl && !shift && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_RightBracket)))
      390: 2208-block 235
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2208-block 236
branch  2 taken 390 (fallthrough)
branch  3 taken 0
      390: 2208-block 237
branch  4 taken 0 (fallthrough)
branch  5 taken 390
    %%%%%: 2208-block 238
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 2208-block 239
branch  8 never executed (fallthrough)
branch  9 never executed
    %%%%%: 2208-block 240
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed
    %%%%%: 2208-block 243
      390: 2208-block 244
      390: 2208-block 245
branch 14 taken 0 (fallthrough)
branch 15 taken 390
    #####: 2209:            ChangeCurrentLinesIndentation(true);
    %%%%%: 2209-block 246
call    0 never executed
     390*: 2210:        else if (!alt && ctrl && shift && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_UpArrow)))
      390: 2210-block 247
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2210-block 248
branch  2 taken 0 (fallthrough)
branch  3 taken 390
    %%%%%: 2210-block 249
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 2210-block 250
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 2210-block 251
call    8 never executed
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed
    %%%%%: 2210-block 254
      390: 2210-block 255
      390: 2210-block 256
branch 12 taken 0 (fallthrough)
branch 13 taken 390
    #####: 2211:            MoveUpCurrentLines();
    %%%%%: 2211-block 257
call    0 never executed
     390*: 2212:        else if (!alt && ctrl && shift && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_DownArrow)))
      390: 2212-block 258
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2212-block 259
branch  2 taken 0 (fallthrough)
branch  3 taken 390
    %%%%%: 2212-block 260
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 2212-block 261
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 2212-block 262
call    8 never executed
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed
    %%%%%: 2212-block 265
      390: 2212-block 266
      390: 2212-block 267
branch 12 taken 0 (fallthrough)
branch 13 taken 390
    #####: 2213:            MoveDownCurrentLines();
    %%%%%: 2213-block 268
call    0 never executed
     390*: 2214:        else if (!mReadOnly && !alt && ctrl && !shift && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_Slash)))
      390: 2214-block 269
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2214-block 270
branch  2 taken 390 (fallthrough)
branch  3 taken 0
      390: 2214-block 271
branch  4 taken 0 (fallthrough)
branch  5 taken 390
    %%%%%: 2214-block 272
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 2214-block 273
branch  8 never executed (fallthrough)
branch  9 never executed
    %%%%%: 2214-block 274
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed
    %%%%%: 2214-block 277
      390: 2214-block 278
      390: 2214-block 279
branch 14 taken 0 (fallthrough)
branch 15 taken 390
    #####: 2215:            ToggleLineComment();
    %%%%%: 2215-block 280
call    0 never executed
     390*: 2216:        else if (!alt && !ctrl && !shift && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_Insert)))
      390: 2216-block 281
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2216-block 282
branch  2 taken 390 (fallthrough)
branch  3 taken 0
      390: 2216-block 283
branch  4 taken 390 (fallthrough)
branch  5 taken 0
      390: 2216-block 284
branch  6 taken 370 (fallthrough)
branch  7 taken 20
      370: 2216-block 285
call    8 returned 370
call    9 returned 370
branch 10 taken 0 (fallthrough)
branch 11 taken 370
    %%%%%: 2216-block 288
      390: 2216-block 289
      390: 2216-block 290
branch 12 taken 0 (fallthrough)
branch 13 taken 390
    #####: 2217:            mOverwrite ^= true;
    %%%%%: 2217-block 291
     390*: 2218:        else if (isCtrlOnly && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_Insert)))
      390: 2218-block 292
branch  0 taken 0 (fallthrough)
branch  1 taken 390
    %%%%%: 2218-block 293
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 2218-block 296
      390: 2218-block 297
      390: 2218-block 298
branch  6 taken 0 (fallthrough)
branch  7 taken 390
    #####: 2219:            Copy();
    %%%%%: 2219-block 299
call    0 never executed
     390*: 2220:        else if (isShortcut && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_C)))
      390: 2220-block 300
branch  0 taken 0 (fallthrough)
branch  1 taken 390
    %%%%%: 2220-block 301
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 2220-block 304
      390: 2220-block 305
      390: 2220-block 306
branch  6 taken 0 (fallthrough)
branch  7 taken 390
    #####: 2221:            Copy();
    %%%%%: 2221-block 307
call    0 never executed
     390*: 2222:        else if (!mReadOnly && isShiftOnly && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_Insert)))
      390: 2222-block 308
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2222-block 309
branch  2 taken 0 (fallthrough)
branch  3 taken 390
    %%%%%: 2222-block 310
call    4 never executed
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 2222-block 313
      390: 2222-block 314
      390: 2222-block 315
branch  8 taken 0 (fallthrough)
branch  9 taken 390
    #####: 2223:            Paste();
    %%%%%: 2223-block 316
call    0 never executed
     390*: 2224:        else if (!mReadOnly && isShortcut && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_V)))
      390: 2224-block 317
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2224-block 318
branch  2 taken 0 (fallthrough)
branch  3 taken 390
    %%%%%: 2224-block 319
call    4 never executed
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 2224-block 322
      390: 2224-block 323
      390: 2224-block 324
branch  8 taken 0 (fallthrough)
branch  9 taken 390
    #####: 2225:            Paste();
    %%%%%: 2225-block 325
call    0 never executed
     390*: 2226:        else if (isShortcut && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_X)))
      390: 2226-block 326
branch  0 taken 0 (fallthrough)
branch  1 taken 390
    %%%%%: 2226-block 327
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 2226-block 330
      390: 2226-block 331
      390: 2226-block 332
branch  6 taken 0 (fallthrough)
branch  7 taken 390
    #####: 2227:            Cut();
    %%%%%: 2227-block 333
call    0 never executed
     390*: 2228:        else if (isShiftOnly && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_Delete)))
      390: 2228-block 334
branch  0 taken 0 (fallthrough)
branch  1 taken 390
    %%%%%: 2228-block 335
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 2228-block 338
      390: 2228-block 339
      390: 2228-block 340
branch  6 taken 0 (fallthrough)
branch  7 taken 390
    #####: 2229:            Cut();
    %%%%%: 2229-block 341
call    0 never executed
     390*: 2230:        else if (isShortcut && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_A)))
      390: 2230-block 342
branch  0 taken 0 (fallthrough)
branch  1 taken 390
    %%%%%: 2230-block 343
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 2230-block 346
      390: 2230-block 347
      390: 2230-block 348
branch  6 taken 0 (fallthrough)
branch  7 taken 390
    #####: 2231:            SelectAll();
    %%%%%: 2231-block 349
call    0 never executed
     390*: 2232:        else if (isShortcut && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_D)))
      390: 2232-block 350
branch  0 taken 0 (fallthrough)
branch  1 taken 390
    %%%%%: 2232-block 351
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 2232-block 354
      390: 2232-block 355
      390: 2232-block 356
branch  6 taken 0 (fallthrough)
branch  7 taken 390
    #####: 2233:            AddCursorForNextOccurrence();
    %%%%%: 2233-block 357
call    0 never executed
     390*: 2234:        else if (isShortcut && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_G))){
      390: 2234-block 358
branch  0 taken 0 (fallthrough)
branch  1 taken 390
    %%%%%: 2234-block 359
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 2234-block 362
      390: 2234-block 363
      390: 2234-block 364
branch  6 taken 0 (fallthrough)
branch  7 taken 390
    #####: 2235:            keepPopup = true;
    %%%%%: 2235-block 365
        -: 2236:        }
     390*: 2237:        else if (!mReadOnly && !alt && !ctrl && !shift && !super && (ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_Enter)) || ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_KeypadEnter))))
      390: 2237-block 366
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2237-block 367
branch  2 taken 390 (fallthrough)
branch  3 taken 0
      390: 2237-block 368
branch  4 taken 390 (fallthrough)
branch  5 taken 0
      390: 2237-block 369
branch  6 taken 390 (fallthrough)
branch  7 taken 0
      390: 2237-block 370
branch  8 taken 370 (fallthrough)
branch  9 taken 20
      370: 2237-block 371
call   10 returned 370
call   11 returned 370
branch 12 taken 370 (fallthrough)
branch 13 taken 0
      370: 2237-block 374
call   14 returned 370
call   15 returned 370
branch 16 taken 0 (fallthrough)
branch 17 taken 370
    %%%%%: 2237-block 377
      390: 2237-block 378
      390: 2237-block 379
branch 18 taken 0 (fallthrough)
branch 19 taken 390
    #####: 2238:            EnterCharacter('\n', false);
    %%%%%: 2238-block 380
call    0 never executed
     390*: 2239:        else if (!mReadOnly && !alt && !ctrl && !super && ImGui::IsKeyPressed(ImGui::GetKeyIndex(ImGuiKey_Tab)))
      390: 2239-block 381
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2239-block 382
branch  2 taken 390 (fallthrough)
branch  3 taken 0
      390: 2239-block 383
branch  4 taken 390 (fallthrough)
branch  5 taken 0
      390: 2239-block 384
branch  6 taken 370 (fallthrough)
branch  7 taken 20
      370: 2239-block 385
call    8 returned 370
call    9 returned 370
branch 10 taken 0 (fallthrough)
branch 11 taken 370
    %%%%%: 2239-block 388
      390: 2239-block 389
      390: 2239-block 390
branch 12 taken 0 (fallthrough)
branch 13 taken 390
    #####: 2240:            EnterCharacter('\t', shift);
    %%%%%: 2240-block 391
call    0 never executed
     390*: 2241:        if (!mReadOnly && !io.InputQueueCharacters.empty() && ctrl == alt && !super)
      390: 2241-block 392
branch  0 taken 390 (fallthrough)
branch  1 taken 0
      390: 2241-block 393
call    2 returned 390
branch  3 taken 0 (fallthrough)
branch  4 taken 390
    %%%%%: 2241-block 395
branch  5 never executed (fallthrough)
branch  6 never executed
    %%%%%: 2241-block 396
branch  7 never executed (fallthrough)
branch  8 never executed
    %%%%%: 2241-block 397
      390: 2241-block 398
      390: 2241-block 399
branch  9 taken 0 (fallthrough)
branch 10 taken 390
        -: 2242:        {
    #####: 2243:            for (int i = 0; i < io.InputQueueCharacters.Size; i++)
    %%%%%: 2243-block 400
    %%%%%: 2243-block 406
    %%%%%: 2243-block 407
branch  0 never executed
branch  1 never executed (fallthrough)
        -: 2244:            {
    #####: 2245:                auto c = io.InputQueueCharacters[i];
    %%%%%: 2245-block 401
call    0 never executed
    #####: 2246:                if (c != 0 && (c == '\n' || c >= 32))
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 2246-block 403
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 2246-block 404
branch  4 never executed (fallthrough)
branch  5 never executed
    #####: 2247:                    EnterCharacter(c, shift);
    %%%%%: 2247-block 405
call    0 never executed
        -: 2248:            }
    #####: 2249:            io.InputQueueCharacters.resize(0);
    %%%%%: 2249-block 408
call    0 never executed
        -: 2250:        }
        -: 2251:    }
        -: 2252:
     1077: 2253:    if (keepPopup){
     1077: 2253-block 409
branch  0 taken 0 (fallthrough)
branch  1 taken 1077
    #####: 2254:        GoToPopup();
    %%%%%: 2254-block 410
call    0 never executed
        -: 2255:    }
     1077: 2256:}
        -: 2257:
function _ZN10TextEditor17HandleMouseInputsEv called 1077 returned 100% blocks executed 44%
     1077: 2258:void TextEditor::HandleMouseInputs()
        -: 2259:{
     1077: 2260:    ImGuiIO& io = ImGui::GetIO();
     1077: 2260-block 2
call    0 returned 1077
     1077: 2261:    auto shift = io.KeyShift;
    1077*: 2262:    auto ctrl = io.ConfigMacOSXBehaviors ? io.KeySuper : io.KeyCtrl;
branch  0 taken 0 (fallthrough)
branch  1 taken 1077
    %%%%%: 2262-block 4
     1077: 2262-block 5
    1077*: 2263:    auto alt = io.ConfigMacOSXBehaviors ? io.KeyCtrl : io.KeyAlt;
     1077: 2263-block 6
branch  0 taken 0 (fallthrough)
branch  1 taken 1077
    %%%%%: 2263-block 7
     1077: 2263-block 8
        -: 2264:
        -: 2265:    /*
        -: 2266:    Pan with middle mouse button
        -: 2267:    */
     1077: 2268:    mPanning &= ImGui::IsMouseDown(2);
     1077: 2268-block 9
call    0 returned 1077
    1077*: 2269:    if (mPanning && ImGui::IsMouseDragging(2))
branch  0 taken 0 (fallthrough)
branch  1 taken 1077
    %%%%%: 2269-block 11
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed
    %%%%%: 2269-block 13
     1077: 2269-block 14
     1077: 2269-block 15
branch  5 taken 0 (fallthrough)
branch  6 taken 1077
        -: 2270:    {
    #####: 2271:        ImVec2 scroll = { ImGui::GetScrollX(), ImGui::GetScrollY() };
    %%%%%: 2271-block 16
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 2271-block 17
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%: 2271-block 18
call    6 never executed
    #####: 2272:        ImVec2 currentMousePos = ImGui::GetMouseDragDelta(2);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2273:        ImVec2 mouseDelta = {
    #####: 2274:                currentMousePos.x - mLastMousePos.x,
    #####: 2275:                currentMousePos.y - mLastMousePos.y
    #####: 2276:        };
    %%%%%: 2276-block 20
call    0 never executed
    #####: 2277:        ImGui::SetScrollY(scroll.y - mouseDelta.y);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 2278:        ImGui::SetScrollX(scroll.x - mouseDelta.x);
    %%%%%: 2278-block 22
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 2279:        mLastMousePos = currentMousePos;
    %%%%%: 2279-block 23
        -: 2280:    }
        -: 2281:
        -: 2282:    // Mouse left button dragging (=> update selection)
     1077: 2283:    mDraggingSelection &= ImGui::IsMouseDown(0);
     1077: 2283-block 24
call    0 returned 1077
     1077: 2284:    if (mDraggingSelection && ImGui::IsMouseDragging(0))
branch  0 taken 98 (fallthrough)
branch  1 taken 979
       98: 2284-block 26
call    2 returned 98
branch  3 taken 84 (fallthrough)
branch  4 taken 14
       84: 2284-block 28
      993: 2284-block 29
     1077: 2284-block 30
branch  5 taken 84 (fallthrough)
branch  6 taken 993
        -: 2285:    {
       84: 2286:        io.WantCaptureMouse = true;
       84: 2287:        Coordinates cursorCoords = ScreenPosToCoordinates(ImGui::GetMousePos(), !mOverwrite);
       84: 2287-block 31
call    0 returned 84
branch  1 taken 84 (fallthrough)
branch  2 taken 0 (throw)
       84: 2287-block 32
call    3 returned 84
branch  4 taken 84 (fallthrough)
branch  5 taken 0 (throw)
    $$$$$: 2287-block 114
       84: 2288:        SetCursorPosition(cursorCoords, mState.GetLastAddedCursorIndex(), false);
       84: 2288-block 33
call    0 returned 84
call    1 returned 84
branch  2 taken 84 (fallthrough)
branch  3 taken 0 (throw)
        -: 2289:    }
        -: 2290:
     1077: 2291:    if (ImGui::IsWindowHovered())
     1077: 2291-block 36
call    0 returned 1077
branch  1 taken 654 (fallthrough)
branch  2 taken 423
        -: 2292:    {
      654: 2293:        auto click = ImGui::IsMouseClicked(0);
      654: 2293-block 38
call    0 returned 654
      654: 2294:        if (!shift)
branch  0 taken 654 (fallthrough)
branch  1 taken 0
        -: 2295:        {
      654: 2296:            auto doubleClick = ImGui::IsMouseDoubleClicked(0);
      654: 2296-block 40
call    0 returned 654
      654: 2297:            auto t = ImGui::GetTime();
call    0 returned 654
     656*: 2298:            auto tripleClick = click && !doubleClick &&
branch  0 taken 2 (fallthrough)
branch  1 taken 652
        2: 2298-block 43
branch  2 taken 2 (fallthrough)
branch  3 taken 0
    %%%%%: 2298-block 48
      654: 2298-block 49
       2*: 2299:                               (mLastClickTime != -1.0f && (t - mLastClickTime) < io.MouseDoubleClickTime &&
        2: 2299-block 44
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        1: 2299-block 45
branch  2 taken 0 (fallthrough)
branch  3 taken 1
branch  4 never executed (fallthrough)
branch  5 never executed
    #####: 2300:                                Distance(io.MousePos, mLastClickPos) < 0.01f);
    %%%%%: 2300-block 46
call    0 never executed
        -: 2301:
      654: 2302:            if (click)
      654: 2302-block 50
branch  0 taken 2 (fallthrough)
branch  1 taken 652
        2: 2303:                mDraggingSelection = true;
        2: 2303-block 51
        -: 2304:
        -: 2305:            /*
        -: 2306:            Pan with middle mouse button
        -: 2307:            */
        -: 2308:
      654: 2309:            if (ImGui::IsMouseClicked(2))
      654: 2309-block 52
call    0 returned 654
branch  1 taken 0 (fallthrough)
branch  2 taken 654
        -: 2310:            {
    #####: 2311:                mPanning = true;
    #####: 2312:                mLastMousePos = ImGui::GetMouseDragDelta(2);
    %%%%%: 2312-block 54
call    0 never executed
        -: 2313:            }
        -: 2314:
        -: 2315:            /*
        -: 2316:            Left mouse button triple click
        -: 2317:            */
        -: 2318:
      654: 2319:            if (tripleClick)
      654: 2319-block 55
branch  0 taken 0 (fallthrough)
branch  1 taken 654
        -: 2320:            {
    #####: 2321:                if (ctrl)
    %%%%%: 2321-block 56
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2322:                    mState.AddCursor();
    %%%%%: 2322-block 57
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2323:                else
    #####: 2324:                    mState.mCurrentCursor = 0;
    %%%%%: 2324-block 58
        -: 2325:
    #####: 2326:                Coordinates cursorCoords = ScreenPosToCoordinates(ImGui::GetMousePos());
    %%%%%: 2326-block 59
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 2326-block 60
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    $$$$$: 2326-block 116
    #####: 2327:                Coordinates targetCursorPos = cursorCoords.mLine < mLines.size() - 1 ?
    %%%%%: 2327-block 61
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 2328:                                              Coordinates{ cursorCoords.mLine + 1, 0 } :
    #####: 2329:                                              Coordinates{ cursorCoords.mLine, GetLineMaxColumn(cursorCoords.mLine) };
    %%%%%: 2329-block 63
call    0 never executed
    %%%%%: 2329-block 64
call    1 never executed
call    2 never executed
    #####: 2330:                SetSelection({ cursorCoords.mLine, 0 }, targetCursorPos, mState.mCurrentCursor);
    %%%%%: 2330-block 66
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    $$$$$: 2330-block 117
        -: 2331:
    #####: 2332:                mLastClickTime = -1.0f;
    %%%%%: 2332-block 68
        -: 2333:            }
        -: 2334:
        -: 2335:                /*
        -: 2336:                Left mouse button double click
        -: 2337:                */
        -: 2338:
      654: 2339:            else if (doubleClick)
      654: 2339-block 69
branch  0 taken 0 (fallthrough)
branch  1 taken 654
        -: 2340:            {
    #####: 2341:                if (ctrl)
    %%%%%: 2341-block 70
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2342:                    mState.AddCursor();
    %%%%%: 2342-block 71
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2343:                else
    #####: 2344:                    mState.mCurrentCursor = 0;
    %%%%%: 2344-block 72
        -: 2345:
    #####: 2346:                Coordinates cursorCoords = ScreenPosToCoordinates(ImGui::GetMousePos());
    %%%%%: 2346-block 73
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 2346-block 74
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    $$$$$: 2346-block 119
    #####: 2347:                SetSelection(FindWordStart(cursorCoords), FindWordEnd(cursorCoords), mState.mCurrentCursor);
    %%%%%: 2347-block 75
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 2347-block 76
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%: 2347-block 77
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
        -: 2348:
    #####: 2349:                mLastClickTime = (float)ImGui::GetTime();
    %%%%%: 2349-block 78
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 2350:                mLastClickPos = io.MousePos;
    %%%%%: 2350-block 79
        -: 2351:            }
        -: 2352:
        -: 2353:                /*
        -: 2354:                Left mouse button click
        -: 2355:                */
      654: 2356:            else if (click)
      654: 2356-block 80
branch  0 taken 2 (fallthrough)
branch  1 taken 652
        -: 2357:            {
        2: 2358:                if (alt)
        2: 2358-block 81
branch  0 taken 0 (fallthrough)
branch  1 taken 2
    #####: 2359:                    mState.AddCursor();
    %%%%%: 2359-block 82
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        2: 2360:                else if (ctrl){
        2: 2360-block 83
branch  0 taken 0 (fallthrough)
branch  1 taken 2
    #####: 2361:                    SelectLabelDefinition();
    %%%%%: 2361-block 84
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 2362:                    return;
    %%%%%: 2362-block 85
        -: 2363:                }
        -: 2364:                else
        2: 2365:                    mState.mCurrentCursor = 0;
        2: 2365-block 86
        -: 2366:
        -: 2367:                bool isOverLineNumber;
        2: 2368:                Coordinates cursorCoords = ScreenPosToCoordinates(ImGui::GetMousePos(), !mOverwrite, &isOverLineNumber);
        2: 2368-block 87
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2: 2368-block 88
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
    $$$$$: 2368-block 121
        2: 2369:                if (isOverLineNumber)
        2: 2369-block 89
branch  0 taken 0 (fallthrough)
branch  1 taken 2
        -: 2370:                {
    #####: 2371:                    Coordinates targetCursorPos = cursorCoords.mLine < mLines.size() - 1 ?
    %%%%%: 2371-block 90
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 2372:                                                  Coordinates{ cursorCoords.mLine + 1, 0 } :
    #####: 2373:                                                  Coordinates{ cursorCoords.mLine, GetLineMaxColumn(cursorCoords.mLine) };
    %%%%%: 2373-block 92
call    0 never executed
    %%%%%: 2373-block 93
call    1 never executed
call    2 never executed
    #####: 2374:                    SetSelection({ cursorCoords.mLine, 0 }, targetCursorPos, mState.mCurrentCursor);
    %%%%%: 2374-block 95
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%: 2374-block 97
    $$$$$: 2374-block 122
        -: 2375:                }
        -: 2376:                else
        2: 2377:                    SetCursorPosition(cursorCoords, mState.GetLastAddedCursorIndex());
        2: 2377-block 98
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        -: 2378:
        2: 2379:                mLastClickTime = (float)ImGui::GetTime();
        2: 2379-block 100
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2: 2380:                mLastClickPos = io.MousePos;
        2: 2380-block 101
        -: 2381:            }
      652: 2382:            else if (ImGui::IsMouseReleased(0))
      652: 2382-block 102
call    0 returned 652
branch  1 taken 2 (fallthrough)
branch  2 taken 650
        -: 2383:            {
        2: 2384:                mState.SortCursorsFromTopToBottom();
        2: 2384-block 104
call    0 returned 2
        2: 2385:                MergeCursorsIfPossible();
call    0 returned 2
        -: 2386:            }
        -: 2387:        }
    #####: 2388:        else if (shift)
    %%%%%: 2388-block 106
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 2389:        {
    #####: 2390:            if (click)
    %%%%%: 2390-block 107
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 2391:            {
    #####: 2392:                Coordinates newSelection = ScreenPosToCoordinates(ImGui::GetMousePos(), !mOverwrite);
    %%%%%: 2392-block 108
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 2392-block 109
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    $$$$$: 2392-block 125
    #####: 2393:                SetCursorPosition(newSelection, mState.mCurrentCursor, false);
    %%%%%: 2393-block 110
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2394:            }
        -: 2395:        }
        -: 2396:    }
        -: 2397:}
        -: 2398:
function _ZN10TextEditor19UpdateViewVariablesEff called 1077 returned 100% blocks executed 95%
     1077: 2399:void TextEditor::UpdateViewVariables(float aScrollX, float aScrollY)
        -: 2400:{
    1077*: 2401:    mContentHeight = ImGui::GetWindowHeight() - (IsHorizontalScrollbarVisible() ? IMGUI_SCROLLBAR_WIDTH : 0.0f);
     1077: 2401-block 2
call    0 returned 1077
call    1 returned 1077
branch  2 taken 1077 (fallthrough)
branch  3 taken 0
     1077: 2401-block 5
    %%%%%: 2401-block 6
     1077: 2402:    mContentWidth = ImGui::GetWindowWidth() - (IsVerticalScrollbarVisible() ? IMGUI_SCROLLBAR_WIDTH : 0.0f);
     1077: 2402-block 7
call    0 returned 1077
call    1 returned 1077
branch  2 taken 1076 (fallthrough)
branch  3 taken 1
     1076: 2402-block 10
        1: 2402-block 11
        -: 2403:
     1077: 2404:    mVisibleLineCount = Max((int)ceil(mContentHeight / mCharAdvance.y), 0);
     1077: 2404-block 12
call    0 returned 1077
call    1 returned 1077
     1077: 2405:    mFirstVisibleLine = Max((int)(aScrollY / mCharAdvance.y), 0);
call    0 returned 1077
     1077: 2406:    mLastVisibleLine = Max((int)((mContentHeight + aScrollY) / mCharAdvance.y), 0);
call    0 returned 1077
        -: 2407:
     1077: 2408:    mVisibleColumnCount = Max((int)ceil((mContentWidth - Max(mTextStart - aScrollX, 0.0f)) / mCharAdvance.x), 0);
call    0 returned 1077
call    1 returned 1077
call    2 returned 1077
     1077: 2409:    mFirstVisibleColumn = Max((int)(Max(aScrollX - mTextStart, 0.0f) / mCharAdvance.x), 0);
call    0 returned 1077
call    1 returned 1077
     1077: 2410:    mLastVisibleColumn = Max((int)((mContentWidth + aScrollX - mTextStart) / mCharAdvance.x), 0);
call    0 returned 1077
     1077: 2411:}
        -: 2412:
function _ZN10TextEditor25HighlightDebugCurrentLineEi called 110967 returned 100% blocks executed 100%
   110967: 2413:void TextEditor::HighlightDebugCurrentLine(int line) {
   110967: 2414:    mLineToHighlight = line;
   110967: 2415:}
        -: 2416:
function _ZN10TextEditor20HighlightBreakpointsEib called 0 returned 0% blocks executed 0%
    #####: 2417:void TextEditor::HighlightBreakpoints(int line, bool ignoreHighlight) {
    #####: 2418:    if (line == -1){
    %%%%%: 2418-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2419:        mLinesToHighlight.clear();
    %%%%%: 2419-block 3
call    0 never executed
        -: 2420:    }
        -: 2421:
    #####: 2422:    if (!ignoreHighlight){
    %%%%%: 2422-block 4
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2423:        mLinesToHighlight.push_back(line);
    %%%%%: 2423-block 5
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 2423-block 6
        -: 2424:    }
    #####: 2425:}
    %%%%%: 2425-block 7
        -: 2426:
function _ZN10TextEditor15RemoveHighlightEi called 0 returned 0% blocks executed 0%
    #####: 2427:void TextEditor::RemoveHighlight(int line) {
    #####: 2428:    auto idx = std::find(mLinesToHighlight.begin(), mLinesToHighlight.end(), line);
    %%%%%: 2428-block 2
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    #####: 2429:    if (idx != mLinesToHighlight.end()){
    %%%%%: 2429-block 5
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
    #####: 2430:        mLinesToHighlight.erase(idx);
    %%%%%: 2430-block 8
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%: 2430-block 10
    $$$$$: 2430-block 12
        -: 2431:    }
    #####: 2432:}
    %%%%%: 2432-block 11
        -: 2433:
function _ZN10TextEditor6RenderEb called 1077 returned 100% blocks executed 67%
     1077: 2434:void TextEditor::Render(bool aParentIsFocused)
        -: 2435:{
        -: 2436:    /* Compute mCharAdvance regarding to scaled font size (Ctrl + mouse wheel)*/
     1077: 2437:    const float fontWidth = ImGui::GetFont()->CalcTextSizeA(ImGui::GetFontSize(), FLT_MAX, -1.0f, "#", nullptr, nullptr).x;
     1077: 2437-block 2
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077: 2437-block 3
call    3 returned 1077
branch  4 taken 1077 (fallthrough)
branch  5 taken 0 (throw)
     1077: 2437-block 4
call    6 returned 1077
branch  7 taken 1077 (fallthrough)
branch  8 taken 0 (throw)
     1077: 2438:    const float fontHeight = ImGui::GetTextLineHeightWithSpacing();
     1077: 2438-block 5
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077: 2439:    mCharAdvance = ImVec2(fontWidth, fontHeight * mLineSpacing);
     1077: 2439-block 6
call    0 returned 1077
        -: 2440:
        -: 2441:    // Deduce mTextStart by evaluating mLines size (global lineMax) plus two spaces as text width
     1077: 2442:    mTextStart = mLeftMargin;
        -: 2443:    static char lineNumberBuffer[16];
     1077: 2444:    if (mShowLineNumbers)
branch  0 taken 1077 (fallthrough)
branch  1 taken 0
        -: 2445:    {
     1077: 2446:        snprintf(lineNumberBuffer, 16, " %d ", mLines.size());
     1077: 2446-block 8
call    0 returned 1077
     1077: 2447:        mTextStart += ImGui::GetFont()->CalcTextSizeA(ImGui::GetFontSize(), FLT_MAX, -1.0f, lineNumberBuffer, nullptr, nullptr).x;
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077: 2447-block 10
call    3 returned 1077
branch  4 taken 1077 (fallthrough)
branch  5 taken 0 (throw)
     1077: 2447-block 11
call    6 returned 1077
branch  7 taken 1077 (fallthrough)
branch  8 taken 0 (throw)
     1077: 2447-block 12
        -: 2448:    }
        -: 2449:
     1077: 2450:    ImVec2 cursorScreenPos = ImGui::GetCursorScreenPos();
     1077: 2450-block 13
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077: 2451:    mScrollX = ImGui::GetScrollX();
     1077: 2451-block 14
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077: 2452:    mScrollY = ImGui::GetScrollY();
     1077: 2452-block 15
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077: 2453:    UpdateViewVariables(mScrollX, mScrollY);
     1077: 2453-block 16
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
        -: 2454:
     1077: 2455:    int maxColumnLimited = 0;
     1077: 2456:    if (!mLines.empty())
     1077: 2456-block 17
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0
        -: 2457:    {
     1077: 2458:        auto drawList = ImGui::GetWindowDrawList();
     1077: 2458-block 19
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077: 2459:        float spaceSize = ImGui::GetFont()->CalcTextSizeA(ImGui::GetFontSize(), FLT_MAX, -1.0f, " ", nullptr, nullptr).x;
     1077: 2459-block 20
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077: 2459-block 21
call    3 returned 1077
branch  4 taken 1077 (fallthrough)
branch  5 taken 0 (throw)
     1077: 2459-block 22
call    6 returned 1077
branch  7 taken 1077 (fallthrough)
branch  8 taken 0 (throw)
        -: 2460:
    44158: 2461:        for (int lineNo = mFirstVisibleLine; lineNo <= mLastVisibleLine && lineNo < mLines.size(); lineNo++)
     1077: 2461-block 23
    44158: 2461-block 222
branch  0 taken 43081 (fallthrough)
branch  1 taken 1077
    43081: 2461-block 223
call    2 returned 43081
branch  3 taken 43081 (fallthrough)
branch  4 taken 0
    43081: 2461-block 225
     1077: 2461-block 226
    44158: 2461-block 227
branch  5 taken 43081
branch  6 taken 1077 (fallthrough)
        -: 2462:        {
    43081: 2463:            ImVec2 lineStartScreenPos = ImVec2(cursorScreenPos.x, cursorScreenPos.y + lineNo * mCharAdvance.y);
    43081: 2463-block 24
call    0 returned 43081
    43081: 2464:            ImVec2 textScreenPos = ImVec2(lineStartScreenPos.x + mTextStart, lineStartScreenPos.y);
call    0 returned 43081
        -: 2465:
    43081: 2466:            auto& line = mLines[lineNo];
call    0 returned 43081
    43081: 2467:            maxColumnLimited = Max(GetLineMaxColumn(lineNo, mLastVisibleColumn), maxColumnLimited);
call    0 returned 43081
call    1 returned 43081
        -: 2468:
    43081: 2469:            Coordinates lineStartCoord(lineNo, 0);
call    0 returned 43081
    43081: 2470:            Coordinates lineEndCoord(lineNo, maxColumnLimited);
call    0 returned 43081
        -: 2471:
        -: 2472:            // Draw selection for the current line
    86162: 2473:            for (int c = 0; c <= mState.mCurrentCursor; c++)
    43081: 2473-block 88
    86162: 2473-block 89
branch  0 taken 43081
branch  1 taken 43081 (fallthrough)
        -: 2474:            {
    43081: 2475:                float rectStart = -1.0f;
    43081: 2476:                float rectEnd = -1.0f;
    43081: 2477:                ImVec2 lineStartScreenPos = ImVec2(cursorScreenPos.x, cursorScreenPos.y + lineNo * mCharAdvance.y);
    43081: 2477-block 32
call    0 returned 43081
    43081: 2478:                ImVec2 textScreenPos = ImVec2(lineStartScreenPos.x + mTextStart, lineStartScreenPos.y);
call    0 returned 43081
        -: 2479:
        -: 2480:                // Draw background if this is the highlighted line
    43081: 2481:                if (std::find(mLinesToHighlight.begin(), mLinesToHighlight.end(),lineNo) != mLinesToHighlight.end()) {
call    0 returned 43081
call    1 returned 43081
call    2 returned 43081
call    3 returned 43081
branch  4 taken 43081 (fallthrough)
branch  5 taken 0 (throw)
    43081: 2481-block 38
call    6 returned 43081
branch  7 taken 0 (fallthrough)
branch  8 taken 43081
    $$$$$: 2481-block 279
    $$$$$: 2481-block 280
    #####: 2482:                    ImVec2 lineEndScreenPos = ImVec2(lineStartScreenPos.x + mContentWidth, lineStartScreenPos.y + mCharAdvance.y);
    %%%%%: 2482-block 40
call    0 never executed
    #####: 2483:                    drawList->AddRectFilled(lineStartScreenPos, lineEndScreenPos, mPalette[(int)PaletteIndex::DebugBreakpointLine]);
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -: 2484:                }
        -: 2485:
    43081: 2486:                if (lineNo == mLineToHighlight) {
    43081: 2486-block 44
branch  0 taken 253 (fallthrough)
branch  1 taken 42828
      253: 2487:                    ImVec2 lineEndScreenPos = ImVec2(lineStartScreenPos.x + mContentWidth, lineStartScreenPos.y + mCharAdvance.y);
      253: 2487-block 45
call    0 returned 253
      253: 2488:                    drawList->AddRectFilled(lineStartScreenPos, lineEndScreenPos, mPalette[(int)PaletteIndex::DebugCurrentLine]);
call    0 returned 253
call    1 returned 253
branch  2 taken 253 (fallthrough)
branch  3 taken 0 (throw)
        -: 2489:                }
        -: 2490:
    43081: 2491:                Coordinates cursorSelectionStart = mState.mCursors[c].GetSelectionStart();
    43081: 2491-block 49
call    0 returned 43081
call    1 returned 43081
    43081: 2492:                Coordinates cursorSelectionEnd = mState.mCursors[c].GetSelectionEnd();
call    0 returned 43081
call    1 returned 43081
   43081*: 2493:                assert(cursorSelectionStart <= cursorSelectionEnd);
call    0 returned 43081
branch  1 taken 0 (fallthrough)
branch  2 taken 43081
    %%%%%: 2493-block 55
call    3 never executed
        -: 2494:
    43081: 2495:                if (cursorSelectionStart <= lineEndCoord)
    43081: 2495-block 56
call    0 returned 43081
branch  1 taken 35199 (fallthrough)
branch  2 taken 7882
    35199: 2496:                    rectStart = cursorSelectionStart > lineStartCoord ? TextDistanceToLineStart(cursorSelectionStart) : 0.0f;
    35199: 2496-block 58
call    0 returned 35199
branch  1 taken 742 (fallthrough)
branch  2 taken 34457
      742: 2496-block 60
call    3 returned 742
branch  4 taken 742 (fallthrough)
branch  5 taken 0 (throw)
      742: 2496-block 61
    34457: 2496-block 62
    35199: 2496-block 63
    43081: 2497:                if (cursorSelectionEnd > lineStartCoord)
    43081: 2497-block 64
call    0 returned 43081
branch  1 taken 9731 (fallthrough)
branch  2 taken 33350
     9731: 2498:                    rectEnd = TextDistanceToLineStart(cursorSelectionEnd < lineEndCoord ? cursorSelectionEnd : lineEndCoord);
     9731: 2498-block 66
call    0 returned 9731
branch  1 taken 742 (fallthrough)
branch  2 taken 8989
      742: 2498-block 68
     8989: 2498-block 69
     9731: 2498-block 70
call    3 returned 9731
branch  4 taken 9731 (fallthrough)
branch  5 taken 0 (throw)
     9731: 2498-block 71
    43081: 2499:                if (cursorSelectionEnd.mLine > lineNo || cursorSelectionEnd.mLine == lineNo && cursorSelectionEnd > lineEndCoord)
    43081: 2499-block 72
branch  0 taken 34092 (fallthrough)
branch  1 taken 8989
    34092: 2499-block 73
branch  2 taken 1077 (fallthrough)
branch  3 taken 33015
     1077: 2499-block 74
call    4 returned 1077
branch  5 taken 0 (fallthrough)
branch  6 taken 1077
     8989: 2499-block 76
    34092: 2499-block 77
    43081: 2499-block 78
branch  7 taken 8989 (fallthrough)
branch  8 taken 34092
     8989: 2500:                    rectEnd += mCharAdvance.x;
     8989: 2500-block 79
        -: 2501:
    43081: 2502:                if (rectStart != -1 && rectEnd != -1 && rectStart < rectEnd)
    43081: 2502-block 80
branch  0 taken 35199 (fallthrough)
branch  1 taken 7882
    35199: 2502-block 81
branch  2 taken 1849 (fallthrough)
branch  3 taken 33350
     1849: 2502-block 82
branch  4 taken 1391 (fallthrough)
branch  5 taken 458
     1391: 2503:                    drawList->AddRectFilled(
call    0 returned 1391
branch  1 taken 1391 (fallthrough)
branch  2 taken 0 (throw)
     1391: 2504:                            ImVec2{ lineStartScreenPos.x + mTextStart + rectStart, lineStartScreenPos.y },
call    0 returned 1391
    $$$$$: 2504-block 283
     2782: 2505:                            ImVec2{ lineStartScreenPos.x + mTextStart + rectEnd, lineStartScreenPos.y + mCharAdvance.y },
call    0 returned 1391
     1391: 2505-block 87
    $$$$$: 2505-block 284
     1391: 2506:                            mPalette[(int)PaletteIndex::Selection]);
     1391: 2506-block 83
call    0 returned 1391
        -: 2507:            }
        -: 2508:
        -: 2509:            // Draw line number (right aligned)
    43081: 2510:            if (mShowLineNumbers)
    43081: 2510-block 90
branch  0 taken 43081 (fallthrough)
branch  1 taken 0
        -: 2511:            {
    43081: 2512:                snprintf(lineNumberBuffer, 16, "%d  ", lineNo + 1);
    43081: 2513:                float lineNoWidth = ImGui::GetFont()->CalcTextSizeA(ImGui::GetFontSize(), FLT_MAX, -1.0f, lineNumberBuffer, nullptr, nullptr).x;
    43081: 2513-block 91
call    0 returned 43081
branch  1 taken 43081 (fallthrough)
branch  2 taken 0 (throw)
    43081: 2513-block 92
call    3 returned 43081
branch  4 taken 43081 (fallthrough)
branch  5 taken 0 (throw)
    43081: 2513-block 93
call    6 returned 43081
branch  7 taken 43081 (fallthrough)
branch  8 taken 0 (throw)
    43081: 2514:                drawList->AddText(ImVec2(lineStartScreenPos.x + mTextStart - lineNoWidth, lineStartScreenPos.y), mPalette[(int)PaletteIndex::LineNumber], lineNumberBuffer);
    43081: 2514-block 94
call    0 returned 43081
call    1 returned 43081
call    2 returned 43081
branch  3 taken 43081 (fallthrough)
branch  4 taken 0 (throw)
    43081: 2514-block 97
    $$$$$: 2514-block 286
        -: 2515:            }
        -: 2516:
    43081: 2517:            std::vector<Coordinates> cursorCoordsInThisLine;
    86162: 2518:            for (int c = 0; c <= mState.mCurrentCursor; c++)
    43081: 2518-block 98
    43081: 2518-block 103
    86162: 2518-block 104
branch  0 taken 43081
branch  1 taken 43081 (fallthrough)
        -: 2519:            {
    43081: 2520:                if (mState.mCursors[c].mInteractiveEnd.mLine == lineNo)
    43081: 2520-block 99
call    0 returned 43081
branch  1 taken 1077 (fallthrough)
branch  2 taken 42004
     1077: 2521:                    cursorCoordsInThisLine.push_back(mState.mCursors[c].mInteractiveEnd);
     1077: 2521-block 101
call    0 returned 1077
call    1 returned 1077
branch  2 taken 1077 (fallthrough)
branch  3 taken 0 (throw)
        -: 2522:            }
    43081: 2523:            if (cursorCoordsInThisLine.size() > 0)
    43081: 2523-block 105
call    0 returned 43081
branch  1 taken 1077 (fallthrough)
branch  2 taken 42004
        -: 2524:            {
     1077: 2525:                bool focused = ImGui::IsWindowFocused() || aParentIsFocused;
     1077: 2525-block 107
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0 (throw)
     1077: 2525-block 108
branch  3 taken 687 (fallthrough)
branch  4 taken 390
      687: 2525-block 109
branch  5 taken 0 (fallthrough)
branch  6 taken 687
      390: 2525-block 110
      687: 2525-block 111
        -: 2526:
        -: 2527:                // Render the cursors
     1077: 2528:                if (focused)
     1077: 2528-block 112
branch  0 taken 390 (fallthrough)
branch  1 taken 687
        -: 2529:                {
      780: 2530:                    for (const auto& cursorCoords : cursorCoordsInThisLine)
      390: 2530-block 113
call    0 returned 390
call    1 returned 390
      390: 2530-block 115
call    2 returned 390
      390: 2530-block 139
call    3 returned 390
      780: 2530-block 140
call    4 returned 780
branch  5 taken 390
branch  6 taken 390 (fallthrough)
        -: 2531:                    {
      390: 2532:                        float width = 1.0f;
      390: 2533:                        auto cindex = GetCharacterIndexR(cursorCoords);
call    0 returned 390
      390: 2534:                        float cx = TextDistanceToLineStart(cursorCoords);
call    0 returned 390
branch  1 taken 390 (fallthrough)
branch  2 taken 0 (throw)
        -: 2535:
     390*: 2536:                        if (mOverwrite && cindex < (int)line.size())
      390: 2536-block 118
branch  0 taken 0 (fallthrough)
branch  1 taken 390
    %%%%%: 2536-block 119
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed
    %%%%%: 2536-block 121
      390: 2536-block 122
      390: 2536-block 123
branch  5 taken 0 (fallthrough)
branch  6 taken 390
        -: 2537:                        {
    #####: 2538:                            if (line[cindex].mChar == '\t')
    %%%%%: 2538-block 124
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -: 2539:                            {
    #####: 2540:                                auto x = (1.0f + std::floor((1.0f + cx) / (float(mTabSize) * spaceSize))) * (float(mTabSize) * spaceSize);
    %%%%%: 2540-block 126
call    0 never executed
    #####: 2541:                                width = x - cx;
        -: 2542:                            }
        -: 2543:                            else
    #####: 2544:                                width = mCharAdvance.x;
    %%%%%: 2544-block 128
        -: 2545:                        }
      390: 2546:                        ImVec2 cstart(textScreenPos.x + cx, lineStartScreenPos.y);
      390: 2546-block 129
call    0 returned 390
      390: 2547:                        ImVec2 cend(textScreenPos.x + cx + width, lineStartScreenPos.y + mCharAdvance.y);
call    0 returned 390
      390: 2548:                        drawList->AddRectFilled(cstart, cend, mPalette[(int)PaletteIndex::Cursor]);
call    0 returned 390
call    1 returned 390
branch  2 taken 390 (fallthrough)
branch  3 taken 0 (throw)
      390: 2549:                        if (mCursorOnBracket)
      390: 2549-block 133
branch  0 taken 0 (fallthrough)
branch  1 taken 390
        -: 2550:                        {
    #####: 2551:                            ImVec2 topLeft = { cstart.x, lineStartScreenPos.y + fontHeight + 1.0f };
    %%%%%: 2551-block 134
call    0 never executed
    #####: 2552:                            ImVec2 bottomRight = { topLeft.x + mCharAdvance.x, topLeft.y + 1.0f };
call    0 never executed
    #####: 2553:                            drawList->AddRectFilled(topLeft, bottomRight, mPalette[(int)PaletteIndex::Cursor]);
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -: 2554:                        }
        -: 2555:                    }
        -: 2556:                }
        -: 2557:            }
        -: 2558:
        -: 2559:            // Render colorized text
    43081: 2560:            static std::string glyphBuffer;
    43081: 2560-block 143
branch  0 taken 1 (fallthrough)
branch  1 taken 43080
        1: 2560-block 144
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0
        1: 2560-block 146
call    5 returned 1
call    6 returned 1
    43081: 2561:            int charIndex = GetFirstVisibleCharacterIndex(lineNo);
    43081: 2561-block 148
call    0 returned 43081
    43081: 2562:            int column = mFirstVisibleColumn; // can be in the middle of tab character
   585889: 2563:            while (charIndex < mLines[lineNo].size() && column <= mLastVisibleColumn)
   585889: 2563-block 213
call    0 returned 585889
call    1 returned 585889
branch  2 taken 542808 (fallthrough)
branch  3 taken 43081
   542808: 2563-block 216
branch  4 taken 542808 (fallthrough)
branch  5 taken 0
   542808: 2563-block 217
    43081: 2563-block 218
   585889: 2563-block 219
branch  6 taken 542808
branch  7 taken 43081 (fallthrough)
        -: 2564:            {
   542808: 2565:                auto& glyph = line[charIndex];
   542808: 2565-block 150
call    0 returned 542808
   542808: 2566:                auto color = GetGlyphColor(glyph);
call    0 returned 542808
   542808: 2567:                ImVec2 targetGlyphPos = { lineStartScreenPos.x + mTextStart + TextDistanceToLineStart({lineNo, column}, false), lineStartScreenPos.y };
call    0 returned 542808
call    1 returned 542808
branch  2 taken 542808 (fallthrough)
branch  3 taken 0 (throw)
   542808: 2567-block 154
call    4 returned 542808
    $$$$$: 2567-block 290
        -: 2568:
   542808: 2569:                if (glyph.mChar == '\t')
branch  0 taken 19386 (fallthrough)
branch  1 taken 523422
        -: 2570:                {
    19386: 2571:                    if (mShowWhitespaces)
    19386: 2571-block 156
branch  0 taken 0 (fallthrough)
branch  1 taken 19386
        -: 2572:                    {
    #####: 2573:                        ImVec2 p1, p2, p3, p4;
        -: 2574:
    #####: 2575:                        const auto s = ImGui::GetFontSize();
    %%%%%: 2575-block 157
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 2576:                        const auto x1 = targetGlyphPos.x + mCharAdvance.x * 0.3f;
    #####: 2577:                        const auto y = targetGlyphPos.y + fontHeight * 0.5f;
        -: 2578:
    #####: 2579:                        if (mShortTabs)
    %%%%%: 2579-block 158
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 2580:                        {
    #####: 2581:                            const auto x2 = targetGlyphPos.x + mCharAdvance.x;
    #####: 2582:                            p1 = ImVec2(x1, y);
    %%%%%: 2582-block 159
call    0 never executed
    #####: 2583:                            p2 = ImVec2(x2, y);
call    0 never executed
    #####: 2584:                            p3 = ImVec2(x2 - s * 0.16f, y - s * 0.16f);
call    0 never executed
    #####: 2585:                            p4 = ImVec2(x2 - s * 0.16f, y + s * 0.16f);
call    0 never executed
        -: 2586:                        }
        -: 2587:                        else
        -: 2588:                        {
    #####: 2589:                            const auto x2 = targetGlyphPos.x + TabSizeAtColumn(column) * mCharAdvance.x - mCharAdvance.x * 0.3f;
    %%%%%: 2589-block 164
call    0 never executed
    #####: 2590:                            p1 = ImVec2(x1, y);
call    0 never executed
    #####: 2591:                            p2 = ImVec2(x2, y);
call    0 never executed
    #####: 2592:                            p3 = ImVec2(x2 - s * 0.2f, y - s * 0.2f);
call    0 never executed
    #####: 2593:                            p4 = ImVec2(x2 - s * 0.2f, y + s * 0.2f);
call    0 never executed
        -: 2594:                        }
        -: 2595:
    #####: 2596:                        drawList->AddLine(p1, p2, mPalette[(int)PaletteIndex::ControlCharacter]);
    %%%%%: 2596-block 170
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####: 2597:                        drawList->AddLine(p2, p3, mPalette[(int)PaletteIndex::ControlCharacter]);
    %%%%%: 2597-block 172
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####: 2598:                        drawList->AddLine(p2, p4, mPalette[(int)PaletteIndex::ControlCharacter]);
    %%%%%: 2598-block 174
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -: 2599:                    }
        -: 2600:                }
   523422: 2601:                else if (glyph.mChar == ' ')
   523422: 2601-block 177
branch  0 taken 95853 (fallthrough)
branch  1 taken 427569
        -: 2602:                {
    95853: 2603:                    if (mShowWhitespaces)
    95853: 2603-block 178
branch  0 taken 0 (fallthrough)
branch  1 taken 95853
        -: 2604:                    {
    #####: 2605:                        const auto s = ImGui::GetFontSize();
    %%%%%: 2605-block 179
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 2606:                        const auto x = targetGlyphPos.x + spaceSize * 0.5f;
    #####: 2607:                        const auto y = targetGlyphPos.y + s * 0.5f;
    #####: 2608:                        drawList->AddCircleFilled(ImVec2(x, y), 1.5f, mPalette[(int)PaletteIndex::ControlCharacter], 4);
    %%%%%: 2608-block 180
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    %%%%%: 2608-block 183
    $$$$$: 2608-block 292
        -: 2609:                    }
        -: 2610:                }
        -: 2611:                else
        -: 2612:                {
   427569: 2613:                    int seqLength = UTF8CharLength(glyph.mChar);
   427569: 2613-block 184
call    0 returned 427569
  427569*: 2614:                    if (mCursorOnBracket && seqLength == 1 && mMatchingBracketCoords == Coordinates{ lineNo, column })
branch  0 taken 0 (fallthrough)
branch  1 taken 427569
    %%%%%: 2614-block 186
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%: 2614-block 187
call    4 never executed
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%: 2614-block 190
   427569: 2614-block 191
   427569: 2614-block 192
branch  8 taken 0 (fallthrough)
branch  9 taken 427569
        -: 2615:                    {
    #####: 2616:                        ImVec2 topLeft = { targetGlyphPos.x, targetGlyphPos.y + fontHeight + 1.0f };
    %%%%%: 2616-block 193
call    0 never executed
    #####: 2617:                        ImVec2 bottomRight = { topLeft.x + mCharAdvance.x, topLeft.y + 1.0f };
call    0 never executed
    #####: 2618:                        drawList->AddRectFilled(topLeft, bottomRight, mPalette[(int)PaletteIndex::Cursor]);
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -: 2619:                    }
   427569: 2620:                    glyphBuffer.clear();
   427569: 2620-block 198
call    0 returned 427569
   855138: 2621:                    for (int i = 0; i < seqLength; i++)
   427569: 2621-block 202
   855138: 2621-block 203
branch  0 taken 427569
branch  1 taken 427569 (fallthrough)
   427569: 2622:                        glyphBuffer.push_back(line[charIndex + i].mChar);
   427569: 2622-block 200
call    0 returned 427569
call    1 returned 427569
branch  2 taken 427569 (fallthrough)
branch  3 taken 0 (throw)
   427569: 2623:                    drawList->AddText(targetGlyphPos, color, glyphBuffer.c_str());
   427569: 2623-block 204
call    0 returned 427569
call    1 returned 427569
branch  2 taken 427569 (fallthrough)
branch  3 taken 0 (throw)
        -: 2624:                }
        -: 2625:
   542808: 2626:                MoveCharIndexAndColumn(lineNo, charIndex, column);
   542808: 2626-block 206
call    0 returned 542808
        -: 2627:
   542808: 2628:                if (mLines.size() != mLinesSize){
call    0 returned 542808
branch  1 taken 1 (fallthrough)
branch  2 taken 542807
        1: 2629:                    mLinesSize = mLines.size();
        1: 2629-block 209
call    0 returned 1
        1: 2630:                    if (CreateLabelLineMap!= nullptr){
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1: 2631:                        CreateLabelLineMap(labelLineNoMap);
        1: 2631-block 211
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -: 2632:                    }
        -: 2633:                }
        -: 2634:
        -: 2635:            }
    43081: 2636:        }
    43081: 2636-block 220
call    0 returned 43081
    $$$$$: 2636-block 295
call    1 never executed
        -: 2637:    }
     1077: 2638:    mCurrentSpaceHeight = (mLines.size() + Min(mVisibleLineCount - 1, (int)mLines.size())) * mCharAdvance.y;
     1077: 2638-block 229
call    0 returned 1077
call    1 returned 1077
call    2 returned 1077
     1077: 2639:    mCurrentSpaceWidth = Max((maxColumnLimited + Min(mVisibleColumnCount - 1, maxColumnLimited)) * mCharAdvance.x, mCurrentSpaceWidth);
call    0 returned 1077
call    1 returned 1077
        -: 2640:
     1077: 2641:    ImGui::SetCursorPos(ImVec2(0, 0));
call    0 returned 1077
call    1 returned 1077
branch  2 taken 1077 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$: 2641-block 299
     1077: 2642:    ImGui::Dummy(ImVec2(mCurrentSpaceWidth, mCurrentSpaceHeight));
     1077: 2642-block 236
call    0 returned 1077
call    1 returned 1077
branch  2 taken 1077 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$: 2642-block 300
        -: 2643:
     1077: 2644:    if (mEnsureCursorVisible > -1)
     1077: 2644-block 238
branch  0 taken 17 (fallthrough)
branch  1 taken 1060
        -: 2645:    {
      34*: 2646:        for (int i = 0; i < (mEnsureCursorVisibleStartToo ? 2 : 1); i++) // first pass for interactive end and second pass for interactive start
       17: 2646-block 239
       17: 2646-block 259
       34: 2646-block 260
branch  0 taken 0 (fallthrough)
branch  1 taken 34
    %%%%%: 2646-block 261
       34: 2646-block 262
       34: 2646-block 263
branch  2 taken 17
branch  3 taken 17 (fallthrough)
        -: 2647:        {
      17*: 2648:            if (i) UpdateViewVariables(mScrollX, mScrollY); // second pass depends on changes made in first pass
       17: 2648-block 240
branch  0 taken 0 (fallthrough)
branch  1 taken 17
    %%%%%: 2648-block 241
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
       17: 2649:            Coordinates targetCoords = GetActualCursorCoordinates(mEnsureCursorVisible, i); // cursor selection end or start
       17: 2649-block 242
call    0 returned 17
branch  1 taken 17 (fallthrough)
branch  2 taken 0 (throw)
       17: 2650:            if (targetCoords.mLine <= mFirstVisibleLine)
       17: 2650-block 243
branch  0 taken 0 (fallthrough)
branch  1 taken 17
        -: 2651:            {
    #####: 2652:                float targetScroll = std::max(0.0f, (targetCoords.mLine - 0.5f) * mCharAdvance.y);
    %%%%%: 2652-block 244
call    0 never executed
    #####: 2653:                if (targetScroll < mScrollY)
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2654:                    ImGui::SetScrollY(targetScroll);
    %%%%%: 2654-block 246
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2655:            }
       17: 2656:            if (targetCoords.mLine >= mLastVisibleLine)
       17: 2656-block 247
branch  0 taken 0 (fallthrough)
branch  1 taken 17
        -: 2657:            {
    #####: 2658:                float targetScroll = std::max(0.0f, (targetCoords.mLine + 1.5f) * mCharAdvance.y - mContentHeight);
    %%%%%: 2658-block 248
call    0 never executed
    #####: 2659:                if (targetScroll > mScrollY)
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2660:                    ImGui::SetScrollY(targetScroll);
    %%%%%: 2660-block 250
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2661:            }
       17: 2662:            if (targetCoords.mColumn <= mFirstVisibleColumn)
       17: 2662-block 251
branch  0 taken 0 (fallthrough)
branch  1 taken 17
        -: 2663:            {
    #####: 2664:                float targetScroll = std::max(0.0f, mTextStart + (targetCoords.mColumn - 0.5f) * mCharAdvance.x);
    %%%%%: 2664-block 252
call    0 never executed
    #####: 2665:                if (targetScroll < mScrollX)
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2666:                    ImGui::SetScrollX(mScrollX = targetScroll);
    %%%%%: 2666-block 254
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2667:            }
       17: 2668:            if (targetCoords.mColumn >= mLastVisibleColumn)
       17: 2668-block 255
branch  0 taken 0 (fallthrough)
branch  1 taken 17
        -: 2669:            {
    #####: 2670:                float targetScroll = std::max(0.0f, mTextStart + (targetCoords.mColumn + 0.5f) * mCharAdvance.x - mContentWidth);
    %%%%%: 2670-block 256
call    0 never executed
    #####: 2671:                if (targetScroll > mScrollX)
branch  0 never executed (fallthrough)
branch  1 never executed
    #####: 2672:                    ImGui::SetScrollX(mScrollX = targetScroll);
    %%%%%: 2672-block 258
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2673:            }
        -: 2674:        }
       17: 2675:        mEnsureCursorVisible = -1;
       17: 2675-block 264
        -: 2676:    }
     1077: 2677:    if (mScrollToTop)
     1077: 2677-block 265
branch  0 taken 1 (fallthrough)
branch  1 taken 1076
        -: 2678:    {
        1: 2679:        ImGui::SetScrollY(0.0f);
        1: 2679-block 266
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1: 2680:        mScrollToTop = false;
        1: 2680-block 267
        -: 2681:    }
     1077: 2682:    if (mSetViewAtLine > -1)
     1077: 2682-block 268
branch  0 taken 0 (fallthrough)
branch  1 taken 1077
        -: 2683:    {
        -: 2684:        float targetScroll;
    #####: 2685:        switch (mSetViewAtLineMode)
    %%%%%: 2685-block 269
branch  0 never executed
branch  1 never executed
branch  2 never executed
        -: 2686:        {
    #####: 2687:            default:
        -: 2688:            case SetViewAtLineMode::FirstVisibleLine:
    #####: 2689:                targetScroll = std::max(0.0f, (float)mSetViewAtLine * mCharAdvance.y);
    %%%%%: 2689-block 270
call    0 never executed
    #####: 2690:                break;
    #####: 2691:            case SetViewAtLineMode::LastVisibleLine:
    #####: 2692:                targetScroll = std::max(0.0f, (float)(mSetViewAtLine - (mLastVisibleLine - mFirstVisibleLine)) * mCharAdvance.y);
    %%%%%: 2692-block 272
call    0 never executed
    #####: 2693:                break;
    #####: 2694:            case SetViewAtLineMode::Centered:
    #####: 2695:                targetScroll = std::max(0.0f, ((float)mSetViewAtLine - (float)(mLastVisibleLine - mFirstVisibleLine) * 0.5f) * mCharAdvance.y);
    %%%%%: 2695-block 274
call    0 never executed
    #####: 2696:                break;
        -: 2697:        }
    #####: 2698:        ImGui::SetScrollY(targetScroll);
    %%%%%: 2698-block 276
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####: 2699:        mSetViewAtLine = -1;
    %%%%%: 2699-block 277
        -: 2700:    }
     1077: 2701:}
     1077: 2701-block 278
        -: 2702:
function _ZN10TextEditor23OnCursorPositionChangedEv called 86 returned 100% blocks executed 88%
       86: 2703:void TextEditor::OnCursorPositionChanged()
        -: 2704:{
       86: 2705:    if (mState.mCurrentCursor == 0 && !mState.mCursors[0].HasSelection()) // only one cursor without selection
       86: 2705-block 2
branch  0 taken 86 (fallthrough)
branch  1 taken 0
       86: 2705-block 3
call    2 returned 86
call    3 returned 86
branch  4 taken 3 (fallthrough)
branch  5 taken 83
        3: 2705-block 6
       83: 2705-block 7
       86: 2705-block 8
branch  6 taken 3 (fallthrough)
branch  7 taken 83
        3: 2706:        mCursorOnBracket = FindMatchingBracket(mState.mCursors[0].mInteractiveEnd.mLine,
call    0 returned 3
call    1 returned 3
        3: 2707:                                               GetCharacterIndexR(mState.mCursors[0].mInteractiveEnd), mMatchingBracketCoords);
        3: 2707-block 9
call    0 returned 3
call    1 returned 3
        -: 2708:    else
       83: 2709:        mCursorOnBracket = false;
       83: 2709-block 14
        -: 2710:
       86: 2711:    if (!mDraggingSelection)
       86: 2711-block 15
branch  0 taken 0 (fallthrough)
branch  1 taken 86
        -: 2712:    {
    #####: 2713:        mState.SortCursorsFromTopToBottom();
    %%%%%: 2713-block 16
call    0 never executed
    #####: 2714:        MergeCursorsIfPossible();
call    0 never executed
        -: 2715:    }
       86: 2716:}
        -: 2717:
function _ZN10TextEditor13OnLineChangedEbiiib called 0 returned 0% blocks executed 0%
    #####: 2718:void TextEditor::OnLineChanged(bool aBeforeChange, int aLine, int aColumn, int aCharCount, bool aDeleted) // adjusts cursor position when other cursor writes/deletes in the same line
        -: 2719:{
    #####: 2720:    static std::unordered_map<int, int> cursorCharIndices;
    %%%%%: 2720-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 2720-block 3
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed
    %%%%%: 2720-block 5
call    5 never executed
call    6 never executed
call    7 never executed
    #####: 2721:    if (aBeforeChange)
    %%%%%: 2721-block 8
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 2722:    {
    #####: 2723:        cursorCharIndices.clear();
    %%%%%: 2723-block 9
call    0 never executed
    #####: 2724:        for (int c = 0; c <= mState.mCurrentCursor; c++)
    %%%%%: 2724-block 33
    %%%%%: 2724-block 34
branch  0 never executed
branch  1 never executed (fallthrough)
        -: 2725:        {
    #####: 2726:            if (mState.mCursors[c].mInteractiveEnd.mLine == aLine && // cursor is at the line
    %%%%%: 2726-block 11
call    0 never executed
    #####: 2727:                mState.mCursors[c].mInteractiveEnd.mColumn > aColumn && // cursor is to the right of changing part
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 2727-block 13
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed
    %%%%%: 2727-block 21
    %%%%%: 2727-block 22
    #####: 2728:                mState.mCursors[c].GetSelectionEnd() == mState.mCursors[c].GetSelectionStart()) // cursor does not have a selection
    %%%%%: 2728-block 15
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
    %%%%%: 2728-block 23
branch  5 never executed (fallthrough)
branch  6 never executed
        -: 2729:            {
    #####: 2730:                cursorCharIndices[c] = GetCharacterIndexR({ aLine, mState.mCursors[c].mInteractiveEnd.mColumn });
    %%%%%: 2730-block 24
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    $$$$$: 2730-block 47
    #####: 2731:                cursorCharIndices[c] += aDeleted ? -aCharCount : aCharCount;
    %%%%%: 2731-block 28
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 2731-block 29
branch  3 never executed (fallthrough)
branch  4 never executed
    %%%%%: 2731-block 30
    %%%%%: 2731-block 31
    %%%%%: 2731-block 32
        -: 2732:            }
        -: 2733:        }
        -: 2734:    }
        -: 2735:    else
        -: 2736:    {
    #####: 2737:        for (auto& item : cursorCharIndices)
    %%%%%: 2737-block 36
call    0 never executed
call    1 never executed
    %%%%%: 2737-block 38
call    2 never executed
    %%%%%: 2737-block 43
call    3 never executed
branch  4 never executed
branch  5 never executed (fallthrough)
    #####: 2738:            SetCursorPosition({ aLine, GetCharacterColumn(aLine, item.second) }, item.first);
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    %%%%%: 2738-block 42
call    5 never executed
    $$$$$: 2738-block 49
        -: 2739:    }
    #####: 2740:}
    %%%%%: 2740-block 46
        -: 2741:
function _ZN10TextEditor22MergeCursorsIfPossibleEv called 2 returned 100% blocks executed 31%
        2: 2742:void TextEditor::MergeCursorsIfPossible()
        -: 2743:{
        -: 2744:    // requires the cursors to be sorted from top to bottom
        2: 2745:    std::unordered_set<int> cursorsToDelete;
        2: 2745-block 2
call    0 returned 2
        2: 2746:    if (AnyCursorHasSelection())
call    0 returned 2
branch  1 taken 1 (fallthrough)
branch  2 taken 1
        -: 2747:    {
        -: 2748:        // merge cursors if they overlap
       1*: 2749:        for (int c = mState.mCurrentCursor; c > 0; c--)// iterate backwards through pairs
        1: 2749-block 5
    %%%%%: 2749-block 27
        1: 2749-block 28
branch  0 taken 0
branch  1 taken 1 (fallthrough)
        -: 2750:        {
    #####: 2751:            int pc = c - 1; // pc for previous cursor
        -: 2752:
    #####: 2753:            bool pcContainsC = mState.mCursors[pc].GetSelectionEnd() >= mState.mCursors[c].GetSelectionEnd();
    %%%%%: 2753-block 6
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
    #####: 2754:            bool pcContainsStartOfC = mState.mCursors[pc].GetSelectionEnd() > mState.mCursors[c].GetSelectionStart();
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
        -: 2755:
    #####: 2756:            if (pcContainsC)
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 2757:            {
    #####: 2758:                cursorsToDelete.insert(c);
    %%%%%: 2758-block 17
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2759:            }
    #####: 2760:            else if (pcContainsStartOfC)
    %%%%%: 2760-block 18
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 2761:            {
    #####: 2762:                Coordinates pcStart = mState.mCursors[pc].GetSelectionStart();
    %%%%%: 2762-block 19
call    0 never executed
call    1 never executed
    #####: 2763:                Coordinates cEnd = mState.mCursors[c].GetSelectionEnd();
call    0 never executed
call    1 never executed
    #####: 2764:                mState.mCursors[pc].mInteractiveEnd = cEnd;
call    0 never executed
    #####: 2765:                mState.mCursors[pc].mInteractiveStart = pcStart;
call    0 never executed
    #####: 2766:                cursorsToDelete.insert(c);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2767:            }
        -: 2768:        }
        -: 2769:    }
        -: 2770:    else
        -: 2771:    {
        -: 2772:        // merge cursors if they are at the same position
       1*: 2773:        for (int c = mState.mCurrentCursor; c > 0; c--)// iterate backwards through pairs
        1: 2773-block 30
    %%%%%: 2773-block 36
        1: 2773-block 37
branch  0 taken 0
branch  1 taken 1 (fallthrough)
        -: 2774:        {
    #####: 2775:            int pc = c - 1;
    #####: 2776:            if (mState.mCursors[pc].mInteractiveEnd == mState.mCursors[c].mInteractiveEnd)
    %%%%%: 2776-block 31
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed
    #####: 2777:                cursorsToDelete.insert(c);
    %%%%%: 2777-block 35
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -: 2778:        }
        -: 2779:    }
        4: 2780:    for (int c = mState.mCurrentCursor; c > -1; c--)// iterate backwards through each of them
        2: 2780-block 39
        2: 2780-block 49
        4: 2780-block 50
branch  0 taken 2
branch  1 taken 2 (fallthrough)
        -: 2781:    {
        2: 2782:        if (cursorsToDelete.find(c) != cursorsToDelete.end())
        2: 2782-block 40
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2: 2782-block 42
call    4 returned 2
branch  5 taken 0 (fallthrough)
branch  6 taken 2
    $$$$$: 2782-block 57
    $$$$$: 2782-block 58
    #####: 2783:            mState.mCursors.erase(mState.mCursors.begin() + c);
    %%%%%: 2783-block 44
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%: 2783-block 48
    $$$$$: 2783-block 59
    $$$$$: 2783-block 60
    $$$$$: 2783-block 61
        -: 2784:    }
        2: 2785:    mState.mCurrentCursor -= cursorsToDelete.size();
        2: 2785-block 51
call    0 returned 2
        2: 2786:}
call    0 returned 2
    $$$$$: 2786-block 63
call    1 never executed
        -: 2787:
function _ZN10TextEditor7AddUndoERNS_10UndoRecordE called 0 returned 0% blocks executed 0%
    #####: 2788:void TextEditor::AddUndo(UndoRecord& aValue)
        -: 2789:{
    #####: 2790:    assert(!mReadOnly);
    %%%%%: 2790-block 2
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%: 2790-block 3
call    2 never executed
    #####: 2791:    mUndoBuffer.resize((size_t)(mUndoIndex + 1));
    %%%%%: 2791-block 4
call    0 never executed
    #####: 2792:    mUndoBuffer.back() = aValue;
call    0 never executed
call    1 never executed
    #####: 2793:    ++mUndoIndex;
    #####: 2794:}
        -: 2795:
        -: 2796:// TODO
        -: 2797:// - multiline comments vs single-line: latter is blocking start of a ML
function _ZN10TextEditor8ColorizeEii called 2 returned 100% blocks executed 73%
        2: 2798:void TextEditor::Colorize(int aFromLine, int aLines)
        -: 2799:{
       2*: 2800:    int toLine = aLines == -1 ? (int)mLines.size() : std::min((int)mLines.size(), aFromLine + aLines);
        2: 2800-block 2
branch  0 taken 2 (fallthrough)
branch  1 taken 0
        2: 2800-block 3
call    2 returned 2
    %%%%%: 2800-block 5
call    3 never executed
call    4 never executed
        2: 2801:    mColorRangeMin = std::min(mColorRangeMin, aFromLine);
        2: 2801-block 8
call    0 returned 2
        2: 2802:    mColorRangeMax = std::max(mColorRangeMax, toLine);
call    0 returned 2
        2: 2803:    mColorRangeMin = std::max(0, mColorRangeMin);
call    0 returned 2
        2: 2804:    mColorRangeMax = std::max(mColorRangeMin, mColorRangeMax);
call    0 returned 2
        2: 2805:    mCheckComments = true;
        2: 2806:}
        -: 2807:
function _ZN10TextEditor13ColorizeRangeEii called 1 returned 100% blocks executed 63%
        1: 2808:void TextEditor::ColorizeRange(int aFromLine, int aToLine)
        -: 2809:{
       1*: 2810:    if (mLines.empty() || aFromLine >= aToLine || mLanguageDefinition == nullptr)
        1: 2810-block 2
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1: 2810-block 4
branch  3 taken 1 (fallthrough)
branch  4 taken 0
        1: 2810-block 5
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%: 2810-block 6
        1: 2810-block 7
        1: 2810-block 8
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    #####: 2811:        return;
    %%%%%: 2811-block 9
        -: 2812:
        1: 2813:    std::string buffer;
        1: 2813-block 10
call    0 returned 1
        1: 2814:    boost::cmatch results;
        1: 2814-block 13
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$: 2814-block 92
        1: 2815:    std::string id;
        1: 2815-block 15
call    0 returned 1
        -: 2816:
        1: 2817:    int endLine = std::max(0, std::min((int)mLines.size(), aToLine));
call    0 returned 1
call    1 returned 1
call    2 returned 1
       42: 2818:    for (int i = aFromLine; i < endLine; ++i)
       41: 2818-block 83
       42: 2818-block 84
branch  0 taken 41
branch  1 taken 1 (fallthrough)
        -: 2819:    {
       41: 2820:        auto& line = mLines[i];
       41: 2820-block 20
call    0 returned 41
        -: 2821:
       41: 2822:        if (line.empty())
call    0 returned 41
branch  1 taken 5 (fallthrough)
branch  2 taken 36
        5: 2823:            continue;
        5: 2823-block 23
        -: 2824:
       36: 2825:        buffer.resize(line.size());
       36: 2825-block 24
call    0 returned 36
call    1 returned 36
branch  2 taken 36 (fallthrough)
branch  3 taken 0 (throw)
      540: 2826:        for (size_t j = 0; j < line.size(); ++j)
       36: 2826-block 26
      540: 2826-block 30
call    0 returned 540
branch  1 taken 504
branch  2 taken 36 (fallthrough)
        -: 2827:        {
      504: 2828:            auto& col = line[j];
      504: 2828-block 27
call    0 returned 504
      504: 2829:            buffer[j] = col.mChar;
call    0 returned 504
      504: 2830:            col.mColorIndex = PaletteIndex::Default;
        -: 2831:        }
        -: 2832:
       36: 2833:        const char* bufferBegin = &buffer.front();
       36: 2833-block 32
call    0 returned 36
       36: 2834:        const char* bufferEnd = bufferBegin + buffer.size();
call    0 returned 36
        -: 2835:
       36: 2836:        auto last = bufferEnd;
        -: 2837:
      133: 2838:        for (auto first = bufferBegin; first != last; )
      133: 2838-block 82
branch  0 taken 97
branch  1 taken 36 (fallthrough)
        -: 2839:        {
       97: 2840:            const char* token_begin = nullptr;
       97: 2841:            const char* token_end = nullptr;
       97: 2842:            PaletteIndex token_color = PaletteIndex::Default;
        -: 2843:
       97: 2844:            bool hasTokenizeResult = false;
        -: 2845:
       97: 2846:            if (mLanguageDefinition->mTokenize != nullptr)
       97: 2846-block 35
branch  0 taken 97 (fallthrough)
branch  1 taken 0
        -: 2847:            {
       97: 2848:                if (mLanguageDefinition->mTokenize(first, last, token_begin, token_end, token_color))
       97: 2848-block 36
call    0 returned 97
branch  1 taken 97 (fallthrough)
branch  2 taken 0 (throw)
       97: 2848-block 37
branch  3 taken 97 (fallthrough)
branch  4 taken 0
       97: 2849:                    hasTokenizeResult = true;
       97: 2849-block 38
        -: 2850:            }
        -: 2851:
       97: 2852:            if (hasTokenizeResult == false)
       97: 2852-block 39
branch  0 taken 0 (fallthrough)
branch  1 taken 97
        -: 2853:            {
        -: 2854:                // todo : remove
        -: 2855:                //printf("using regex for %.*s\n", first + 10 < last ? 10 : int(last - first), first);
        -: 2856:
    #####: 2857:                for (const auto& p : mRegexList)
    %%%%%: 2857-block 40
call    0 never executed
call    1 never executed
    %%%%%: 2857-block 42
call    2 never executed
    %%%%%: 2857-block 49
call    3 never executed
    %%%%%: 2857-block 50
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
        -: 2858:                {
    #####: 2859:                    bool regexSearchResult = false;
    #####: 2860:                    try { regexSearchResult = boost::regex_search(first, last, results, p.first, boost::regex_constants::match_continuous); }
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 2860-block 44
    =====: 2861:                    catch (...) {}
    $$$$$: 2861-block 93
    $$$$$: 2861-block 94
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####: 2862:                    if (regexSearchResult)
    %%%%%: 2862-block 45
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 2863:                    {
    #####: 2864:                        hasTokenizeResult = true;
        -: 2865:
    #####: 2866:                        auto& v = *results.begin();
    %%%%%: 2866-block 46
call    0 never executed
call    1 never executed
    #####: 2867:                        token_begin = v.first;
    #####: 2868:                        token_end = v.second;
    #####: 2869:                        token_color = p.second;
    #####: 2870:                        break;
        -: 2871:                    }
        -: 2872:                }
        -: 2873:            }
        -: 2874:
       97: 2875:            if (hasTokenizeResult == false)
       97: 2875-block 53
branch  0 taken 0 (fallthrough)
branch  1 taken 97
        -: 2876:            {
    #####: 2877:                first++;
    %%%%%: 2877-block 54
        -: 2878:            }
        -: 2879:            else
        -: 2880:            {
       97: 2881:                const size_t token_length = token_end - token_begin;
        -: 2882:
       97: 2883:                if (token_color == PaletteIndex::Identifier)
       97: 2883-block 55
branch  0 taken 71 (fallthrough)
branch  1 taken 26
        -: 2884:                {
       71: 2885:                    id.assign(token_begin, token_end);
       71: 2885-block 56
call    0 returned 71
branch  1 taken 71 (fallthrough)
branch  2 taken 0 (throw)
        -: 2886:
        -: 2887:                    // todo : allmost all language definitions use lower case to specify keywords, so shouldn't this use ::tolower ?
       71: 2888:                    if (!mLanguageDefinition->mCaseSensitive)
       71: 2888-block 57
branch  0 taken 0 (fallthrough)
branch  1 taken 71
    #####: 2889:                        std::transform(id.begin(), id.end(), id.begin(), ::toupper);
    %%%%%: 2889-block 58
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
        -: 2890:
       71: 2891:                    if (!line[first - bufferBegin].mPreprocessor)
       71: 2891-block 62
call    0 returned 71
branch  1 taken 71 (fallthrough)
branch  2 taken 0
        -: 2892:                    {
       71: 2893:                        if (mLanguageDefinition->mKeywords.count(id) != 0)
       71: 2893-block 64
call    0 returned 71
branch  1 taken 71 (fallthrough)
branch  2 taken 0 (throw)
       71: 2893-block 65
branch  3 taken 29 (fallthrough)
branch  4 taken 42
       29: 2894:                            token_color = PaletteIndex::Keyword;
       29: 2894-block 66
       42: 2895:                        else if (mLanguageDefinition->mIdentifiers.count(id) != 0)
       42: 2895-block 67
call    0 returned 42
branch  1 taken 42 (fallthrough)
branch  2 taken 0 (throw)
       42: 2895-block 68
branch  3 taken 29 (fallthrough)
branch  4 taken 13
       29: 2896:                            token_color = PaletteIndex::KnownIdentifier;
       29: 2896-block 69
       13: 2897:                        else if (mLanguageDefinition->mPreprocIdentifiers.count(id) != 0)
       13: 2897-block 70
call    0 returned 13
branch  1 taken 13 (fallthrough)
branch  2 taken 0 (throw)
       13: 2897-block 71
branch  3 taken 0 (fallthrough)
branch  4 taken 13
    #####: 2898:                            token_color = PaletteIndex::PreprocIdentifier;
    %%%%%: 2898-block 72
        -: 2899:                    }
        -: 2900:                    else
        -: 2901:                    {
    #####: 2902:                        if (mLanguageDefinition->mPreprocIdentifiers.count(id) != 0)
    %%%%%: 2902-block 73
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%: 2902-block 74
branch  3 never executed (fallthrough)
branch  4 never executed
    #####: 2903:                            token_color = PaletteIndex::PreprocIdentifier;
    %%%%%: 2903-block 75
        -: 2904:                    }
        -: 2905:                }
        -: 2906:
      494: 2907:                for (size_t j = 0; j < token_length; ++j)
       97: 2907-block 76
      494: 2907-block 79
branch  0 taken 397
branch  1 taken 97 (fallthrough)
      397: 2908:                    line[(token_begin - bufferBegin) + j].mColorIndex = token_color;
      397: 2908-block 77
call    0 returned 397
        -: 2909:
       97: 2910:                first = token_end;
       97: 2910-block 80
        -: 2911:            }
        -: 2912:        }
        -: 2913:    }
        1: 2914:}
        1: 2914-block 85
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$: 2914-block 98
call    3 never executed
    $$$$$: 2914-block 100
call    4 never executed
    $$$$$: 2914-block 102
call    5 never executed
        -: 2915:
        -: 2916:template<class InputIt1, class InputIt2, class BinaryPredicate>
function _Z15ColorizerEqualsIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS1_IPN10TextEditor5GlyphESt6vectorISC_SaISC_EEEEZNSB_16ColorizeInternalEvEUlRS2_RKSC_E_EbT_SM_T0_SN_T1_ called 929 returned 100% blocks executed 57%
      929: 2917:bool ColorizerEquals(InputIt1 first1, InputIt1 last1,
        -: 2918:                     InputIt2 first2, InputIt2 last2, BinaryPredicate p)
        -: 2919:{
     929*: 2920:    for (; first1 != last1 && first2 != last2; ++first1, ++first2)
      929: 2920-block 2
    %%%%%: 2920-block 8
call    0 never executed
call    1 never executed
      929: 2920-block 10
call    2 returned 929
branch  3 taken 929 (fallthrough)
branch  4 taken 0
      929: 2920-block 12
call    5 returned 929
branch  6 taken 929 (fallthrough)
branch  7 taken 0
      929: 2920-block 14
    %%%%%: 2920-block 15
      929: 2920-block 16
branch  8 taken 929
branch  9 taken 0 (fallthrough)
        -: 2921:    {
      929: 2922:        if (!p(*first1, *first2))
      929: 2922-block 3
call    0 returned 929
call    1 returned 929
call    2 returned 929
branch  3 taken 929 (fallthrough)
branch  4 taken 0
      929: 2923:            return false;
      929: 2923-block 7
        -: 2924:    }
    #####: 2925:    return first1 == last1 && first2 == last2;
    %%%%%: 2925-block 17
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%: 2925-block 19
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 2925-block 21
    %%%%%: 2925-block 22
    %%%%%: 2925-block 23
        -: 2926:}
function _ZN10TextEditor16ColorizeInternalEv called 1077 returned 100% blocks executed 73%
     1077: 2927:void TextEditor::ColorizeInternal()
        -: 2928:{
    1077*: 2929:    if (mLines.empty() || mLanguageDefinition == nullptr)
     1077: 2929-block 2
call    0 returned 1077
branch  1 taken 1077 (fallthrough)
branch  2 taken 0
     1077: 2929-block 4
branch  3 taken 0 (fallthrough)
branch  4 taken 1077
    %%%%%: 2929-block 5
     1077: 2929-block 6
     1077: 2929-block 7
branch  5 taken 0 (fallthrough)
branch  6 taken 1077
    #####: 2930:        return;
    %%%%%: 2930-block 8
        -: 2931:
     1077: 2932:    if (mCheckComments)
     1077: 2932-block 9
branch  0 taken 1 (fallthrough)
branch  1 taken 1076
        -: 2933:    {
        1: 2934:        auto endLine = mLines.size();
        1: 2934-block 10
call    0 returned 1
        1: 2935:        auto endIndex = 0;
        1: 2936:        auto commentStartLine = endLine;
        1: 2937:        auto commentStartIndex = endIndex;
        1: 2938:        auto withinString = false;
        1: 2939:        auto withinSingleLineComment = false;
        1: 2940:        auto withinPreproc = false;
        1: 2941:        auto firstChar = true;			// there is no other non-whitespace characters in the line before
        1: 2942:        auto concatenate = false;		// '\' on the very end of the line
        1: 2943:        auto currentLine = 0;
        1: 2944:        auto currentIndex = 0;
      510: 2945:        while (currentLine < endLine || currentIndex < endIndex)
      510: 2945-block 124
branch  0 taken 509
branch  1 taken 1 (fallthrough)
        1: 2945-block 125
branch  2 taken 0
branch  3 taken 1 (fallthrough)
        -: 2946:        {
      509: 2947:            auto& line = mLines[currentLine];
      509: 2947-block 12
call    0 returned 509
        -: 2948:
      509: 2949:            if (currentIndex == 0 && !concatenate)
branch  0 taken 41 (fallthrough)
branch  1 taken 468
       41: 2949-block 14
branch  2 taken 41 (fallthrough)
branch  3 taken 0
        -: 2950:            {
       41: 2951:                withinSingleLineComment = false;
       41: 2952:                withinPreproc = false;
       41: 2953:                firstChar = true;
       41: 2953-block 15
        -: 2954:            }
        -: 2955:
      509: 2956:            concatenate = false;
        -: 2957:
      509: 2958:            if (!line.empty())
      509: 2958-block 16
call    0 returned 509
branch  1 taken 504 (fallthrough)
branch  2 taken 5
        -: 2959:            {
      504: 2960:                auto& g = line[currentIndex];
      504: 2960-block 18
call    0 returned 504
      504: 2961:                auto c = g.mChar;
        -: 2962:
      504: 2963:                if (c != mLanguageDefinition->mPreprocChar && !isspace(c))
branch  0 taken 504 (fallthrough)
branch  1 taken 0
      504: 2963-block 20
branch  2 taken 397 (fallthrough)
branch  3 taken 107
      397: 2964:                    firstChar = false;
      397: 2964-block 21
        -: 2965:
     504*: 2966:                if (currentIndex == (int)line.size() - 1 && line[line.size() - 1].mChar == '\\')
      504: 2966-block 22
call    0 returned 504
branch  1 taken 36 (fallthrough)
branch  2 taken 468
       36: 2966-block 24
call    3 returned 36
call    4 returned 36
branch  5 taken 0 (fallthrough)
branch  6 taken 36
    %%%%%: 2966-block 27
      504: 2966-block 28
      504: 2966-block 29
branch  7 taken 0 (fallthrough)
branch  8 taken 504
    #####: 2967:                    concatenate = true;
    %%%%%: 2967-block 30
        -: 2968:
     504*: 2969:                bool inComment = (commentStartLine < currentLine || (commentStartLine == currentLine && commentStartIndex <= currentIndex));
      504: 2969-block 31
branch  0 taken 504 (fallthrough)
branch  1 taken 0
      504: 2969-block 32
branch  2 taken 0 (fallthrough)
branch  3 taken 504
    %%%%%: 2969-block 33
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 2969-block 34
      504: 2969-block 35
        -: 2970:
      504: 2971:                if (withinString)
      504: 2971-block 36
branch  0 taken 0 (fallthrough)
branch  1 taken 504
        -: 2972:                {
    #####: 2973:                    line[currentIndex].mMultiLineComment = inComment;
    %%%%%: 2973-block 37
call    0 never executed
        -: 2974:
    #####: 2975:                    if (c == '\"')
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 2976:                    {
    #####: 2977:                        if (currentIndex + 1 < (int)line.size() && line[currentIndex + 1].mChar == '\"')
    %%%%%: 2977-block 39
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%: 2977-block 41
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 2977-block 43
    %%%%%: 2977-block 44
    %%%%%: 2977-block 45
branch  6 never executed (fallthrough)
branch  7 never executed
        -: 2978:                        {
    #####: 2979:                            currentIndex += 1;
    #####: 2980:                            if (currentIndex < (int)line.size())
    %%%%%: 2980-block 46
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 2981:                                line[currentIndex].mMultiLineComment = inComment;
    %%%%%: 2981-block 48
call    0 never executed
        -: 2982:                        }
        -: 2983:                        else
    #####: 2984:                            withinString = false;
    %%%%%: 2984-block 50
        -: 2985:                    }
    #####: 2986:                    else if (c == '\\')
    %%%%%: 2986-block 51
branch  0 never executed (fallthrough)
branch  1 never executed
        -: 2987:                    {
    #####: 2988:                        currentIndex += 1;
    #####: 2989:                        if (currentIndex < (int)line.size())
    %%%%%: 2989-block 52
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####: 2990:                            line[currentIndex].mMultiLineComment = inComment;
    %%%%%: 2990-block 54
call    0 never executed
        -: 2991:                    }
        -: 2992:                }
        -: 2993:                else
        -: 2994:                {
      504: 2995:                    if (firstChar && c == mLanguageDefinition->mPreprocChar)
      504: 2995-block 56
branch  0 taken 66 (fallthrough)
branch  1 taken 438
       66: 2995-block 57
branch  2 taken 0 (fallthrough)
branch  3 taken 66
    #####: 2996:                        withinPreproc = true;
    %%%%%: 2996-block 58
        -: 2997:
      504: 2998:                    if (c == '\"')
      504: 2998-block 59
branch  0 taken 0 (fallthrough)
branch  1 taken 504
        -: 2999:                    {
    #####: 3000:                        withinString = true;
    #####: 3001:                        line[currentIndex].mMultiLineComment = inComment;
    %%%%%: 3001-block 60
call    0 never executed
        -: 3002:                    }
        -: 3003:                    else
        -: 3004:                    {
function _ZZN10TextEditor16ColorizeInternalEvENKUlRKcRKNS_5GlyphEE_clES1_S4_ called 929 returned 100% blocks executed 100%
      929: 3005:                        auto pred = [](const char& a, const Glyph& b) { return a == b.mChar; };
      929: 3005-block 2
      504: 3006:                        auto from = line.begin() + currentIndex;
      504: 3006-block 62
call    0 returned 504
call    1 returned 504
      504: 3007:                        auto& startStr = mLanguageDefinition->mCommentStart;
      504: 3008:                        auto& singleStartStr = mLanguageDefinition->mSingleLineComment;
        -: 3009:
     761*: 3010:                        if (!withinSingleLineComment && currentIndex + startStr.size() <= line.size() &&
branch  0 taken 504 (fallthrough)
branch  1 taken 0
      504: 3010-block 65
call    2 returned 504
call    3 returned 504
branch  4 taken 257 (fallthrough)
branch  5 taken 247
branch  6 taken 0 (fallthrough)
branch  7 taken 257
    %%%%%: 3010-block 74
      504: 3010-block 75
      504: 3010-block 76
branch  8 taken 0 (fallthrough)
branch  9 taken 504
      257: 3011:                            ColorizerEquals(startStr.begin(), startStr.end(), from, from + startStr.size(), pred))
      257: 3011-block 68
call    0 returned 257
call    1 returned 257
call    2 returned 257
call    3 returned 257
call    4 returned 257
        -: 3012:                        {
    #####: 3013:                            commentStartLine = currentLine;
    #####: 3014:                            commentStartIndex = currentIndex;
    %%%%%: 3014-block 77
        -: 3015:                        }
     1008: 3016:                        else if (singleStartStr.size() > 0 &&
      504: 3016-block 78
call    0 returned 504
branch  1 taken 504 (fallthrough)
branch  2 taken 0
    1008*: 3017:                                 currentIndex + singleStartStr.size() <= line.size() &&
branch  0 taken 504 (fallthrough)
branch  1 taken 0
      504: 3017-block 80
call    2 returned 504
call    3 returned 504
branch  4 taken 0 (fallthrough)
branch  5 taken 504
    %%%%%: 3017-block 89
      504: 3017-block 90
      504: 3017-block 91
branch  6 taken 0 (fallthrough)
branch  7 taken 504
      504: 3018:                                 ColorizerEquals(singleStartStr.begin(), singleStartStr.end(), from, from + singleStartStr.size(), pred))
      504: 3018-block 83
call    0 returned 504
call    1 returned 504
call    2 returned 504
call    3 returned 504
call    4 returned 504
        -: 3019:                        {
    #####: 3020:                            withinSingleLineComment = true;
    %%%%%: 3020-block 92
        -: 3021:                        }
        -: 3022:
     504*: 3023:                        inComment = (commentStartLine < currentLine || (commentStartLine == currentLine && commentStartIndex <= currentIndex));
      504: 3023-block 93
branch  0 taken 504 (fallthrough)
branch  1 taken 0
      504: 3023-block 94
branch  2 taken 0 (fallthrough)
branch  3 taken 504
    %%%%%: 3023-block 95
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%: 3023-block 96
      504: 3023-block 97
        -: 3024:
      504: 3025:                        line[currentIndex].mMultiLineComment = inComment;
      504: 3025-block 98
call    0 returned 504
      504: 3026:                        line[currentIndex].mComment = withinSingleLineComment;
call    0 returned 504
        -: 3027:
      504: 3028:                        auto& endStr = mLanguageDefinition->mCommentEnd;
     672*: 3029:                        if (currentIndex + 1 >= (int)endStr.size() &&
call    0 returned 504
branch  1 taken 168 (fallthrough)
branch  2 taken 336
branch  3 taken 0 (fallthrough)
branch  4 taken 168
    %%%%%: 3029-block 110
      504: 3029-block 111
      672: 3030:                            ColorizerEquals(endStr.begin(), endStr.end(), from + 1 - endStr.size(), from + 1, pred))
      168: 3030-block 102
call    0 returned 168
call    1 returned 168
call    2 returned 168
call    3 returned 168
call    4 returned 168
call    5 returned 168
call    6 returned 168
      504: 3030-block 112
branch  7 taken 0 (fallthrough)
branch  8 taken 504
        -: 3031:                        {
    #####: 3032:                            commentStartIndex = endIndex;
    #####: 3033:                            commentStartLine = endLine;
    %%%%%: 3033-block 113
        -: 3034:                        }
        -: 3035:                    }
        -: 3036:                }
      504: 3037:                if (currentIndex < (int)line.size())
      504: 3037-block 115
call    0 returned 504
branch  1 taken 504 (fallthrough)
branch  2 taken 0
      504: 3038:                    line[currentIndex].mPreprocessor = withinPreproc;
      504: 3038-block 117
call    0 returned 504
      504: 3039:                currentIndex += UTF8CharLength(c);
      504: 3039-block 119
call    0 returned 504
      504: 3040:                if (currentIndex >= (int)line.size())
call    0 returned 504
branch  1 taken 36 (fallthrough)
branch  2 taken 468
        -: 3041:                {
       36: 3042:                    currentIndex = 0;
       36: 3043:                    ++currentLine;
       36: 3043-block 122
        -: 3044:                }
        -: 3045:            }
        -: 3046:            else
        -: 3047:            {
        5: 3048:                currentIndex = 0;
        5: 3049:                ++currentLine;
        5: 3049-block 123
        -: 3050:            }
        -: 3051:        }
        1: 3052:        mCheckComments = false;
        1: 3052-block 126
        -: 3053:    }
        -: 3054:
     1077: 3055:    if (mColorRangeMin < mColorRangeMax)
     1077: 3055-block 127
branch  0 taken 1 (fallthrough)
branch  1 taken 1076
        -: 3056:    {
       1*: 3057:        const int increment = (mLanguageDefinition->mTokenize == nullptr) ? 10 : 10000;
        1: 3057-block 128
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%: 3057-block 129
        1: 3057-block 130
        1: 3058:        const int to = std::min(mColorRangeMin + increment, mColorRangeMax);
        1: 3058-block 131
call    0 returned 1
        1: 3059:        ColorizeRange(mColorRangeMin, to);
call    0 returned 1
        1: 3060:        mColorRangeMin = to;
        -: 3061:
        1: 3062:        if (mColorRangeMax == mColorRangeMin)
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        -: 3063:        {
        1: 3064:            mColorRangeMin = std::numeric_limits<int>::max();
        1: 3064-block 134
call    0 returned 1
        1: 3065:            mColorRangeMax = 0;
        -: 3066:        }
        1: 3067:        return;
        1: 3067-block 136
        -: 3068:    }
        -: 3069:}
        -: 3070:
function _ZN10TextEditor14GetDarkPaletteEv called 1 returned 100% blocks executed 100%
        1: 3071:const TextEditor::Palette& TextEditor::GetDarkPalette()
        -: 3072:{
        -: 3073:    const static Palette p = { {
        -: 3074:                                       0xdcdfe4ff,	// Default
        -: 3075:                                       0xe06c75ff,	// Keyword
        -: 3076:                                       0xe5c07bff,	// Number
        -: 3077:                                       0x98c379ff,	// String
        -: 3078:                                       0xe0a070ff, // Char literal
        -: 3079:                                       0x6a7384ff, // Punctuation
        -: 3080:                                       0x808040ff,	// Preprocessor
        -: 3081:                                       0xdcdfe4ff, // Identifier
        -: 3082:                                       0x61afefff, // Known identifier
        -: 3083:                                       0xc678ddff, // Preproc identifier
        -: 3084:                                       0x3696a2ff, // Comment (single line)
        -: 3085:                                       0x3696a2ff, // Comment (multi line)
        -: 3086:                                       0x282c34ff, // Background
        -: 3087:                                       0xe0e0e0ff, // Cursor
        -: 3088:                                       0x2060a080, // Selection
        -: 3089:                                       0xff200080, // ErrorMarker
        -: 3090:                                       0xffffff15, // ControlCharacter
        -: 3091:                                       0x0080f040, // Breakpoint
        -: 3092:                                       0x7a8394ff, // Line number
        -: 3093:                                       0x00000040, // Current line fill
        -: 3094:                                       0x80808040, // Current line fill (inactive)
        -: 3095:                                       0xa0a0a040, // Current line edge
        -: 3096:                                       0x4B1515FF,
        -: 3097:                                       0x10516bff
        -: 3098:                               } };
        1: 3099:    return p;
        1: 3099-block 2
        -: 3100:}
        -: 3101:
function _ZN10TextEditor17GetMarianaPaletteEv called 0 returned 0% blocks executed 0%
    #####: 3102:const TextEditor::Palette& TextEditor::GetMarianaPalette()
        -: 3103:{
        -: 3104:    const static Palette p = { {
        -: 3105:                                       0xffffffff,	// Default
        -: 3106:                                       0xc695c6ff,	// Keyword
        -: 3107:                                       0xf9ae58ff,	// Number
        -: 3108:                                       0x99c794ff,	// String
        -: 3109:                                       0xe0a070ff, // Char literal
        -: 3110:                                       0x5fb4b4ff, // Punctuation
        -: 3111:                                       0x808040ff,	// Preprocessor
        -: 3112:                                       0xffffffff, // Identifier
        -: 3113:                                       0x4dc69bff, // Known identifier
        -: 3114:                                       0xe0a0ffff, // Preproc identifier
        -: 3115:                                       0xa6acb9ff, // Comment (single line)
        -: 3116:                                       0xa6acb9ff, // Comment (multi line)
        -: 3117:                                       0x303841ff, // Background
        -: 3118:                                       0xe0e0e0ff, // Cursor
        -: 3119:                                       0x6e7a8580, // Selection
        -: 3120:                                       0xec5f6680, // ErrorMarker
        -: 3121:                                       0xffffff30, // ControlCharacter
        -: 3122:                                       0x0080f040, // Breakpoint
        -: 3123:                                       0xffffffb0, // Line number
        -: 3124:                                       0x4e5a6580, // Current line fill
        -: 3125:                                       0x4e5a6530, // Current line fill (inactive)
        -: 3126:                                       0x4e5a65b0, // Current line edge
        -: 3127:                               } };
    #####: 3128:    return p;
    %%%%%: 3128-block 2
        -: 3129:}
        -: 3130:
function _ZN10TextEditor15GetLightPaletteEv called 0 returned 0% blocks executed 0%
    #####: 3131:const TextEditor::Palette& TextEditor::GetLightPalette()
        -: 3132:{
        -: 3133:    const static Palette p = { {
        -: 3134:                                       0x404040ff,	// None
        -: 3135:                                       0x060cffff,	// Keyword
        -: 3136:                                       0x008000ff,	// Number
        -: 3137:                                       0xa02020ff,	// String
        -: 3138:                                       0x704030ff, // Char literal
        -: 3139:                                       0x000000ff, // Punctuation
        -: 3140:                                       0x606040ff,	// Preprocessor
        -: 3141:                                       0x404040ff, // Identifier
        -: 3142:                                       0x106060ff, // Known identifier
        -: 3143:                                       0xa040c0ff, // Preproc identifier
        -: 3144:                                       0x205020ff, // Comment (single line)
        -: 3145:                                       0x205040ff, // Comment (multi line)
        -: 3146:                                       0xffffffff, // Background
        -: 3147:                                       0x000000ff, // Cursor
        -: 3148:                                       0x00006040, // Selection
        -: 3149:                                       0xff1000a0, // ErrorMarker
        -: 3150:                                       0x90909090, // ControlCharacter
        -: 3151:                                       0x0080f080, // Breakpoint
        -: 3152:                                       0x005050ff, // Line number
        -: 3153:                                       0x00000040, // Current line fill
        -: 3154:                                       0x80808040, // Current line fill (inactive)
        -: 3155:                                       0x00000040, // Current line edge
        -: 3156:                               } };
    #####: 3157:    return p;
    %%%%%: 3157-block 2
        -: 3158:}
        -: 3159:
function _ZN10TextEditor19GetRetroBluePaletteEv called 0 returned 0% blocks executed 0%
    #####: 3160:const TextEditor::Palette& TextEditor::GetRetroBluePalette()
        -: 3161:{
        -: 3162:    const static Palette p = { {
        -: 3163:                                       0xffff00ff,	// None
        -: 3164:                                       0x00ffffff,	// Keyword
        -: 3165:                                       0x00ff00ff,	// Number
        -: 3166:                                       0x008080ff,	// String
        -: 3167:                                       0x008080ff, // Char literal
        -: 3168:                                       0xffffffff, // Punctuation
        -: 3169:                                       0x008000ff,	// Preprocessor
        -: 3170:                                       0xffff00ff, // Identifier
        -: 3171:                                       0xffffffff, // Known identifier
        -: 3172:                                       0xff00ffff, // Preproc identifier
        -: 3173:                                       0x808080ff, // Comment (single line)
        -: 3174:                                       0x404040ff, // Comment (multi line)
        -: 3175:                                       0x000080ff, // Background
        -: 3176:                                       0xff8000ff, // Cursor
        -: 3177:                                       0x00ffff80, // Selection
        -: 3178:                                       0xff0000a0, // ErrorMarker
        -: 3179:                                       0x0080ff80, // Breakpoint
        -: 3180:                                       0x008080ff, // Line number
        -: 3181:                                       0x00000040, // Current line fill
        -: 3182:                                       0x80808040, // Current line fill (inactive)
        -: 3183:                                       0x00000040, // Current line edge
        -: 3184:                               } };
    #####: 3185:    return p;
    %%%%%: 3185-block 2
        -: 3186:}
        -: 3187:
function _ZN10TextEditor13GetCatppuccinEv called 1 returned 100% blocks executed 100%
        1: 3188:const TextEditor::Palette& TextEditor::GetCatppuccin()
        -: 3189:{
        -: 3190:    const static Palette p = { {
        -: 3191:                                       0xf4dbd6ff,	// None
        -: 3192:                                       0xf0c6c6ff,	// Keyword
        -: 3193:                                       0xf5bde6ff,	// Number
        -: 3194:                                       0xc6a0f6ff,	// String
        -: 3195:                                       0xed8796ff, // Char literal
        -: 3196:                                       0xee99a0ff, // Punctuation
        -: 3197:                                       0xf5a97fff,	// Preprocessor
        -: 3198:                                       0xeed49fff, // Identifier
        -: 3199:                                       0xa6da95ff, // Known identifier
        -: 3200:                                       0x8bd5caff, // Preproc identifier
        -: 3201:                                       0x91d7e3ff, // Comment (single line)
        -: 3202:                                       0x7dc4e4ff, // Comment (multi line)
        -: 3203:                                       0x24273aff, // Background
        -: 3204:                                       0xb7bdf8ff, // Cursor
        -: 3205:                                       0x2060a080, // Selection
        -: 3206:                                       0xb8c0e0ff, // ErrorMarker
        -: 3207:                                       0x0080ff80, // Breakpoint
        -: 3208:                                       0x8aadf4ff, // Line number
        -: 3209:                                       0xb8c0e0ff, // Current line fill
        -: 3210:                                       0xa5adcbff, // Current line fill (inactive)
        -: 3211:                                       0x939ab7ff, // Current line edge
        -: 3212:                                       0xFFFFFFFF,
        -: 3213:                                       0x4B1515FF,
        -: 3214:                                       0xb7bdf850
        -: 3215:                                       //                                       0x10516bff
        -: 3216:                   } };
        1: 3217:    return p;
        1: 3217-block 2
        -: 3218:}
        -: 3219:
        -: 3220:
        -: 3221:const std::unordered_map<char, char> TextEditor::OPEN_TO_CLOSE_CHAR = {
        -: 3222:        {'{', '}'},
        -: 3223:        {'(' , ')'},
        -: 3224:        {'[' , ']'}
        -: 3225:};
        -: 3226:const std::unordered_map<char, char> TextEditor::CLOSE_TO_OPEN_CHAR = {
        -: 3227:        {'}', '{'},
        -: 3228:        {')' , '('},
        -: 3229:        {']' , '['}
        -: 3230:};
        -: 3231:
        -: 3232:TextEditor::PaletteId TextEditor::defaultPalette = TextEditor::PaletteId::Dark;
